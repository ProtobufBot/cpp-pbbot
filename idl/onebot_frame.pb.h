// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onebot_frame.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_onebot_5fframe_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_onebot_5fframe_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "onebot_api.pb.h"
#include "onebot_event.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_onebot_5fframe_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_onebot_5fframe_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onebot_5fframe_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_onebot_5fframe_2eproto_metadata_getter(int index);
namespace onebot {
class Frame;
struct FrameDefaultTypeInternal;
extern FrameDefaultTypeInternal _Frame_default_instance_;
class Frame_ExtraEntry_DoNotUse;
struct Frame_ExtraEntry_DoNotUseDefaultTypeInternal;
extern Frame_ExtraEntry_DoNotUseDefaultTypeInternal _Frame_ExtraEntry_DoNotUse_default_instance_;
}  // namespace onebot
PROTOBUF_NAMESPACE_OPEN
template<> ::onebot::Frame* Arena::CreateMaybeMessage<::onebot::Frame>(Arena*);
template<> ::onebot::Frame_ExtraEntry_DoNotUse* Arena::CreateMaybeMessage<::onebot::Frame_ExtraEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace onebot {

enum Frame_FrameType : int {
  Frame_FrameType_TUNKNOWN = 0,
  Frame_FrameType_TPrivateMessageEvent = 101,
  Frame_FrameType_TGroupMessageEvent = 102,
  Frame_FrameType_TGroupUploadNoticeEvent = 103,
  Frame_FrameType_TGroupAdminNoticeEvent = 104,
  Frame_FrameType_TGroupDecreaseNoticeEvent = 105,
  Frame_FrameType_TGroupIncreaseNoticeEvent = 106,
  Frame_FrameType_TGroupBanNoticeEvent = 107,
  Frame_FrameType_TFriendAddNoticeEvent = 108,
  Frame_FrameType_TGroupRecallNoticeEvent = 109,
  Frame_FrameType_TFriendRecallNoticeEvent = 110,
  Frame_FrameType_TFriendRequestEvent = 111,
  Frame_FrameType_TGroupRequestEvent = 112,
  Frame_FrameType_TSendPrivateMsgReq = 201,
  Frame_FrameType_TSendGroupMsgReq = 202,
  Frame_FrameType_TSendMsgReq = 203,
  Frame_FrameType_TDeleteMsgReq = 204,
  Frame_FrameType_TGetMsgReq = 205,
  Frame_FrameType_TGetForwardMsgReq = 206,
  Frame_FrameType_TSendLikeReq = 207,
  Frame_FrameType_TSetGroupKickReq = 208,
  Frame_FrameType_TSetGroupBanReq = 209,
  Frame_FrameType_TSetGroupAnonymousReq = 210,
  Frame_FrameType_TSetGroupWholeBanReq = 211,
  Frame_FrameType_TSetGroupAdminReq = 212,
  Frame_FrameType_TSetGroupAnonymousBanReq = 213,
  Frame_FrameType_TSetGroupCardReq = 214,
  Frame_FrameType_TSetGroupNameReq = 215,
  Frame_FrameType_TSetGroupLeaveReq = 216,
  Frame_FrameType_TSetGroupSpecialTitleReq = 217,
  Frame_FrameType_TSetFriendAddRequestReq = 218,
  Frame_FrameType_TSetGroupAddRequestReq = 219,
  Frame_FrameType_TGetLoginInfoReq = 220,
  Frame_FrameType_TGetStrangerInfoReq = 221,
  Frame_FrameType_TGetFriendListReq = 222,
  Frame_FrameType_TGetGroupInfoReq = 223,
  Frame_FrameType_TGetGroupListReq = 224,
  Frame_FrameType_TGetGroupMemberInfoReq = 225,
  Frame_FrameType_TGetGroupMemberListReq = 226,
  Frame_FrameType_TGetGroupHonorInfoReq = 227,
  Frame_FrameType_TGetCookiesReq = 228,
  Frame_FrameType_TGetCsrfTokenReq = 229,
  Frame_FrameType_TGetCredentialsReq = 230,
  Frame_FrameType_TGetRecordReq = 231,
  Frame_FrameType_TGetImageReq = 232,
  Frame_FrameType_TCanSendImageReq = 233,
  Frame_FrameType_TCanSendRecordReq = 234,
  Frame_FrameType_TGetStatusReq = 235,
  Frame_FrameType_TGetVersionInfoReq = 236,
  Frame_FrameType_TSetRestartReq = 237,
  Frame_FrameType_TCleanCacheReq = 238,
  Frame_FrameType_TSendPrivateMsgResp = 301,
  Frame_FrameType_TSendGroupMsgResp = 302,
  Frame_FrameType_TSendMsgResp = 303,
  Frame_FrameType_TDeleteMsgResp = 304,
  Frame_FrameType_TGetMsgResp = 305,
  Frame_FrameType_TGetForwardMsgResp = 306,
  Frame_FrameType_TSendLikeResp = 307,
  Frame_FrameType_TSetGroupKickResp = 308,
  Frame_FrameType_TSetGroupBanResp = 309,
  Frame_FrameType_TSetGroupAnonymousResp = 310,
  Frame_FrameType_TSetGroupWholeBanResp = 311,
  Frame_FrameType_TSetGroupAdminResp = 312,
  Frame_FrameType_TSetGroupAnonymousBanResp = 313,
  Frame_FrameType_TSetGroupCardResp = 314,
  Frame_FrameType_TSetGroupNameResp = 315,
  Frame_FrameType_TSetGroupLeaveResp = 316,
  Frame_FrameType_TSetGroupSpecialTitleResp = 317,
  Frame_FrameType_TSetFriendAddRequestResp = 318,
  Frame_FrameType_TSetGroupAddRequestResp = 319,
  Frame_FrameType_TGetLoginInfoResp = 320,
  Frame_FrameType_TGetStrangerInfoResp = 321,
  Frame_FrameType_TGetFriendListResp = 322,
  Frame_FrameType_TGetGroupInfoResp = 323,
  Frame_FrameType_TGetGroupListResp = 324,
  Frame_FrameType_TGetGroupMemberInfoResp = 325,
  Frame_FrameType_TGetGroupMemberListResp = 326,
  Frame_FrameType_TGetGroupHonorInfoResp = 327,
  Frame_FrameType_TGetCookiesResp = 328,
  Frame_FrameType_TGetCsrfTokenResp = 329,
  Frame_FrameType_TGetCredentialsResp = 330,
  Frame_FrameType_TGetRecordResp = 331,
  Frame_FrameType_TGetImageResp = 332,
  Frame_FrameType_TCanSendImageResp = 333,
  Frame_FrameType_TCanSendRecordResp = 334,
  Frame_FrameType_TGetStatusResp = 335,
  Frame_FrameType_TGetVersionInfoResp = 336,
  Frame_FrameType_TSetRestartResp = 337,
  Frame_FrameType_TCleanCacheResp = 338,
  Frame_FrameType_Frame_FrameType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Frame_FrameType_Frame_FrameType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Frame_FrameType_IsValid(int value);
constexpr Frame_FrameType Frame_FrameType_FrameType_MIN = Frame_FrameType_TUNKNOWN;
constexpr Frame_FrameType Frame_FrameType_FrameType_MAX = Frame_FrameType_TCleanCacheResp;
constexpr int Frame_FrameType_FrameType_ARRAYSIZE = Frame_FrameType_FrameType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Frame_FrameType_descriptor();
template<typename T>
inline const std::string& Frame_FrameType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Frame_FrameType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Frame_FrameType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Frame_FrameType_descriptor(), enum_t_value);
}
inline bool Frame_FrameType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Frame_FrameType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Frame_FrameType>(
    Frame_FrameType_descriptor(), name, value);
}
// ===================================================================

class Frame_ExtraEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Frame_ExtraEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Frame_ExtraEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Frame_ExtraEntry_DoNotUse();
  explicit constexpr Frame_ExtraEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit Frame_ExtraEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Frame_ExtraEntry_DoNotUse& other);
  static const Frame_ExtraEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Frame_ExtraEntry_DoNotUse*>(&_Frame_ExtraEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "onebot.Frame.ExtraEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "onebot.Frame.ExtraEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_onebot_5fframe_2eproto);
    return ::descriptor_table_onebot_5fframe_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class Frame PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onebot.Frame) */ {
 public:
  inline Frame() : Frame(nullptr) {}
  virtual ~Frame();
  explicit constexpr Frame(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Frame(const Frame& from);
  Frame(Frame&& from) noexcept
    : Frame() {
    *this = ::std::move(from);
  }

  inline Frame& operator=(const Frame& from) {
    CopyFrom(from);
    return *this;
  }
  inline Frame& operator=(Frame&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Frame& default_instance() {
    return *internal_default_instance();
  }
  enum DataCase {
    kPrivateMessageEvent = 101,
    kGroupMessageEvent = 102,
    kGroupUploadNoticeEvent = 103,
    kGroupAdminNoticeEvent = 104,
    kGroupDecreaseNoticeEvent = 105,
    kGroupIncreaseNoticeEvent = 106,
    kGroupBanNoticeEvent = 107,
    kFriendAddNoticeEvent = 108,
    kGroupRecallNoticeEvent = 109,
    kFriendRecallNoticeEvent = 110,
    kFriendRequestEvent = 111,
    kGroupRequestEvent = 112,
    kSendPrivateMsgReq = 201,
    kSendGroupMsgReq = 202,
    kSendMsgReq = 203,
    kDeleteMsgReq = 204,
    kGetMsgReq = 205,
    kGetForwardMsgReq = 206,
    kSendLikeReq = 207,
    kSetGroupKickReq = 208,
    kSetGroupBanReq = 209,
    kSetGroupAnonymousBanReq = 210,
    kSetGroupWholeBanReq = 211,
    kSetGroupAdminReq = 212,
    kSetGroupAnonymousReq = 213,
    kSetGroupCardReq = 214,
    kSetGroupNameReq = 215,
    kSetGroupLeaveReq = 216,
    kSetGroupSpecialTitleReq = 217,
    kSetFriendAddRequestReq = 218,
    kSetGroupAddRequestReq = 219,
    kGetLoginInfoReq = 220,
    kGetStrangerInfoReq = 221,
    kGetFriendListReq = 222,
    kGetGroupInfoReq = 223,
    kGetGroupListReq = 224,
    kGetGroupMemberInfoReq = 225,
    kGetGroupMemberListReq = 226,
    kGetGroupHonorInfoReq = 227,
    kGetCookiesReq = 228,
    kGetCsrfTokenReq = 229,
    kGetCredentialsReq = 230,
    kGetRecordReq = 231,
    kGetImageReq = 232,
    kCanSendImageReq = 233,
    kCanSendRecordReq = 234,
    kGetStatusReq = 235,
    kGetVersionInfoReq = 236,
    kSetRestartReq = 237,
    kCleanCacheReq = 238,
    kSendPrivateMsgResp = 301,
    kSendGroupMsgResp = 302,
    kSendMsgResp = 303,
    kDeleteMsgResp = 304,
    kGetMsgResp = 305,
    kGetForwardMsgResp = 306,
    kSendLikeResp = 307,
    kSetGroupKickResp = 308,
    kSetGroupBanResp = 309,
    kSetGroupAnonymousBanResp = 310,
    kSetGroupWholeBanResp = 311,
    kSetGroupAdminResp = 312,
    kSetGroupAnonymousResp = 313,
    kSetGroupCardResp = 314,
    kSetGroupNameResp = 315,
    kSetGroupLeaveResp = 316,
    kSetGroupSpecialTitleResp = 317,
    kSetFriendAddRequestResp = 318,
    kSetGroupAddRequestResp = 319,
    kGetLoginInfoResp = 320,
    kGetStrangerInfoResp = 321,
    kGetFriendListResp = 322,
    kGetGroupInfoResp = 323,
    kGetGroupListResp = 324,
    kGetGroupMemberInfoResp = 325,
    kGetGroupMemberListResp = 326,
    kGetGroupHonorInfoResp = 327,
    kGetCookiesResp = 328,
    kGetCsrfTokenResp = 329,
    kGetCredentialsResp = 330,
    kGetRecordResp = 331,
    kGetImageResp = 332,
    kCanSendImageResp = 333,
    kCanSendRecordResp = 334,
    kGetStatusResp = 335,
    kGetVersionInfoResp = 336,
    kSetRestartResp = 337,
    kCleanCacheResp = 338,
    DATA_NOT_SET = 0,
  };

  static inline const Frame* internal_default_instance() {
    return reinterpret_cast<const Frame*>(
               &_Frame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Frame& a, Frame& b) {
    a.Swap(&b);
  }
  inline void Swap(Frame* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Frame* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Frame* New() const final {
    return CreateMaybeMessage<Frame>(nullptr);
  }

  Frame* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Frame>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Frame& from);
  void MergeFrom(const Frame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Frame* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onebot.Frame";
  }
  protected:
  explicit Frame(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_onebot_5fframe_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------


  typedef Frame_FrameType FrameType;
  static constexpr FrameType TUNKNOWN =
    Frame_FrameType_TUNKNOWN;
  static constexpr FrameType TPrivateMessageEvent =
    Frame_FrameType_TPrivateMessageEvent;
  static constexpr FrameType TGroupMessageEvent =
    Frame_FrameType_TGroupMessageEvent;
  static constexpr FrameType TGroupUploadNoticeEvent =
    Frame_FrameType_TGroupUploadNoticeEvent;
  static constexpr FrameType TGroupAdminNoticeEvent =
    Frame_FrameType_TGroupAdminNoticeEvent;
  static constexpr FrameType TGroupDecreaseNoticeEvent =
    Frame_FrameType_TGroupDecreaseNoticeEvent;
  static constexpr FrameType TGroupIncreaseNoticeEvent =
    Frame_FrameType_TGroupIncreaseNoticeEvent;
  static constexpr FrameType TGroupBanNoticeEvent =
    Frame_FrameType_TGroupBanNoticeEvent;
  static constexpr FrameType TFriendAddNoticeEvent =
    Frame_FrameType_TFriendAddNoticeEvent;
  static constexpr FrameType TGroupRecallNoticeEvent =
    Frame_FrameType_TGroupRecallNoticeEvent;
  static constexpr FrameType TFriendRecallNoticeEvent =
    Frame_FrameType_TFriendRecallNoticeEvent;
  static constexpr FrameType TFriendRequestEvent =
    Frame_FrameType_TFriendRequestEvent;
  static constexpr FrameType TGroupRequestEvent =
    Frame_FrameType_TGroupRequestEvent;
  static constexpr FrameType TSendPrivateMsgReq =
    Frame_FrameType_TSendPrivateMsgReq;
  static constexpr FrameType TSendGroupMsgReq =
    Frame_FrameType_TSendGroupMsgReq;
  static constexpr FrameType TSendMsgReq =
    Frame_FrameType_TSendMsgReq;
  static constexpr FrameType TDeleteMsgReq =
    Frame_FrameType_TDeleteMsgReq;
  static constexpr FrameType TGetMsgReq =
    Frame_FrameType_TGetMsgReq;
  static constexpr FrameType TGetForwardMsgReq =
    Frame_FrameType_TGetForwardMsgReq;
  static constexpr FrameType TSendLikeReq =
    Frame_FrameType_TSendLikeReq;
  static constexpr FrameType TSetGroupKickReq =
    Frame_FrameType_TSetGroupKickReq;
  static constexpr FrameType TSetGroupBanReq =
    Frame_FrameType_TSetGroupBanReq;
  static constexpr FrameType TSetGroupAnonymousReq =
    Frame_FrameType_TSetGroupAnonymousReq;
  static constexpr FrameType TSetGroupWholeBanReq =
    Frame_FrameType_TSetGroupWholeBanReq;
  static constexpr FrameType TSetGroupAdminReq =
    Frame_FrameType_TSetGroupAdminReq;
  static constexpr FrameType TSetGroupAnonymousBanReq =
    Frame_FrameType_TSetGroupAnonymousBanReq;
  static constexpr FrameType TSetGroupCardReq =
    Frame_FrameType_TSetGroupCardReq;
  static constexpr FrameType TSetGroupNameReq =
    Frame_FrameType_TSetGroupNameReq;
  static constexpr FrameType TSetGroupLeaveReq =
    Frame_FrameType_TSetGroupLeaveReq;
  static constexpr FrameType TSetGroupSpecialTitleReq =
    Frame_FrameType_TSetGroupSpecialTitleReq;
  static constexpr FrameType TSetFriendAddRequestReq =
    Frame_FrameType_TSetFriendAddRequestReq;
  static constexpr FrameType TSetGroupAddRequestReq =
    Frame_FrameType_TSetGroupAddRequestReq;
  static constexpr FrameType TGetLoginInfoReq =
    Frame_FrameType_TGetLoginInfoReq;
  static constexpr FrameType TGetStrangerInfoReq =
    Frame_FrameType_TGetStrangerInfoReq;
  static constexpr FrameType TGetFriendListReq =
    Frame_FrameType_TGetFriendListReq;
  static constexpr FrameType TGetGroupInfoReq =
    Frame_FrameType_TGetGroupInfoReq;
  static constexpr FrameType TGetGroupListReq =
    Frame_FrameType_TGetGroupListReq;
  static constexpr FrameType TGetGroupMemberInfoReq =
    Frame_FrameType_TGetGroupMemberInfoReq;
  static constexpr FrameType TGetGroupMemberListReq =
    Frame_FrameType_TGetGroupMemberListReq;
  static constexpr FrameType TGetGroupHonorInfoReq =
    Frame_FrameType_TGetGroupHonorInfoReq;
  static constexpr FrameType TGetCookiesReq =
    Frame_FrameType_TGetCookiesReq;
  static constexpr FrameType TGetCsrfTokenReq =
    Frame_FrameType_TGetCsrfTokenReq;
  static constexpr FrameType TGetCredentialsReq =
    Frame_FrameType_TGetCredentialsReq;
  static constexpr FrameType TGetRecordReq =
    Frame_FrameType_TGetRecordReq;
  static constexpr FrameType TGetImageReq =
    Frame_FrameType_TGetImageReq;
  static constexpr FrameType TCanSendImageReq =
    Frame_FrameType_TCanSendImageReq;
  static constexpr FrameType TCanSendRecordReq =
    Frame_FrameType_TCanSendRecordReq;
  static constexpr FrameType TGetStatusReq =
    Frame_FrameType_TGetStatusReq;
  static constexpr FrameType TGetVersionInfoReq =
    Frame_FrameType_TGetVersionInfoReq;
  static constexpr FrameType TSetRestartReq =
    Frame_FrameType_TSetRestartReq;
  static constexpr FrameType TCleanCacheReq =
    Frame_FrameType_TCleanCacheReq;
  static constexpr FrameType TSendPrivateMsgResp =
    Frame_FrameType_TSendPrivateMsgResp;
  static constexpr FrameType TSendGroupMsgResp =
    Frame_FrameType_TSendGroupMsgResp;
  static constexpr FrameType TSendMsgResp =
    Frame_FrameType_TSendMsgResp;
  static constexpr FrameType TDeleteMsgResp =
    Frame_FrameType_TDeleteMsgResp;
  static constexpr FrameType TGetMsgResp =
    Frame_FrameType_TGetMsgResp;
  static constexpr FrameType TGetForwardMsgResp =
    Frame_FrameType_TGetForwardMsgResp;
  static constexpr FrameType TSendLikeResp =
    Frame_FrameType_TSendLikeResp;
  static constexpr FrameType TSetGroupKickResp =
    Frame_FrameType_TSetGroupKickResp;
  static constexpr FrameType TSetGroupBanResp =
    Frame_FrameType_TSetGroupBanResp;
  static constexpr FrameType TSetGroupAnonymousResp =
    Frame_FrameType_TSetGroupAnonymousResp;
  static constexpr FrameType TSetGroupWholeBanResp =
    Frame_FrameType_TSetGroupWholeBanResp;
  static constexpr FrameType TSetGroupAdminResp =
    Frame_FrameType_TSetGroupAdminResp;
  static constexpr FrameType TSetGroupAnonymousBanResp =
    Frame_FrameType_TSetGroupAnonymousBanResp;
  static constexpr FrameType TSetGroupCardResp =
    Frame_FrameType_TSetGroupCardResp;
  static constexpr FrameType TSetGroupNameResp =
    Frame_FrameType_TSetGroupNameResp;
  static constexpr FrameType TSetGroupLeaveResp =
    Frame_FrameType_TSetGroupLeaveResp;
  static constexpr FrameType TSetGroupSpecialTitleResp =
    Frame_FrameType_TSetGroupSpecialTitleResp;
  static constexpr FrameType TSetFriendAddRequestResp =
    Frame_FrameType_TSetFriendAddRequestResp;
  static constexpr FrameType TSetGroupAddRequestResp =
    Frame_FrameType_TSetGroupAddRequestResp;
  static constexpr FrameType TGetLoginInfoResp =
    Frame_FrameType_TGetLoginInfoResp;
  static constexpr FrameType TGetStrangerInfoResp =
    Frame_FrameType_TGetStrangerInfoResp;
  static constexpr FrameType TGetFriendListResp =
    Frame_FrameType_TGetFriendListResp;
  static constexpr FrameType TGetGroupInfoResp =
    Frame_FrameType_TGetGroupInfoResp;
  static constexpr FrameType TGetGroupListResp =
    Frame_FrameType_TGetGroupListResp;
  static constexpr FrameType TGetGroupMemberInfoResp =
    Frame_FrameType_TGetGroupMemberInfoResp;
  static constexpr FrameType TGetGroupMemberListResp =
    Frame_FrameType_TGetGroupMemberListResp;
  static constexpr FrameType TGetGroupHonorInfoResp =
    Frame_FrameType_TGetGroupHonorInfoResp;
  static constexpr FrameType TGetCookiesResp =
    Frame_FrameType_TGetCookiesResp;
  static constexpr FrameType TGetCsrfTokenResp =
    Frame_FrameType_TGetCsrfTokenResp;
  static constexpr FrameType TGetCredentialsResp =
    Frame_FrameType_TGetCredentialsResp;
  static constexpr FrameType TGetRecordResp =
    Frame_FrameType_TGetRecordResp;
  static constexpr FrameType TGetImageResp =
    Frame_FrameType_TGetImageResp;
  static constexpr FrameType TCanSendImageResp =
    Frame_FrameType_TCanSendImageResp;
  static constexpr FrameType TCanSendRecordResp =
    Frame_FrameType_TCanSendRecordResp;
  static constexpr FrameType TGetStatusResp =
    Frame_FrameType_TGetStatusResp;
  static constexpr FrameType TGetVersionInfoResp =
    Frame_FrameType_TGetVersionInfoResp;
  static constexpr FrameType TSetRestartResp =
    Frame_FrameType_TSetRestartResp;
  static constexpr FrameType TCleanCacheResp =
    Frame_FrameType_TCleanCacheResp;
  static inline bool FrameType_IsValid(int value) {
    return Frame_FrameType_IsValid(value);
  }
  static constexpr FrameType FrameType_MIN =
    Frame_FrameType_FrameType_MIN;
  static constexpr FrameType FrameType_MAX =
    Frame_FrameType_FrameType_MAX;
  static constexpr int FrameType_ARRAYSIZE =
    Frame_FrameType_FrameType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  FrameType_descriptor() {
    return Frame_FrameType_descriptor();
  }
  template<typename T>
  static inline const std::string& FrameType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, FrameType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function FrameType_Name.");
    return Frame_FrameType_Name(enum_t_value);
  }
  static inline bool FrameType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      FrameType* value) {
    return Frame_FrameType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kExtraFieldNumber = 100,
    kEchoFieldNumber = 3,
    kBotIdFieldNumber = 1,
    kFrameTypeFieldNumber = 2,
    kOkFieldNumber = 4,
    kPrivateMessageEventFieldNumber = 101,
    kGroupMessageEventFieldNumber = 102,
    kGroupUploadNoticeEventFieldNumber = 103,
    kGroupAdminNoticeEventFieldNumber = 104,
    kGroupDecreaseNoticeEventFieldNumber = 105,
    kGroupIncreaseNoticeEventFieldNumber = 106,
    kGroupBanNoticeEventFieldNumber = 107,
    kFriendAddNoticeEventFieldNumber = 108,
    kGroupRecallNoticeEventFieldNumber = 109,
    kFriendRecallNoticeEventFieldNumber = 110,
    kFriendRequestEventFieldNumber = 111,
    kGroupRequestEventFieldNumber = 112,
    kSendPrivateMsgReqFieldNumber = 201,
    kSendGroupMsgReqFieldNumber = 202,
    kSendMsgReqFieldNumber = 203,
    kDeleteMsgReqFieldNumber = 204,
    kGetMsgReqFieldNumber = 205,
    kGetForwardMsgReqFieldNumber = 206,
    kSendLikeReqFieldNumber = 207,
    kSetGroupKickReqFieldNumber = 208,
    kSetGroupBanReqFieldNumber = 209,
    kSetGroupAnonymousBanReqFieldNumber = 210,
    kSetGroupWholeBanReqFieldNumber = 211,
    kSetGroupAdminReqFieldNumber = 212,
    kSetGroupAnonymousReqFieldNumber = 213,
    kSetGroupCardReqFieldNumber = 214,
    kSetGroupNameReqFieldNumber = 215,
    kSetGroupLeaveReqFieldNumber = 216,
    kSetGroupSpecialTitleReqFieldNumber = 217,
    kSetFriendAddRequestReqFieldNumber = 218,
    kSetGroupAddRequestReqFieldNumber = 219,
    kGetLoginInfoReqFieldNumber = 220,
    kGetStrangerInfoReqFieldNumber = 221,
    kGetFriendListReqFieldNumber = 222,
    kGetGroupInfoReqFieldNumber = 223,
    kGetGroupListReqFieldNumber = 224,
    kGetGroupMemberInfoReqFieldNumber = 225,
    kGetGroupMemberListReqFieldNumber = 226,
    kGetGroupHonorInfoReqFieldNumber = 227,
    kGetCookiesReqFieldNumber = 228,
    kGetCsrfTokenReqFieldNumber = 229,
    kGetCredentialsReqFieldNumber = 230,
    kGetRecordReqFieldNumber = 231,
    kGetImageReqFieldNumber = 232,
    kCanSendImageReqFieldNumber = 233,
    kCanSendRecordReqFieldNumber = 234,
    kGetStatusReqFieldNumber = 235,
    kGetVersionInfoReqFieldNumber = 236,
    kSetRestartReqFieldNumber = 237,
    kCleanCacheReqFieldNumber = 238,
    kSendPrivateMsgRespFieldNumber = 301,
    kSendGroupMsgRespFieldNumber = 302,
    kSendMsgRespFieldNumber = 303,
    kDeleteMsgRespFieldNumber = 304,
    kGetMsgRespFieldNumber = 305,
    kGetForwardMsgRespFieldNumber = 306,
    kSendLikeRespFieldNumber = 307,
    kSetGroupKickRespFieldNumber = 308,
    kSetGroupBanRespFieldNumber = 309,
    kSetGroupAnonymousBanRespFieldNumber = 310,
    kSetGroupWholeBanRespFieldNumber = 311,
    kSetGroupAdminRespFieldNumber = 312,
    kSetGroupAnonymousRespFieldNumber = 313,
    kSetGroupCardRespFieldNumber = 314,
    kSetGroupNameRespFieldNumber = 315,
    kSetGroupLeaveRespFieldNumber = 316,
    kSetGroupSpecialTitleRespFieldNumber = 317,
    kSetFriendAddRequestRespFieldNumber = 318,
    kSetGroupAddRequestRespFieldNumber = 319,
    kGetLoginInfoRespFieldNumber = 320,
    kGetStrangerInfoRespFieldNumber = 321,
    kGetFriendListRespFieldNumber = 322,
    kGetGroupInfoRespFieldNumber = 323,
    kGetGroupListRespFieldNumber = 324,
    kGetGroupMemberInfoRespFieldNumber = 325,
    kGetGroupMemberListRespFieldNumber = 326,
    kGetGroupHonorInfoRespFieldNumber = 327,
    kGetCookiesRespFieldNumber = 328,
    kGetCsrfTokenRespFieldNumber = 329,
    kGetCredentialsRespFieldNumber = 330,
    kGetRecordRespFieldNumber = 331,
    kGetImageRespFieldNumber = 332,
    kCanSendImageRespFieldNumber = 333,
    kCanSendRecordRespFieldNumber = 334,
    kGetStatusRespFieldNumber = 335,
    kGetVersionInfoRespFieldNumber = 336,
    kSetRestartRespFieldNumber = 337,
    kCleanCacheRespFieldNumber = 338,
  };
  // map<string, string> extra = 100;
  int extra_size() const;
  private:
  int _internal_extra_size() const;
  public:
  void clear_extra();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_extra() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_extra();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      extra() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_extra();

  // string echo = 3;
  void clear_echo();
  const std::string& echo() const;
  void set_echo(const std::string& value);
  void set_echo(std::string&& value);
  void set_echo(const char* value);
  void set_echo(const char* value, size_t size);
  std::string* mutable_echo();
  std::string* release_echo();
  void set_allocated_echo(std::string* echo);
  private:
  const std::string& _internal_echo() const;
  void _internal_set_echo(const std::string& value);
  std::string* _internal_mutable_echo();
  public:

  // int64 botId = 1;
  void clear_botid();
  ::PROTOBUF_NAMESPACE_ID::int64 botid() const;
  void set_botid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_botid() const;
  void _internal_set_botid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // .onebot.Frame.FrameType frame_type = 2;
  void clear_frame_type();
  ::onebot::Frame_FrameType frame_type() const;
  void set_frame_type(::onebot::Frame_FrameType value);
  private:
  ::onebot::Frame_FrameType _internal_frame_type() const;
  void _internal_set_frame_type(::onebot::Frame_FrameType value);
  public:

  // bool ok = 4;
  void clear_ok();
  bool ok() const;
  void set_ok(bool value);
  private:
  bool _internal_ok() const;
  void _internal_set_ok(bool value);
  public:

  // .onebot.PrivateMessageEvent private_message_event = 101;
  bool has_private_message_event() const;
  private:
  bool _internal_has_private_message_event() const;
  public:
  void clear_private_message_event();
  const ::onebot::PrivateMessageEvent& private_message_event() const;
  ::onebot::PrivateMessageEvent* release_private_message_event();
  ::onebot::PrivateMessageEvent* mutable_private_message_event();
  void set_allocated_private_message_event(::onebot::PrivateMessageEvent* private_message_event);
  private:
  const ::onebot::PrivateMessageEvent& _internal_private_message_event() const;
  ::onebot::PrivateMessageEvent* _internal_mutable_private_message_event();
  public:
  void unsafe_arena_set_allocated_private_message_event(
      ::onebot::PrivateMessageEvent* private_message_event);
  ::onebot::PrivateMessageEvent* unsafe_arena_release_private_message_event();

  // .onebot.GroupMessageEvent group_message_event = 102;
  bool has_group_message_event() const;
  private:
  bool _internal_has_group_message_event() const;
  public:
  void clear_group_message_event();
  const ::onebot::GroupMessageEvent& group_message_event() const;
  ::onebot::GroupMessageEvent* release_group_message_event();
  ::onebot::GroupMessageEvent* mutable_group_message_event();
  void set_allocated_group_message_event(::onebot::GroupMessageEvent* group_message_event);
  private:
  const ::onebot::GroupMessageEvent& _internal_group_message_event() const;
  ::onebot::GroupMessageEvent* _internal_mutable_group_message_event();
  public:
  void unsafe_arena_set_allocated_group_message_event(
      ::onebot::GroupMessageEvent* group_message_event);
  ::onebot::GroupMessageEvent* unsafe_arena_release_group_message_event();

  // .onebot.GroupUploadNoticeEvent group_upload_notice_event = 103;
  bool has_group_upload_notice_event() const;
  private:
  bool _internal_has_group_upload_notice_event() const;
  public:
  void clear_group_upload_notice_event();
  const ::onebot::GroupUploadNoticeEvent& group_upload_notice_event() const;
  ::onebot::GroupUploadNoticeEvent* release_group_upload_notice_event();
  ::onebot::GroupUploadNoticeEvent* mutable_group_upload_notice_event();
  void set_allocated_group_upload_notice_event(::onebot::GroupUploadNoticeEvent* group_upload_notice_event);
  private:
  const ::onebot::GroupUploadNoticeEvent& _internal_group_upload_notice_event() const;
  ::onebot::GroupUploadNoticeEvent* _internal_mutable_group_upload_notice_event();
  public:
  void unsafe_arena_set_allocated_group_upload_notice_event(
      ::onebot::GroupUploadNoticeEvent* group_upload_notice_event);
  ::onebot::GroupUploadNoticeEvent* unsafe_arena_release_group_upload_notice_event();

  // .onebot.GroupAdminNoticeEvent group_admin_notice_event = 104;
  bool has_group_admin_notice_event() const;
  private:
  bool _internal_has_group_admin_notice_event() const;
  public:
  void clear_group_admin_notice_event();
  const ::onebot::GroupAdminNoticeEvent& group_admin_notice_event() const;
  ::onebot::GroupAdminNoticeEvent* release_group_admin_notice_event();
  ::onebot::GroupAdminNoticeEvent* mutable_group_admin_notice_event();
  void set_allocated_group_admin_notice_event(::onebot::GroupAdminNoticeEvent* group_admin_notice_event);
  private:
  const ::onebot::GroupAdminNoticeEvent& _internal_group_admin_notice_event() const;
  ::onebot::GroupAdminNoticeEvent* _internal_mutable_group_admin_notice_event();
  public:
  void unsafe_arena_set_allocated_group_admin_notice_event(
      ::onebot::GroupAdminNoticeEvent* group_admin_notice_event);
  ::onebot::GroupAdminNoticeEvent* unsafe_arena_release_group_admin_notice_event();

  // .onebot.GroupDecreaseNoticeEvent group_decrease_notice_event = 105;
  bool has_group_decrease_notice_event() const;
  private:
  bool _internal_has_group_decrease_notice_event() const;
  public:
  void clear_group_decrease_notice_event();
  const ::onebot::GroupDecreaseNoticeEvent& group_decrease_notice_event() const;
  ::onebot::GroupDecreaseNoticeEvent* release_group_decrease_notice_event();
  ::onebot::GroupDecreaseNoticeEvent* mutable_group_decrease_notice_event();
  void set_allocated_group_decrease_notice_event(::onebot::GroupDecreaseNoticeEvent* group_decrease_notice_event);
  private:
  const ::onebot::GroupDecreaseNoticeEvent& _internal_group_decrease_notice_event() const;
  ::onebot::GroupDecreaseNoticeEvent* _internal_mutable_group_decrease_notice_event();
  public:
  void unsafe_arena_set_allocated_group_decrease_notice_event(
      ::onebot::GroupDecreaseNoticeEvent* group_decrease_notice_event);
  ::onebot::GroupDecreaseNoticeEvent* unsafe_arena_release_group_decrease_notice_event();

  // .onebot.GroupIncreaseNoticeEvent group_increase_notice_event = 106;
  bool has_group_increase_notice_event() const;
  private:
  bool _internal_has_group_increase_notice_event() const;
  public:
  void clear_group_increase_notice_event();
  const ::onebot::GroupIncreaseNoticeEvent& group_increase_notice_event() const;
  ::onebot::GroupIncreaseNoticeEvent* release_group_increase_notice_event();
  ::onebot::GroupIncreaseNoticeEvent* mutable_group_increase_notice_event();
  void set_allocated_group_increase_notice_event(::onebot::GroupIncreaseNoticeEvent* group_increase_notice_event);
  private:
  const ::onebot::GroupIncreaseNoticeEvent& _internal_group_increase_notice_event() const;
  ::onebot::GroupIncreaseNoticeEvent* _internal_mutable_group_increase_notice_event();
  public:
  void unsafe_arena_set_allocated_group_increase_notice_event(
      ::onebot::GroupIncreaseNoticeEvent* group_increase_notice_event);
  ::onebot::GroupIncreaseNoticeEvent* unsafe_arena_release_group_increase_notice_event();

  // .onebot.GroupBanNoticeEvent group_ban_notice_event = 107;
  bool has_group_ban_notice_event() const;
  private:
  bool _internal_has_group_ban_notice_event() const;
  public:
  void clear_group_ban_notice_event();
  const ::onebot::GroupBanNoticeEvent& group_ban_notice_event() const;
  ::onebot::GroupBanNoticeEvent* release_group_ban_notice_event();
  ::onebot::GroupBanNoticeEvent* mutable_group_ban_notice_event();
  void set_allocated_group_ban_notice_event(::onebot::GroupBanNoticeEvent* group_ban_notice_event);
  private:
  const ::onebot::GroupBanNoticeEvent& _internal_group_ban_notice_event() const;
  ::onebot::GroupBanNoticeEvent* _internal_mutable_group_ban_notice_event();
  public:
  void unsafe_arena_set_allocated_group_ban_notice_event(
      ::onebot::GroupBanNoticeEvent* group_ban_notice_event);
  ::onebot::GroupBanNoticeEvent* unsafe_arena_release_group_ban_notice_event();

  // .onebot.FriendAddNoticeEvent friend_add_notice_event = 108;
  bool has_friend_add_notice_event() const;
  private:
  bool _internal_has_friend_add_notice_event() const;
  public:
  void clear_friend_add_notice_event();
  const ::onebot::FriendAddNoticeEvent& friend_add_notice_event() const;
  ::onebot::FriendAddNoticeEvent* release_friend_add_notice_event();
  ::onebot::FriendAddNoticeEvent* mutable_friend_add_notice_event();
  void set_allocated_friend_add_notice_event(::onebot::FriendAddNoticeEvent* friend_add_notice_event);
  private:
  const ::onebot::FriendAddNoticeEvent& _internal_friend_add_notice_event() const;
  ::onebot::FriendAddNoticeEvent* _internal_mutable_friend_add_notice_event();
  public:
  void unsafe_arena_set_allocated_friend_add_notice_event(
      ::onebot::FriendAddNoticeEvent* friend_add_notice_event);
  ::onebot::FriendAddNoticeEvent* unsafe_arena_release_friend_add_notice_event();

  // .onebot.GroupRecallNoticeEvent group_recall_notice_event = 109;
  bool has_group_recall_notice_event() const;
  private:
  bool _internal_has_group_recall_notice_event() const;
  public:
  void clear_group_recall_notice_event();
  const ::onebot::GroupRecallNoticeEvent& group_recall_notice_event() const;
  ::onebot::GroupRecallNoticeEvent* release_group_recall_notice_event();
  ::onebot::GroupRecallNoticeEvent* mutable_group_recall_notice_event();
  void set_allocated_group_recall_notice_event(::onebot::GroupRecallNoticeEvent* group_recall_notice_event);
  private:
  const ::onebot::GroupRecallNoticeEvent& _internal_group_recall_notice_event() const;
  ::onebot::GroupRecallNoticeEvent* _internal_mutable_group_recall_notice_event();
  public:
  void unsafe_arena_set_allocated_group_recall_notice_event(
      ::onebot::GroupRecallNoticeEvent* group_recall_notice_event);
  ::onebot::GroupRecallNoticeEvent* unsafe_arena_release_group_recall_notice_event();

  // .onebot.FriendRecallNoticeEvent friend_recall_notice_event = 110;
  bool has_friend_recall_notice_event() const;
  private:
  bool _internal_has_friend_recall_notice_event() const;
  public:
  void clear_friend_recall_notice_event();
  const ::onebot::FriendRecallNoticeEvent& friend_recall_notice_event() const;
  ::onebot::FriendRecallNoticeEvent* release_friend_recall_notice_event();
  ::onebot::FriendRecallNoticeEvent* mutable_friend_recall_notice_event();
  void set_allocated_friend_recall_notice_event(::onebot::FriendRecallNoticeEvent* friend_recall_notice_event);
  private:
  const ::onebot::FriendRecallNoticeEvent& _internal_friend_recall_notice_event() const;
  ::onebot::FriendRecallNoticeEvent* _internal_mutable_friend_recall_notice_event();
  public:
  void unsafe_arena_set_allocated_friend_recall_notice_event(
      ::onebot::FriendRecallNoticeEvent* friend_recall_notice_event);
  ::onebot::FriendRecallNoticeEvent* unsafe_arena_release_friend_recall_notice_event();

  // .onebot.FriendRequestEvent friend_request_event = 111;
  bool has_friend_request_event() const;
  private:
  bool _internal_has_friend_request_event() const;
  public:
  void clear_friend_request_event();
  const ::onebot::FriendRequestEvent& friend_request_event() const;
  ::onebot::FriendRequestEvent* release_friend_request_event();
  ::onebot::FriendRequestEvent* mutable_friend_request_event();
  void set_allocated_friend_request_event(::onebot::FriendRequestEvent* friend_request_event);
  private:
  const ::onebot::FriendRequestEvent& _internal_friend_request_event() const;
  ::onebot::FriendRequestEvent* _internal_mutable_friend_request_event();
  public:
  void unsafe_arena_set_allocated_friend_request_event(
      ::onebot::FriendRequestEvent* friend_request_event);
  ::onebot::FriendRequestEvent* unsafe_arena_release_friend_request_event();

  // .onebot.GroupRequestEvent group_request_event = 112;
  bool has_group_request_event() const;
  private:
  bool _internal_has_group_request_event() const;
  public:
  void clear_group_request_event();
  const ::onebot::GroupRequestEvent& group_request_event() const;
  ::onebot::GroupRequestEvent* release_group_request_event();
  ::onebot::GroupRequestEvent* mutable_group_request_event();
  void set_allocated_group_request_event(::onebot::GroupRequestEvent* group_request_event);
  private:
  const ::onebot::GroupRequestEvent& _internal_group_request_event() const;
  ::onebot::GroupRequestEvent* _internal_mutable_group_request_event();
  public:
  void unsafe_arena_set_allocated_group_request_event(
      ::onebot::GroupRequestEvent* group_request_event);
  ::onebot::GroupRequestEvent* unsafe_arena_release_group_request_event();

  // .onebot.SendPrivateMsgReq send_private_msg_req = 201;
  bool has_send_private_msg_req() const;
  private:
  bool _internal_has_send_private_msg_req() const;
  public:
  void clear_send_private_msg_req();
  const ::onebot::SendPrivateMsgReq& send_private_msg_req() const;
  ::onebot::SendPrivateMsgReq* release_send_private_msg_req();
  ::onebot::SendPrivateMsgReq* mutable_send_private_msg_req();
  void set_allocated_send_private_msg_req(::onebot::SendPrivateMsgReq* send_private_msg_req);
  private:
  const ::onebot::SendPrivateMsgReq& _internal_send_private_msg_req() const;
  ::onebot::SendPrivateMsgReq* _internal_mutable_send_private_msg_req();
  public:
  void unsafe_arena_set_allocated_send_private_msg_req(
      ::onebot::SendPrivateMsgReq* send_private_msg_req);
  ::onebot::SendPrivateMsgReq* unsafe_arena_release_send_private_msg_req();

  // .onebot.SendGroupMsgReq send_group_msg_req = 202;
  bool has_send_group_msg_req() const;
  private:
  bool _internal_has_send_group_msg_req() const;
  public:
  void clear_send_group_msg_req();
  const ::onebot::SendGroupMsgReq& send_group_msg_req() const;
  ::onebot::SendGroupMsgReq* release_send_group_msg_req();
  ::onebot::SendGroupMsgReq* mutable_send_group_msg_req();
  void set_allocated_send_group_msg_req(::onebot::SendGroupMsgReq* send_group_msg_req);
  private:
  const ::onebot::SendGroupMsgReq& _internal_send_group_msg_req() const;
  ::onebot::SendGroupMsgReq* _internal_mutable_send_group_msg_req();
  public:
  void unsafe_arena_set_allocated_send_group_msg_req(
      ::onebot::SendGroupMsgReq* send_group_msg_req);
  ::onebot::SendGroupMsgReq* unsafe_arena_release_send_group_msg_req();

  // .onebot.SendMsgReq send_msg_req = 203;
  bool has_send_msg_req() const;
  private:
  bool _internal_has_send_msg_req() const;
  public:
  void clear_send_msg_req();
  const ::onebot::SendMsgReq& send_msg_req() const;
  ::onebot::SendMsgReq* release_send_msg_req();
  ::onebot::SendMsgReq* mutable_send_msg_req();
  void set_allocated_send_msg_req(::onebot::SendMsgReq* send_msg_req);
  private:
  const ::onebot::SendMsgReq& _internal_send_msg_req() const;
  ::onebot::SendMsgReq* _internal_mutable_send_msg_req();
  public:
  void unsafe_arena_set_allocated_send_msg_req(
      ::onebot::SendMsgReq* send_msg_req);
  ::onebot::SendMsgReq* unsafe_arena_release_send_msg_req();

  // .onebot.DeleteMsgReq delete_msg_req = 204;
  bool has_delete_msg_req() const;
  private:
  bool _internal_has_delete_msg_req() const;
  public:
  void clear_delete_msg_req();
  const ::onebot::DeleteMsgReq& delete_msg_req() const;
  ::onebot::DeleteMsgReq* release_delete_msg_req();
  ::onebot::DeleteMsgReq* mutable_delete_msg_req();
  void set_allocated_delete_msg_req(::onebot::DeleteMsgReq* delete_msg_req);
  private:
  const ::onebot::DeleteMsgReq& _internal_delete_msg_req() const;
  ::onebot::DeleteMsgReq* _internal_mutable_delete_msg_req();
  public:
  void unsafe_arena_set_allocated_delete_msg_req(
      ::onebot::DeleteMsgReq* delete_msg_req);
  ::onebot::DeleteMsgReq* unsafe_arena_release_delete_msg_req();

  // .onebot.GetMsgReq get_msg_req = 205;
  bool has_get_msg_req() const;
  private:
  bool _internal_has_get_msg_req() const;
  public:
  void clear_get_msg_req();
  const ::onebot::GetMsgReq& get_msg_req() const;
  ::onebot::GetMsgReq* release_get_msg_req();
  ::onebot::GetMsgReq* mutable_get_msg_req();
  void set_allocated_get_msg_req(::onebot::GetMsgReq* get_msg_req);
  private:
  const ::onebot::GetMsgReq& _internal_get_msg_req() const;
  ::onebot::GetMsgReq* _internal_mutable_get_msg_req();
  public:
  void unsafe_arena_set_allocated_get_msg_req(
      ::onebot::GetMsgReq* get_msg_req);
  ::onebot::GetMsgReq* unsafe_arena_release_get_msg_req();

  // .onebot.GetForwardMsgReq get_forward_msg_req = 206;
  bool has_get_forward_msg_req() const;
  private:
  bool _internal_has_get_forward_msg_req() const;
  public:
  void clear_get_forward_msg_req();
  const ::onebot::GetForwardMsgReq& get_forward_msg_req() const;
  ::onebot::GetForwardMsgReq* release_get_forward_msg_req();
  ::onebot::GetForwardMsgReq* mutable_get_forward_msg_req();
  void set_allocated_get_forward_msg_req(::onebot::GetForwardMsgReq* get_forward_msg_req);
  private:
  const ::onebot::GetForwardMsgReq& _internal_get_forward_msg_req() const;
  ::onebot::GetForwardMsgReq* _internal_mutable_get_forward_msg_req();
  public:
  void unsafe_arena_set_allocated_get_forward_msg_req(
      ::onebot::GetForwardMsgReq* get_forward_msg_req);
  ::onebot::GetForwardMsgReq* unsafe_arena_release_get_forward_msg_req();

  // .onebot.SendLikeReq send_like_req = 207;
  bool has_send_like_req() const;
  private:
  bool _internal_has_send_like_req() const;
  public:
  void clear_send_like_req();
  const ::onebot::SendLikeReq& send_like_req() const;
  ::onebot::SendLikeReq* release_send_like_req();
  ::onebot::SendLikeReq* mutable_send_like_req();
  void set_allocated_send_like_req(::onebot::SendLikeReq* send_like_req);
  private:
  const ::onebot::SendLikeReq& _internal_send_like_req() const;
  ::onebot::SendLikeReq* _internal_mutable_send_like_req();
  public:
  void unsafe_arena_set_allocated_send_like_req(
      ::onebot::SendLikeReq* send_like_req);
  ::onebot::SendLikeReq* unsafe_arena_release_send_like_req();

  // .onebot.SetGroupKickReq set_group_kick_req = 208;
  bool has_set_group_kick_req() const;
  private:
  bool _internal_has_set_group_kick_req() const;
  public:
  void clear_set_group_kick_req();
  const ::onebot::SetGroupKickReq& set_group_kick_req() const;
  ::onebot::SetGroupKickReq* release_set_group_kick_req();
  ::onebot::SetGroupKickReq* mutable_set_group_kick_req();
  void set_allocated_set_group_kick_req(::onebot::SetGroupKickReq* set_group_kick_req);
  private:
  const ::onebot::SetGroupKickReq& _internal_set_group_kick_req() const;
  ::onebot::SetGroupKickReq* _internal_mutable_set_group_kick_req();
  public:
  void unsafe_arena_set_allocated_set_group_kick_req(
      ::onebot::SetGroupKickReq* set_group_kick_req);
  ::onebot::SetGroupKickReq* unsafe_arena_release_set_group_kick_req();

  // .onebot.SetGroupBanReq set_group_ban_req = 209;
  bool has_set_group_ban_req() const;
  private:
  bool _internal_has_set_group_ban_req() const;
  public:
  void clear_set_group_ban_req();
  const ::onebot::SetGroupBanReq& set_group_ban_req() const;
  ::onebot::SetGroupBanReq* release_set_group_ban_req();
  ::onebot::SetGroupBanReq* mutable_set_group_ban_req();
  void set_allocated_set_group_ban_req(::onebot::SetGroupBanReq* set_group_ban_req);
  private:
  const ::onebot::SetGroupBanReq& _internal_set_group_ban_req() const;
  ::onebot::SetGroupBanReq* _internal_mutable_set_group_ban_req();
  public:
  void unsafe_arena_set_allocated_set_group_ban_req(
      ::onebot::SetGroupBanReq* set_group_ban_req);
  ::onebot::SetGroupBanReq* unsafe_arena_release_set_group_ban_req();

  // .onebot.SetGroupAnonymousBanReq set_group_anonymous_ban_req = 210;
  bool has_set_group_anonymous_ban_req() const;
  private:
  bool _internal_has_set_group_anonymous_ban_req() const;
  public:
  void clear_set_group_anonymous_ban_req();
  const ::onebot::SetGroupAnonymousBanReq& set_group_anonymous_ban_req() const;
  ::onebot::SetGroupAnonymousBanReq* release_set_group_anonymous_ban_req();
  ::onebot::SetGroupAnonymousBanReq* mutable_set_group_anonymous_ban_req();
  void set_allocated_set_group_anonymous_ban_req(::onebot::SetGroupAnonymousBanReq* set_group_anonymous_ban_req);
  private:
  const ::onebot::SetGroupAnonymousBanReq& _internal_set_group_anonymous_ban_req() const;
  ::onebot::SetGroupAnonymousBanReq* _internal_mutable_set_group_anonymous_ban_req();
  public:
  void unsafe_arena_set_allocated_set_group_anonymous_ban_req(
      ::onebot::SetGroupAnonymousBanReq* set_group_anonymous_ban_req);
  ::onebot::SetGroupAnonymousBanReq* unsafe_arena_release_set_group_anonymous_ban_req();

  // .onebot.SetGroupWholeBanReq set_group_whole_ban_req = 211;
  bool has_set_group_whole_ban_req() const;
  private:
  bool _internal_has_set_group_whole_ban_req() const;
  public:
  void clear_set_group_whole_ban_req();
  const ::onebot::SetGroupWholeBanReq& set_group_whole_ban_req() const;
  ::onebot::SetGroupWholeBanReq* release_set_group_whole_ban_req();
  ::onebot::SetGroupWholeBanReq* mutable_set_group_whole_ban_req();
  void set_allocated_set_group_whole_ban_req(::onebot::SetGroupWholeBanReq* set_group_whole_ban_req);
  private:
  const ::onebot::SetGroupWholeBanReq& _internal_set_group_whole_ban_req() const;
  ::onebot::SetGroupWholeBanReq* _internal_mutable_set_group_whole_ban_req();
  public:
  void unsafe_arena_set_allocated_set_group_whole_ban_req(
      ::onebot::SetGroupWholeBanReq* set_group_whole_ban_req);
  ::onebot::SetGroupWholeBanReq* unsafe_arena_release_set_group_whole_ban_req();

  // .onebot.SetGroupAdminReq set_group_admin_req = 212;
  bool has_set_group_admin_req() const;
  private:
  bool _internal_has_set_group_admin_req() const;
  public:
  void clear_set_group_admin_req();
  const ::onebot::SetGroupAdminReq& set_group_admin_req() const;
  ::onebot::SetGroupAdminReq* release_set_group_admin_req();
  ::onebot::SetGroupAdminReq* mutable_set_group_admin_req();
  void set_allocated_set_group_admin_req(::onebot::SetGroupAdminReq* set_group_admin_req);
  private:
  const ::onebot::SetGroupAdminReq& _internal_set_group_admin_req() const;
  ::onebot::SetGroupAdminReq* _internal_mutable_set_group_admin_req();
  public:
  void unsafe_arena_set_allocated_set_group_admin_req(
      ::onebot::SetGroupAdminReq* set_group_admin_req);
  ::onebot::SetGroupAdminReq* unsafe_arena_release_set_group_admin_req();

  // .onebot.SetGroupAnonymousReq set_group_anonymous_req = 213;
  bool has_set_group_anonymous_req() const;
  private:
  bool _internal_has_set_group_anonymous_req() const;
  public:
  void clear_set_group_anonymous_req();
  const ::onebot::SetGroupAnonymousReq& set_group_anonymous_req() const;
  ::onebot::SetGroupAnonymousReq* release_set_group_anonymous_req();
  ::onebot::SetGroupAnonymousReq* mutable_set_group_anonymous_req();
  void set_allocated_set_group_anonymous_req(::onebot::SetGroupAnonymousReq* set_group_anonymous_req);
  private:
  const ::onebot::SetGroupAnonymousReq& _internal_set_group_anonymous_req() const;
  ::onebot::SetGroupAnonymousReq* _internal_mutable_set_group_anonymous_req();
  public:
  void unsafe_arena_set_allocated_set_group_anonymous_req(
      ::onebot::SetGroupAnonymousReq* set_group_anonymous_req);
  ::onebot::SetGroupAnonymousReq* unsafe_arena_release_set_group_anonymous_req();

  // .onebot.SetGroupCardReq set_group_card_req = 214;
  bool has_set_group_card_req() const;
  private:
  bool _internal_has_set_group_card_req() const;
  public:
  void clear_set_group_card_req();
  const ::onebot::SetGroupCardReq& set_group_card_req() const;
  ::onebot::SetGroupCardReq* release_set_group_card_req();
  ::onebot::SetGroupCardReq* mutable_set_group_card_req();
  void set_allocated_set_group_card_req(::onebot::SetGroupCardReq* set_group_card_req);
  private:
  const ::onebot::SetGroupCardReq& _internal_set_group_card_req() const;
  ::onebot::SetGroupCardReq* _internal_mutable_set_group_card_req();
  public:
  void unsafe_arena_set_allocated_set_group_card_req(
      ::onebot::SetGroupCardReq* set_group_card_req);
  ::onebot::SetGroupCardReq* unsafe_arena_release_set_group_card_req();

  // .onebot.SetGroupNameReq set_group_name_req = 215;
  bool has_set_group_name_req() const;
  private:
  bool _internal_has_set_group_name_req() const;
  public:
  void clear_set_group_name_req();
  const ::onebot::SetGroupNameReq& set_group_name_req() const;
  ::onebot::SetGroupNameReq* release_set_group_name_req();
  ::onebot::SetGroupNameReq* mutable_set_group_name_req();
  void set_allocated_set_group_name_req(::onebot::SetGroupNameReq* set_group_name_req);
  private:
  const ::onebot::SetGroupNameReq& _internal_set_group_name_req() const;
  ::onebot::SetGroupNameReq* _internal_mutable_set_group_name_req();
  public:
  void unsafe_arena_set_allocated_set_group_name_req(
      ::onebot::SetGroupNameReq* set_group_name_req);
  ::onebot::SetGroupNameReq* unsafe_arena_release_set_group_name_req();

  // .onebot.SetGroupLeaveReq set_group_leave_req = 216;
  bool has_set_group_leave_req() const;
  private:
  bool _internal_has_set_group_leave_req() const;
  public:
  void clear_set_group_leave_req();
  const ::onebot::SetGroupLeaveReq& set_group_leave_req() const;
  ::onebot::SetGroupLeaveReq* release_set_group_leave_req();
  ::onebot::SetGroupLeaveReq* mutable_set_group_leave_req();
  void set_allocated_set_group_leave_req(::onebot::SetGroupLeaveReq* set_group_leave_req);
  private:
  const ::onebot::SetGroupLeaveReq& _internal_set_group_leave_req() const;
  ::onebot::SetGroupLeaveReq* _internal_mutable_set_group_leave_req();
  public:
  void unsafe_arena_set_allocated_set_group_leave_req(
      ::onebot::SetGroupLeaveReq* set_group_leave_req);
  ::onebot::SetGroupLeaveReq* unsafe_arena_release_set_group_leave_req();

  // .onebot.SetGroupSpecialTitleReq set_group_special_title_req = 217;
  bool has_set_group_special_title_req() const;
  private:
  bool _internal_has_set_group_special_title_req() const;
  public:
  void clear_set_group_special_title_req();
  const ::onebot::SetGroupSpecialTitleReq& set_group_special_title_req() const;
  ::onebot::SetGroupSpecialTitleReq* release_set_group_special_title_req();
  ::onebot::SetGroupSpecialTitleReq* mutable_set_group_special_title_req();
  void set_allocated_set_group_special_title_req(::onebot::SetGroupSpecialTitleReq* set_group_special_title_req);
  private:
  const ::onebot::SetGroupSpecialTitleReq& _internal_set_group_special_title_req() const;
  ::onebot::SetGroupSpecialTitleReq* _internal_mutable_set_group_special_title_req();
  public:
  void unsafe_arena_set_allocated_set_group_special_title_req(
      ::onebot::SetGroupSpecialTitleReq* set_group_special_title_req);
  ::onebot::SetGroupSpecialTitleReq* unsafe_arena_release_set_group_special_title_req();

  // .onebot.SetFriendAddRequestReq set_friend_add_request_req = 218;
  bool has_set_friend_add_request_req() const;
  private:
  bool _internal_has_set_friend_add_request_req() const;
  public:
  void clear_set_friend_add_request_req();
  const ::onebot::SetFriendAddRequestReq& set_friend_add_request_req() const;
  ::onebot::SetFriendAddRequestReq* release_set_friend_add_request_req();
  ::onebot::SetFriendAddRequestReq* mutable_set_friend_add_request_req();
  void set_allocated_set_friend_add_request_req(::onebot::SetFriendAddRequestReq* set_friend_add_request_req);
  private:
  const ::onebot::SetFriendAddRequestReq& _internal_set_friend_add_request_req() const;
  ::onebot::SetFriendAddRequestReq* _internal_mutable_set_friend_add_request_req();
  public:
  void unsafe_arena_set_allocated_set_friend_add_request_req(
      ::onebot::SetFriendAddRequestReq* set_friend_add_request_req);
  ::onebot::SetFriendAddRequestReq* unsafe_arena_release_set_friend_add_request_req();

  // .onebot.SetGroupAddRequestReq set_group_add_request_req = 219;
  bool has_set_group_add_request_req() const;
  private:
  bool _internal_has_set_group_add_request_req() const;
  public:
  void clear_set_group_add_request_req();
  const ::onebot::SetGroupAddRequestReq& set_group_add_request_req() const;
  ::onebot::SetGroupAddRequestReq* release_set_group_add_request_req();
  ::onebot::SetGroupAddRequestReq* mutable_set_group_add_request_req();
  void set_allocated_set_group_add_request_req(::onebot::SetGroupAddRequestReq* set_group_add_request_req);
  private:
  const ::onebot::SetGroupAddRequestReq& _internal_set_group_add_request_req() const;
  ::onebot::SetGroupAddRequestReq* _internal_mutable_set_group_add_request_req();
  public:
  void unsafe_arena_set_allocated_set_group_add_request_req(
      ::onebot::SetGroupAddRequestReq* set_group_add_request_req);
  ::onebot::SetGroupAddRequestReq* unsafe_arena_release_set_group_add_request_req();

  // .onebot.GetLoginInfoReq get_login_info_req = 220;
  bool has_get_login_info_req() const;
  private:
  bool _internal_has_get_login_info_req() const;
  public:
  void clear_get_login_info_req();
  const ::onebot::GetLoginInfoReq& get_login_info_req() const;
  ::onebot::GetLoginInfoReq* release_get_login_info_req();
  ::onebot::GetLoginInfoReq* mutable_get_login_info_req();
  void set_allocated_get_login_info_req(::onebot::GetLoginInfoReq* get_login_info_req);
  private:
  const ::onebot::GetLoginInfoReq& _internal_get_login_info_req() const;
  ::onebot::GetLoginInfoReq* _internal_mutable_get_login_info_req();
  public:
  void unsafe_arena_set_allocated_get_login_info_req(
      ::onebot::GetLoginInfoReq* get_login_info_req);
  ::onebot::GetLoginInfoReq* unsafe_arena_release_get_login_info_req();

  // .onebot.GetStrangerInfoReq get_stranger_info_req = 221;
  bool has_get_stranger_info_req() const;
  private:
  bool _internal_has_get_stranger_info_req() const;
  public:
  void clear_get_stranger_info_req();
  const ::onebot::GetStrangerInfoReq& get_stranger_info_req() const;
  ::onebot::GetStrangerInfoReq* release_get_stranger_info_req();
  ::onebot::GetStrangerInfoReq* mutable_get_stranger_info_req();
  void set_allocated_get_stranger_info_req(::onebot::GetStrangerInfoReq* get_stranger_info_req);
  private:
  const ::onebot::GetStrangerInfoReq& _internal_get_stranger_info_req() const;
  ::onebot::GetStrangerInfoReq* _internal_mutable_get_stranger_info_req();
  public:
  void unsafe_arena_set_allocated_get_stranger_info_req(
      ::onebot::GetStrangerInfoReq* get_stranger_info_req);
  ::onebot::GetStrangerInfoReq* unsafe_arena_release_get_stranger_info_req();

  // .onebot.GetFriendListReq get_friend_list_req = 222;
  bool has_get_friend_list_req() const;
  private:
  bool _internal_has_get_friend_list_req() const;
  public:
  void clear_get_friend_list_req();
  const ::onebot::GetFriendListReq& get_friend_list_req() const;
  ::onebot::GetFriendListReq* release_get_friend_list_req();
  ::onebot::GetFriendListReq* mutable_get_friend_list_req();
  void set_allocated_get_friend_list_req(::onebot::GetFriendListReq* get_friend_list_req);
  private:
  const ::onebot::GetFriendListReq& _internal_get_friend_list_req() const;
  ::onebot::GetFriendListReq* _internal_mutable_get_friend_list_req();
  public:
  void unsafe_arena_set_allocated_get_friend_list_req(
      ::onebot::GetFriendListReq* get_friend_list_req);
  ::onebot::GetFriendListReq* unsafe_arena_release_get_friend_list_req();

  // .onebot.GetGroupInfoReq get_group_info_req = 223;
  bool has_get_group_info_req() const;
  private:
  bool _internal_has_get_group_info_req() const;
  public:
  void clear_get_group_info_req();
  const ::onebot::GetGroupInfoReq& get_group_info_req() const;
  ::onebot::GetGroupInfoReq* release_get_group_info_req();
  ::onebot::GetGroupInfoReq* mutable_get_group_info_req();
  void set_allocated_get_group_info_req(::onebot::GetGroupInfoReq* get_group_info_req);
  private:
  const ::onebot::GetGroupInfoReq& _internal_get_group_info_req() const;
  ::onebot::GetGroupInfoReq* _internal_mutable_get_group_info_req();
  public:
  void unsafe_arena_set_allocated_get_group_info_req(
      ::onebot::GetGroupInfoReq* get_group_info_req);
  ::onebot::GetGroupInfoReq* unsafe_arena_release_get_group_info_req();

  // .onebot.GetGroupListReq get_group_list_req = 224;
  bool has_get_group_list_req() const;
  private:
  bool _internal_has_get_group_list_req() const;
  public:
  void clear_get_group_list_req();
  const ::onebot::GetGroupListReq& get_group_list_req() const;
  ::onebot::GetGroupListReq* release_get_group_list_req();
  ::onebot::GetGroupListReq* mutable_get_group_list_req();
  void set_allocated_get_group_list_req(::onebot::GetGroupListReq* get_group_list_req);
  private:
  const ::onebot::GetGroupListReq& _internal_get_group_list_req() const;
  ::onebot::GetGroupListReq* _internal_mutable_get_group_list_req();
  public:
  void unsafe_arena_set_allocated_get_group_list_req(
      ::onebot::GetGroupListReq* get_group_list_req);
  ::onebot::GetGroupListReq* unsafe_arena_release_get_group_list_req();

  // .onebot.GetGroupMemberInfoReq get_group_member_info_req = 225;
  bool has_get_group_member_info_req() const;
  private:
  bool _internal_has_get_group_member_info_req() const;
  public:
  void clear_get_group_member_info_req();
  const ::onebot::GetGroupMemberInfoReq& get_group_member_info_req() const;
  ::onebot::GetGroupMemberInfoReq* release_get_group_member_info_req();
  ::onebot::GetGroupMemberInfoReq* mutable_get_group_member_info_req();
  void set_allocated_get_group_member_info_req(::onebot::GetGroupMemberInfoReq* get_group_member_info_req);
  private:
  const ::onebot::GetGroupMemberInfoReq& _internal_get_group_member_info_req() const;
  ::onebot::GetGroupMemberInfoReq* _internal_mutable_get_group_member_info_req();
  public:
  void unsafe_arena_set_allocated_get_group_member_info_req(
      ::onebot::GetGroupMemberInfoReq* get_group_member_info_req);
  ::onebot::GetGroupMemberInfoReq* unsafe_arena_release_get_group_member_info_req();

  // .onebot.GetGroupMemberListReq get_group_member_list_req = 226;
  bool has_get_group_member_list_req() const;
  private:
  bool _internal_has_get_group_member_list_req() const;
  public:
  void clear_get_group_member_list_req();
  const ::onebot::GetGroupMemberListReq& get_group_member_list_req() const;
  ::onebot::GetGroupMemberListReq* release_get_group_member_list_req();
  ::onebot::GetGroupMemberListReq* mutable_get_group_member_list_req();
  void set_allocated_get_group_member_list_req(::onebot::GetGroupMemberListReq* get_group_member_list_req);
  private:
  const ::onebot::GetGroupMemberListReq& _internal_get_group_member_list_req() const;
  ::onebot::GetGroupMemberListReq* _internal_mutable_get_group_member_list_req();
  public:
  void unsafe_arena_set_allocated_get_group_member_list_req(
      ::onebot::GetGroupMemberListReq* get_group_member_list_req);
  ::onebot::GetGroupMemberListReq* unsafe_arena_release_get_group_member_list_req();

  // .onebot.GetGroupHonorInfoReq get_group_honor_info_req = 227;
  bool has_get_group_honor_info_req() const;
  private:
  bool _internal_has_get_group_honor_info_req() const;
  public:
  void clear_get_group_honor_info_req();
  const ::onebot::GetGroupHonorInfoReq& get_group_honor_info_req() const;
  ::onebot::GetGroupHonorInfoReq* release_get_group_honor_info_req();
  ::onebot::GetGroupHonorInfoReq* mutable_get_group_honor_info_req();
  void set_allocated_get_group_honor_info_req(::onebot::GetGroupHonorInfoReq* get_group_honor_info_req);
  private:
  const ::onebot::GetGroupHonorInfoReq& _internal_get_group_honor_info_req() const;
  ::onebot::GetGroupHonorInfoReq* _internal_mutable_get_group_honor_info_req();
  public:
  void unsafe_arena_set_allocated_get_group_honor_info_req(
      ::onebot::GetGroupHonorInfoReq* get_group_honor_info_req);
  ::onebot::GetGroupHonorInfoReq* unsafe_arena_release_get_group_honor_info_req();

  // .onebot.GetCookiesReq get_cookies_req = 228;
  bool has_get_cookies_req() const;
  private:
  bool _internal_has_get_cookies_req() const;
  public:
  void clear_get_cookies_req();
  const ::onebot::GetCookiesReq& get_cookies_req() const;
  ::onebot::GetCookiesReq* release_get_cookies_req();
  ::onebot::GetCookiesReq* mutable_get_cookies_req();
  void set_allocated_get_cookies_req(::onebot::GetCookiesReq* get_cookies_req);
  private:
  const ::onebot::GetCookiesReq& _internal_get_cookies_req() const;
  ::onebot::GetCookiesReq* _internal_mutable_get_cookies_req();
  public:
  void unsafe_arena_set_allocated_get_cookies_req(
      ::onebot::GetCookiesReq* get_cookies_req);
  ::onebot::GetCookiesReq* unsafe_arena_release_get_cookies_req();

  // .onebot.GetCsrfTokenReq get_csrf_token_req = 229;
  bool has_get_csrf_token_req() const;
  private:
  bool _internal_has_get_csrf_token_req() const;
  public:
  void clear_get_csrf_token_req();
  const ::onebot::GetCsrfTokenReq& get_csrf_token_req() const;
  ::onebot::GetCsrfTokenReq* release_get_csrf_token_req();
  ::onebot::GetCsrfTokenReq* mutable_get_csrf_token_req();
  void set_allocated_get_csrf_token_req(::onebot::GetCsrfTokenReq* get_csrf_token_req);
  private:
  const ::onebot::GetCsrfTokenReq& _internal_get_csrf_token_req() const;
  ::onebot::GetCsrfTokenReq* _internal_mutable_get_csrf_token_req();
  public:
  void unsafe_arena_set_allocated_get_csrf_token_req(
      ::onebot::GetCsrfTokenReq* get_csrf_token_req);
  ::onebot::GetCsrfTokenReq* unsafe_arena_release_get_csrf_token_req();

  // .onebot.GetCredentialsReq get_credentials_req = 230;
  bool has_get_credentials_req() const;
  private:
  bool _internal_has_get_credentials_req() const;
  public:
  void clear_get_credentials_req();
  const ::onebot::GetCredentialsReq& get_credentials_req() const;
  ::onebot::GetCredentialsReq* release_get_credentials_req();
  ::onebot::GetCredentialsReq* mutable_get_credentials_req();
  void set_allocated_get_credentials_req(::onebot::GetCredentialsReq* get_credentials_req);
  private:
  const ::onebot::GetCredentialsReq& _internal_get_credentials_req() const;
  ::onebot::GetCredentialsReq* _internal_mutable_get_credentials_req();
  public:
  void unsafe_arena_set_allocated_get_credentials_req(
      ::onebot::GetCredentialsReq* get_credentials_req);
  ::onebot::GetCredentialsReq* unsafe_arena_release_get_credentials_req();

  // .onebot.GetRecordReq get_record_req = 231;
  bool has_get_record_req() const;
  private:
  bool _internal_has_get_record_req() const;
  public:
  void clear_get_record_req();
  const ::onebot::GetRecordReq& get_record_req() const;
  ::onebot::GetRecordReq* release_get_record_req();
  ::onebot::GetRecordReq* mutable_get_record_req();
  void set_allocated_get_record_req(::onebot::GetRecordReq* get_record_req);
  private:
  const ::onebot::GetRecordReq& _internal_get_record_req() const;
  ::onebot::GetRecordReq* _internal_mutable_get_record_req();
  public:
  void unsafe_arena_set_allocated_get_record_req(
      ::onebot::GetRecordReq* get_record_req);
  ::onebot::GetRecordReq* unsafe_arena_release_get_record_req();

  // .onebot.GetImageReq get_image_req = 232;
  bool has_get_image_req() const;
  private:
  bool _internal_has_get_image_req() const;
  public:
  void clear_get_image_req();
  const ::onebot::GetImageReq& get_image_req() const;
  ::onebot::GetImageReq* release_get_image_req();
  ::onebot::GetImageReq* mutable_get_image_req();
  void set_allocated_get_image_req(::onebot::GetImageReq* get_image_req);
  private:
  const ::onebot::GetImageReq& _internal_get_image_req() const;
  ::onebot::GetImageReq* _internal_mutable_get_image_req();
  public:
  void unsafe_arena_set_allocated_get_image_req(
      ::onebot::GetImageReq* get_image_req);
  ::onebot::GetImageReq* unsafe_arena_release_get_image_req();

  // .onebot.CanSendImageReq can_send_image_req = 233;
  bool has_can_send_image_req() const;
  private:
  bool _internal_has_can_send_image_req() const;
  public:
  void clear_can_send_image_req();
  const ::onebot::CanSendImageReq& can_send_image_req() const;
  ::onebot::CanSendImageReq* release_can_send_image_req();
  ::onebot::CanSendImageReq* mutable_can_send_image_req();
  void set_allocated_can_send_image_req(::onebot::CanSendImageReq* can_send_image_req);
  private:
  const ::onebot::CanSendImageReq& _internal_can_send_image_req() const;
  ::onebot::CanSendImageReq* _internal_mutable_can_send_image_req();
  public:
  void unsafe_arena_set_allocated_can_send_image_req(
      ::onebot::CanSendImageReq* can_send_image_req);
  ::onebot::CanSendImageReq* unsafe_arena_release_can_send_image_req();

  // .onebot.CanSendRecordReq can_send_record_req = 234;
  bool has_can_send_record_req() const;
  private:
  bool _internal_has_can_send_record_req() const;
  public:
  void clear_can_send_record_req();
  const ::onebot::CanSendRecordReq& can_send_record_req() const;
  ::onebot::CanSendRecordReq* release_can_send_record_req();
  ::onebot::CanSendRecordReq* mutable_can_send_record_req();
  void set_allocated_can_send_record_req(::onebot::CanSendRecordReq* can_send_record_req);
  private:
  const ::onebot::CanSendRecordReq& _internal_can_send_record_req() const;
  ::onebot::CanSendRecordReq* _internal_mutable_can_send_record_req();
  public:
  void unsafe_arena_set_allocated_can_send_record_req(
      ::onebot::CanSendRecordReq* can_send_record_req);
  ::onebot::CanSendRecordReq* unsafe_arena_release_can_send_record_req();

  // .onebot.GetStatusReq get_status_req = 235;
  bool has_get_status_req() const;
  private:
  bool _internal_has_get_status_req() const;
  public:
  void clear_get_status_req();
  const ::onebot::GetStatusReq& get_status_req() const;
  ::onebot::GetStatusReq* release_get_status_req();
  ::onebot::GetStatusReq* mutable_get_status_req();
  void set_allocated_get_status_req(::onebot::GetStatusReq* get_status_req);
  private:
  const ::onebot::GetStatusReq& _internal_get_status_req() const;
  ::onebot::GetStatusReq* _internal_mutable_get_status_req();
  public:
  void unsafe_arena_set_allocated_get_status_req(
      ::onebot::GetStatusReq* get_status_req);
  ::onebot::GetStatusReq* unsafe_arena_release_get_status_req();

  // .onebot.GetVersionInfoReq get_version_info_req = 236;
  bool has_get_version_info_req() const;
  private:
  bool _internal_has_get_version_info_req() const;
  public:
  void clear_get_version_info_req();
  const ::onebot::GetVersionInfoReq& get_version_info_req() const;
  ::onebot::GetVersionInfoReq* release_get_version_info_req();
  ::onebot::GetVersionInfoReq* mutable_get_version_info_req();
  void set_allocated_get_version_info_req(::onebot::GetVersionInfoReq* get_version_info_req);
  private:
  const ::onebot::GetVersionInfoReq& _internal_get_version_info_req() const;
  ::onebot::GetVersionInfoReq* _internal_mutable_get_version_info_req();
  public:
  void unsafe_arena_set_allocated_get_version_info_req(
      ::onebot::GetVersionInfoReq* get_version_info_req);
  ::onebot::GetVersionInfoReq* unsafe_arena_release_get_version_info_req();

  // .onebot.SetRestartReq set_restart_req = 237;
  bool has_set_restart_req() const;
  private:
  bool _internal_has_set_restart_req() const;
  public:
  void clear_set_restart_req();
  const ::onebot::SetRestartReq& set_restart_req() const;
  ::onebot::SetRestartReq* release_set_restart_req();
  ::onebot::SetRestartReq* mutable_set_restart_req();
  void set_allocated_set_restart_req(::onebot::SetRestartReq* set_restart_req);
  private:
  const ::onebot::SetRestartReq& _internal_set_restart_req() const;
  ::onebot::SetRestartReq* _internal_mutable_set_restart_req();
  public:
  void unsafe_arena_set_allocated_set_restart_req(
      ::onebot::SetRestartReq* set_restart_req);
  ::onebot::SetRestartReq* unsafe_arena_release_set_restart_req();

  // .onebot.CleanCacheReq clean_cache_req = 238;
  bool has_clean_cache_req() const;
  private:
  bool _internal_has_clean_cache_req() const;
  public:
  void clear_clean_cache_req();
  const ::onebot::CleanCacheReq& clean_cache_req() const;
  ::onebot::CleanCacheReq* release_clean_cache_req();
  ::onebot::CleanCacheReq* mutable_clean_cache_req();
  void set_allocated_clean_cache_req(::onebot::CleanCacheReq* clean_cache_req);
  private:
  const ::onebot::CleanCacheReq& _internal_clean_cache_req() const;
  ::onebot::CleanCacheReq* _internal_mutable_clean_cache_req();
  public:
  void unsafe_arena_set_allocated_clean_cache_req(
      ::onebot::CleanCacheReq* clean_cache_req);
  ::onebot::CleanCacheReq* unsafe_arena_release_clean_cache_req();

  // .onebot.SendPrivateMsgResp send_private_msg_resp = 301;
  bool has_send_private_msg_resp() const;
  private:
  bool _internal_has_send_private_msg_resp() const;
  public:
  void clear_send_private_msg_resp();
  const ::onebot::SendPrivateMsgResp& send_private_msg_resp() const;
  ::onebot::SendPrivateMsgResp* release_send_private_msg_resp();
  ::onebot::SendPrivateMsgResp* mutable_send_private_msg_resp();
  void set_allocated_send_private_msg_resp(::onebot::SendPrivateMsgResp* send_private_msg_resp);
  private:
  const ::onebot::SendPrivateMsgResp& _internal_send_private_msg_resp() const;
  ::onebot::SendPrivateMsgResp* _internal_mutable_send_private_msg_resp();
  public:
  void unsafe_arena_set_allocated_send_private_msg_resp(
      ::onebot::SendPrivateMsgResp* send_private_msg_resp);
  ::onebot::SendPrivateMsgResp* unsafe_arena_release_send_private_msg_resp();

  // .onebot.SendGroupMsgResp send_group_msg_resp = 302;
  bool has_send_group_msg_resp() const;
  private:
  bool _internal_has_send_group_msg_resp() const;
  public:
  void clear_send_group_msg_resp();
  const ::onebot::SendGroupMsgResp& send_group_msg_resp() const;
  ::onebot::SendGroupMsgResp* release_send_group_msg_resp();
  ::onebot::SendGroupMsgResp* mutable_send_group_msg_resp();
  void set_allocated_send_group_msg_resp(::onebot::SendGroupMsgResp* send_group_msg_resp);
  private:
  const ::onebot::SendGroupMsgResp& _internal_send_group_msg_resp() const;
  ::onebot::SendGroupMsgResp* _internal_mutable_send_group_msg_resp();
  public:
  void unsafe_arena_set_allocated_send_group_msg_resp(
      ::onebot::SendGroupMsgResp* send_group_msg_resp);
  ::onebot::SendGroupMsgResp* unsafe_arena_release_send_group_msg_resp();

  // .onebot.SendMsgResp send_msg_resp = 303;
  bool has_send_msg_resp() const;
  private:
  bool _internal_has_send_msg_resp() const;
  public:
  void clear_send_msg_resp();
  const ::onebot::SendMsgResp& send_msg_resp() const;
  ::onebot::SendMsgResp* release_send_msg_resp();
  ::onebot::SendMsgResp* mutable_send_msg_resp();
  void set_allocated_send_msg_resp(::onebot::SendMsgResp* send_msg_resp);
  private:
  const ::onebot::SendMsgResp& _internal_send_msg_resp() const;
  ::onebot::SendMsgResp* _internal_mutable_send_msg_resp();
  public:
  void unsafe_arena_set_allocated_send_msg_resp(
      ::onebot::SendMsgResp* send_msg_resp);
  ::onebot::SendMsgResp* unsafe_arena_release_send_msg_resp();

  // .onebot.DeleteMsgResp delete_msg_resp = 304;
  bool has_delete_msg_resp() const;
  private:
  bool _internal_has_delete_msg_resp() const;
  public:
  void clear_delete_msg_resp();
  const ::onebot::DeleteMsgResp& delete_msg_resp() const;
  ::onebot::DeleteMsgResp* release_delete_msg_resp();
  ::onebot::DeleteMsgResp* mutable_delete_msg_resp();
  void set_allocated_delete_msg_resp(::onebot::DeleteMsgResp* delete_msg_resp);
  private:
  const ::onebot::DeleteMsgResp& _internal_delete_msg_resp() const;
  ::onebot::DeleteMsgResp* _internal_mutable_delete_msg_resp();
  public:
  void unsafe_arena_set_allocated_delete_msg_resp(
      ::onebot::DeleteMsgResp* delete_msg_resp);
  ::onebot::DeleteMsgResp* unsafe_arena_release_delete_msg_resp();

  // .onebot.GetMsgResp get_msg_resp = 305;
  bool has_get_msg_resp() const;
  private:
  bool _internal_has_get_msg_resp() const;
  public:
  void clear_get_msg_resp();
  const ::onebot::GetMsgResp& get_msg_resp() const;
  ::onebot::GetMsgResp* release_get_msg_resp();
  ::onebot::GetMsgResp* mutable_get_msg_resp();
  void set_allocated_get_msg_resp(::onebot::GetMsgResp* get_msg_resp);
  private:
  const ::onebot::GetMsgResp& _internal_get_msg_resp() const;
  ::onebot::GetMsgResp* _internal_mutable_get_msg_resp();
  public:
  void unsafe_arena_set_allocated_get_msg_resp(
      ::onebot::GetMsgResp* get_msg_resp);
  ::onebot::GetMsgResp* unsafe_arena_release_get_msg_resp();

  // .onebot.GetForwardMsgResp get_forward_msg_resp = 306;
  bool has_get_forward_msg_resp() const;
  private:
  bool _internal_has_get_forward_msg_resp() const;
  public:
  void clear_get_forward_msg_resp();
  const ::onebot::GetForwardMsgResp& get_forward_msg_resp() const;
  ::onebot::GetForwardMsgResp* release_get_forward_msg_resp();
  ::onebot::GetForwardMsgResp* mutable_get_forward_msg_resp();
  void set_allocated_get_forward_msg_resp(::onebot::GetForwardMsgResp* get_forward_msg_resp);
  private:
  const ::onebot::GetForwardMsgResp& _internal_get_forward_msg_resp() const;
  ::onebot::GetForwardMsgResp* _internal_mutable_get_forward_msg_resp();
  public:
  void unsafe_arena_set_allocated_get_forward_msg_resp(
      ::onebot::GetForwardMsgResp* get_forward_msg_resp);
  ::onebot::GetForwardMsgResp* unsafe_arena_release_get_forward_msg_resp();

  // .onebot.SendLikeResp send_like_resp = 307;
  bool has_send_like_resp() const;
  private:
  bool _internal_has_send_like_resp() const;
  public:
  void clear_send_like_resp();
  const ::onebot::SendLikeResp& send_like_resp() const;
  ::onebot::SendLikeResp* release_send_like_resp();
  ::onebot::SendLikeResp* mutable_send_like_resp();
  void set_allocated_send_like_resp(::onebot::SendLikeResp* send_like_resp);
  private:
  const ::onebot::SendLikeResp& _internal_send_like_resp() const;
  ::onebot::SendLikeResp* _internal_mutable_send_like_resp();
  public:
  void unsafe_arena_set_allocated_send_like_resp(
      ::onebot::SendLikeResp* send_like_resp);
  ::onebot::SendLikeResp* unsafe_arena_release_send_like_resp();

  // .onebot.SetGroupKickResp set_group_kick_resp = 308;
  bool has_set_group_kick_resp() const;
  private:
  bool _internal_has_set_group_kick_resp() const;
  public:
  void clear_set_group_kick_resp();
  const ::onebot::SetGroupKickResp& set_group_kick_resp() const;
  ::onebot::SetGroupKickResp* release_set_group_kick_resp();
  ::onebot::SetGroupKickResp* mutable_set_group_kick_resp();
  void set_allocated_set_group_kick_resp(::onebot::SetGroupKickResp* set_group_kick_resp);
  private:
  const ::onebot::SetGroupKickResp& _internal_set_group_kick_resp() const;
  ::onebot::SetGroupKickResp* _internal_mutable_set_group_kick_resp();
  public:
  void unsafe_arena_set_allocated_set_group_kick_resp(
      ::onebot::SetGroupKickResp* set_group_kick_resp);
  ::onebot::SetGroupKickResp* unsafe_arena_release_set_group_kick_resp();

  // .onebot.SetGroupBanResp set_group_ban_resp = 309;
  bool has_set_group_ban_resp() const;
  private:
  bool _internal_has_set_group_ban_resp() const;
  public:
  void clear_set_group_ban_resp();
  const ::onebot::SetGroupBanResp& set_group_ban_resp() const;
  ::onebot::SetGroupBanResp* release_set_group_ban_resp();
  ::onebot::SetGroupBanResp* mutable_set_group_ban_resp();
  void set_allocated_set_group_ban_resp(::onebot::SetGroupBanResp* set_group_ban_resp);
  private:
  const ::onebot::SetGroupBanResp& _internal_set_group_ban_resp() const;
  ::onebot::SetGroupBanResp* _internal_mutable_set_group_ban_resp();
  public:
  void unsafe_arena_set_allocated_set_group_ban_resp(
      ::onebot::SetGroupBanResp* set_group_ban_resp);
  ::onebot::SetGroupBanResp* unsafe_arena_release_set_group_ban_resp();

  // .onebot.SetGroupAnonymousBanResp set_group_anonymous_ban_resp = 310;
  bool has_set_group_anonymous_ban_resp() const;
  private:
  bool _internal_has_set_group_anonymous_ban_resp() const;
  public:
  void clear_set_group_anonymous_ban_resp();
  const ::onebot::SetGroupAnonymousBanResp& set_group_anonymous_ban_resp() const;
  ::onebot::SetGroupAnonymousBanResp* release_set_group_anonymous_ban_resp();
  ::onebot::SetGroupAnonymousBanResp* mutable_set_group_anonymous_ban_resp();
  void set_allocated_set_group_anonymous_ban_resp(::onebot::SetGroupAnonymousBanResp* set_group_anonymous_ban_resp);
  private:
  const ::onebot::SetGroupAnonymousBanResp& _internal_set_group_anonymous_ban_resp() const;
  ::onebot::SetGroupAnonymousBanResp* _internal_mutable_set_group_anonymous_ban_resp();
  public:
  void unsafe_arena_set_allocated_set_group_anonymous_ban_resp(
      ::onebot::SetGroupAnonymousBanResp* set_group_anonymous_ban_resp);
  ::onebot::SetGroupAnonymousBanResp* unsafe_arena_release_set_group_anonymous_ban_resp();

  // .onebot.SetGroupWholeBanResp set_group_whole_ban_resp = 311;
  bool has_set_group_whole_ban_resp() const;
  private:
  bool _internal_has_set_group_whole_ban_resp() const;
  public:
  void clear_set_group_whole_ban_resp();
  const ::onebot::SetGroupWholeBanResp& set_group_whole_ban_resp() const;
  ::onebot::SetGroupWholeBanResp* release_set_group_whole_ban_resp();
  ::onebot::SetGroupWholeBanResp* mutable_set_group_whole_ban_resp();
  void set_allocated_set_group_whole_ban_resp(::onebot::SetGroupWholeBanResp* set_group_whole_ban_resp);
  private:
  const ::onebot::SetGroupWholeBanResp& _internal_set_group_whole_ban_resp() const;
  ::onebot::SetGroupWholeBanResp* _internal_mutable_set_group_whole_ban_resp();
  public:
  void unsafe_arena_set_allocated_set_group_whole_ban_resp(
      ::onebot::SetGroupWholeBanResp* set_group_whole_ban_resp);
  ::onebot::SetGroupWholeBanResp* unsafe_arena_release_set_group_whole_ban_resp();

  // .onebot.SetGroupAdminResp set_group_admin_resp = 312;
  bool has_set_group_admin_resp() const;
  private:
  bool _internal_has_set_group_admin_resp() const;
  public:
  void clear_set_group_admin_resp();
  const ::onebot::SetGroupAdminResp& set_group_admin_resp() const;
  ::onebot::SetGroupAdminResp* release_set_group_admin_resp();
  ::onebot::SetGroupAdminResp* mutable_set_group_admin_resp();
  void set_allocated_set_group_admin_resp(::onebot::SetGroupAdminResp* set_group_admin_resp);
  private:
  const ::onebot::SetGroupAdminResp& _internal_set_group_admin_resp() const;
  ::onebot::SetGroupAdminResp* _internal_mutable_set_group_admin_resp();
  public:
  void unsafe_arena_set_allocated_set_group_admin_resp(
      ::onebot::SetGroupAdminResp* set_group_admin_resp);
  ::onebot::SetGroupAdminResp* unsafe_arena_release_set_group_admin_resp();

  // .onebot.SetGroupAnonymousResp set_group_anonymous_resp = 313;
  bool has_set_group_anonymous_resp() const;
  private:
  bool _internal_has_set_group_anonymous_resp() const;
  public:
  void clear_set_group_anonymous_resp();
  const ::onebot::SetGroupAnonymousResp& set_group_anonymous_resp() const;
  ::onebot::SetGroupAnonymousResp* release_set_group_anonymous_resp();
  ::onebot::SetGroupAnonymousResp* mutable_set_group_anonymous_resp();
  void set_allocated_set_group_anonymous_resp(::onebot::SetGroupAnonymousResp* set_group_anonymous_resp);
  private:
  const ::onebot::SetGroupAnonymousResp& _internal_set_group_anonymous_resp() const;
  ::onebot::SetGroupAnonymousResp* _internal_mutable_set_group_anonymous_resp();
  public:
  void unsafe_arena_set_allocated_set_group_anonymous_resp(
      ::onebot::SetGroupAnonymousResp* set_group_anonymous_resp);
  ::onebot::SetGroupAnonymousResp* unsafe_arena_release_set_group_anonymous_resp();

  // .onebot.SetGroupCardResp set_group_card_resp = 314;
  bool has_set_group_card_resp() const;
  private:
  bool _internal_has_set_group_card_resp() const;
  public:
  void clear_set_group_card_resp();
  const ::onebot::SetGroupCardResp& set_group_card_resp() const;
  ::onebot::SetGroupCardResp* release_set_group_card_resp();
  ::onebot::SetGroupCardResp* mutable_set_group_card_resp();
  void set_allocated_set_group_card_resp(::onebot::SetGroupCardResp* set_group_card_resp);
  private:
  const ::onebot::SetGroupCardResp& _internal_set_group_card_resp() const;
  ::onebot::SetGroupCardResp* _internal_mutable_set_group_card_resp();
  public:
  void unsafe_arena_set_allocated_set_group_card_resp(
      ::onebot::SetGroupCardResp* set_group_card_resp);
  ::onebot::SetGroupCardResp* unsafe_arena_release_set_group_card_resp();

  // .onebot.SetGroupNameResp set_group_name_resp = 315;
  bool has_set_group_name_resp() const;
  private:
  bool _internal_has_set_group_name_resp() const;
  public:
  void clear_set_group_name_resp();
  const ::onebot::SetGroupNameResp& set_group_name_resp() const;
  ::onebot::SetGroupNameResp* release_set_group_name_resp();
  ::onebot::SetGroupNameResp* mutable_set_group_name_resp();
  void set_allocated_set_group_name_resp(::onebot::SetGroupNameResp* set_group_name_resp);
  private:
  const ::onebot::SetGroupNameResp& _internal_set_group_name_resp() const;
  ::onebot::SetGroupNameResp* _internal_mutable_set_group_name_resp();
  public:
  void unsafe_arena_set_allocated_set_group_name_resp(
      ::onebot::SetGroupNameResp* set_group_name_resp);
  ::onebot::SetGroupNameResp* unsafe_arena_release_set_group_name_resp();

  // .onebot.SetGroupLeaveResp set_group_leave_resp = 316;
  bool has_set_group_leave_resp() const;
  private:
  bool _internal_has_set_group_leave_resp() const;
  public:
  void clear_set_group_leave_resp();
  const ::onebot::SetGroupLeaveResp& set_group_leave_resp() const;
  ::onebot::SetGroupLeaveResp* release_set_group_leave_resp();
  ::onebot::SetGroupLeaveResp* mutable_set_group_leave_resp();
  void set_allocated_set_group_leave_resp(::onebot::SetGroupLeaveResp* set_group_leave_resp);
  private:
  const ::onebot::SetGroupLeaveResp& _internal_set_group_leave_resp() const;
  ::onebot::SetGroupLeaveResp* _internal_mutable_set_group_leave_resp();
  public:
  void unsafe_arena_set_allocated_set_group_leave_resp(
      ::onebot::SetGroupLeaveResp* set_group_leave_resp);
  ::onebot::SetGroupLeaveResp* unsafe_arena_release_set_group_leave_resp();

  // .onebot.SetGroupSpecialTitleResp set_group_special_title_resp = 317;
  bool has_set_group_special_title_resp() const;
  private:
  bool _internal_has_set_group_special_title_resp() const;
  public:
  void clear_set_group_special_title_resp();
  const ::onebot::SetGroupSpecialTitleResp& set_group_special_title_resp() const;
  ::onebot::SetGroupSpecialTitleResp* release_set_group_special_title_resp();
  ::onebot::SetGroupSpecialTitleResp* mutable_set_group_special_title_resp();
  void set_allocated_set_group_special_title_resp(::onebot::SetGroupSpecialTitleResp* set_group_special_title_resp);
  private:
  const ::onebot::SetGroupSpecialTitleResp& _internal_set_group_special_title_resp() const;
  ::onebot::SetGroupSpecialTitleResp* _internal_mutable_set_group_special_title_resp();
  public:
  void unsafe_arena_set_allocated_set_group_special_title_resp(
      ::onebot::SetGroupSpecialTitleResp* set_group_special_title_resp);
  ::onebot::SetGroupSpecialTitleResp* unsafe_arena_release_set_group_special_title_resp();

  // .onebot.SetFriendAddRequestResp set_friend_add_request_resp = 318;
  bool has_set_friend_add_request_resp() const;
  private:
  bool _internal_has_set_friend_add_request_resp() const;
  public:
  void clear_set_friend_add_request_resp();
  const ::onebot::SetFriendAddRequestResp& set_friend_add_request_resp() const;
  ::onebot::SetFriendAddRequestResp* release_set_friend_add_request_resp();
  ::onebot::SetFriendAddRequestResp* mutable_set_friend_add_request_resp();
  void set_allocated_set_friend_add_request_resp(::onebot::SetFriendAddRequestResp* set_friend_add_request_resp);
  private:
  const ::onebot::SetFriendAddRequestResp& _internal_set_friend_add_request_resp() const;
  ::onebot::SetFriendAddRequestResp* _internal_mutable_set_friend_add_request_resp();
  public:
  void unsafe_arena_set_allocated_set_friend_add_request_resp(
      ::onebot::SetFriendAddRequestResp* set_friend_add_request_resp);
  ::onebot::SetFriendAddRequestResp* unsafe_arena_release_set_friend_add_request_resp();

  // .onebot.SetGroupAddRequestResp set_group_add_request_resp = 319;
  bool has_set_group_add_request_resp() const;
  private:
  bool _internal_has_set_group_add_request_resp() const;
  public:
  void clear_set_group_add_request_resp();
  const ::onebot::SetGroupAddRequestResp& set_group_add_request_resp() const;
  ::onebot::SetGroupAddRequestResp* release_set_group_add_request_resp();
  ::onebot::SetGroupAddRequestResp* mutable_set_group_add_request_resp();
  void set_allocated_set_group_add_request_resp(::onebot::SetGroupAddRequestResp* set_group_add_request_resp);
  private:
  const ::onebot::SetGroupAddRequestResp& _internal_set_group_add_request_resp() const;
  ::onebot::SetGroupAddRequestResp* _internal_mutable_set_group_add_request_resp();
  public:
  void unsafe_arena_set_allocated_set_group_add_request_resp(
      ::onebot::SetGroupAddRequestResp* set_group_add_request_resp);
  ::onebot::SetGroupAddRequestResp* unsafe_arena_release_set_group_add_request_resp();

  // .onebot.GetLoginInfoResp get_login_info_resp = 320;
  bool has_get_login_info_resp() const;
  private:
  bool _internal_has_get_login_info_resp() const;
  public:
  void clear_get_login_info_resp();
  const ::onebot::GetLoginInfoResp& get_login_info_resp() const;
  ::onebot::GetLoginInfoResp* release_get_login_info_resp();
  ::onebot::GetLoginInfoResp* mutable_get_login_info_resp();
  void set_allocated_get_login_info_resp(::onebot::GetLoginInfoResp* get_login_info_resp);
  private:
  const ::onebot::GetLoginInfoResp& _internal_get_login_info_resp() const;
  ::onebot::GetLoginInfoResp* _internal_mutable_get_login_info_resp();
  public:
  void unsafe_arena_set_allocated_get_login_info_resp(
      ::onebot::GetLoginInfoResp* get_login_info_resp);
  ::onebot::GetLoginInfoResp* unsafe_arena_release_get_login_info_resp();

  // .onebot.GetStrangerInfoResp get_stranger_info_resp = 321;
  bool has_get_stranger_info_resp() const;
  private:
  bool _internal_has_get_stranger_info_resp() const;
  public:
  void clear_get_stranger_info_resp();
  const ::onebot::GetStrangerInfoResp& get_stranger_info_resp() const;
  ::onebot::GetStrangerInfoResp* release_get_stranger_info_resp();
  ::onebot::GetStrangerInfoResp* mutable_get_stranger_info_resp();
  void set_allocated_get_stranger_info_resp(::onebot::GetStrangerInfoResp* get_stranger_info_resp);
  private:
  const ::onebot::GetStrangerInfoResp& _internal_get_stranger_info_resp() const;
  ::onebot::GetStrangerInfoResp* _internal_mutable_get_stranger_info_resp();
  public:
  void unsafe_arena_set_allocated_get_stranger_info_resp(
      ::onebot::GetStrangerInfoResp* get_stranger_info_resp);
  ::onebot::GetStrangerInfoResp* unsafe_arena_release_get_stranger_info_resp();

  // .onebot.GetFriendListResp get_friend_list_resp = 322;
  bool has_get_friend_list_resp() const;
  private:
  bool _internal_has_get_friend_list_resp() const;
  public:
  void clear_get_friend_list_resp();
  const ::onebot::GetFriendListResp& get_friend_list_resp() const;
  ::onebot::GetFriendListResp* release_get_friend_list_resp();
  ::onebot::GetFriendListResp* mutable_get_friend_list_resp();
  void set_allocated_get_friend_list_resp(::onebot::GetFriendListResp* get_friend_list_resp);
  private:
  const ::onebot::GetFriendListResp& _internal_get_friend_list_resp() const;
  ::onebot::GetFriendListResp* _internal_mutable_get_friend_list_resp();
  public:
  void unsafe_arena_set_allocated_get_friend_list_resp(
      ::onebot::GetFriendListResp* get_friend_list_resp);
  ::onebot::GetFriendListResp* unsafe_arena_release_get_friend_list_resp();

  // .onebot.GetGroupInfoResp get_group_info_resp = 323;
  bool has_get_group_info_resp() const;
  private:
  bool _internal_has_get_group_info_resp() const;
  public:
  void clear_get_group_info_resp();
  const ::onebot::GetGroupInfoResp& get_group_info_resp() const;
  ::onebot::GetGroupInfoResp* release_get_group_info_resp();
  ::onebot::GetGroupInfoResp* mutable_get_group_info_resp();
  void set_allocated_get_group_info_resp(::onebot::GetGroupInfoResp* get_group_info_resp);
  private:
  const ::onebot::GetGroupInfoResp& _internal_get_group_info_resp() const;
  ::onebot::GetGroupInfoResp* _internal_mutable_get_group_info_resp();
  public:
  void unsafe_arena_set_allocated_get_group_info_resp(
      ::onebot::GetGroupInfoResp* get_group_info_resp);
  ::onebot::GetGroupInfoResp* unsafe_arena_release_get_group_info_resp();

  // .onebot.GetGroupListResp get_group_list_resp = 324;
  bool has_get_group_list_resp() const;
  private:
  bool _internal_has_get_group_list_resp() const;
  public:
  void clear_get_group_list_resp();
  const ::onebot::GetGroupListResp& get_group_list_resp() const;
  ::onebot::GetGroupListResp* release_get_group_list_resp();
  ::onebot::GetGroupListResp* mutable_get_group_list_resp();
  void set_allocated_get_group_list_resp(::onebot::GetGroupListResp* get_group_list_resp);
  private:
  const ::onebot::GetGroupListResp& _internal_get_group_list_resp() const;
  ::onebot::GetGroupListResp* _internal_mutable_get_group_list_resp();
  public:
  void unsafe_arena_set_allocated_get_group_list_resp(
      ::onebot::GetGroupListResp* get_group_list_resp);
  ::onebot::GetGroupListResp* unsafe_arena_release_get_group_list_resp();

  // .onebot.GetGroupMemberInfoResp get_group_member_info_resp = 325;
  bool has_get_group_member_info_resp() const;
  private:
  bool _internal_has_get_group_member_info_resp() const;
  public:
  void clear_get_group_member_info_resp();
  const ::onebot::GetGroupMemberInfoResp& get_group_member_info_resp() const;
  ::onebot::GetGroupMemberInfoResp* release_get_group_member_info_resp();
  ::onebot::GetGroupMemberInfoResp* mutable_get_group_member_info_resp();
  void set_allocated_get_group_member_info_resp(::onebot::GetGroupMemberInfoResp* get_group_member_info_resp);
  private:
  const ::onebot::GetGroupMemberInfoResp& _internal_get_group_member_info_resp() const;
  ::onebot::GetGroupMemberInfoResp* _internal_mutable_get_group_member_info_resp();
  public:
  void unsafe_arena_set_allocated_get_group_member_info_resp(
      ::onebot::GetGroupMemberInfoResp* get_group_member_info_resp);
  ::onebot::GetGroupMemberInfoResp* unsafe_arena_release_get_group_member_info_resp();

  // .onebot.GetGroupMemberListResp get_group_member_list_resp = 326;
  bool has_get_group_member_list_resp() const;
  private:
  bool _internal_has_get_group_member_list_resp() const;
  public:
  void clear_get_group_member_list_resp();
  const ::onebot::GetGroupMemberListResp& get_group_member_list_resp() const;
  ::onebot::GetGroupMemberListResp* release_get_group_member_list_resp();
  ::onebot::GetGroupMemberListResp* mutable_get_group_member_list_resp();
  void set_allocated_get_group_member_list_resp(::onebot::GetGroupMemberListResp* get_group_member_list_resp);
  private:
  const ::onebot::GetGroupMemberListResp& _internal_get_group_member_list_resp() const;
  ::onebot::GetGroupMemberListResp* _internal_mutable_get_group_member_list_resp();
  public:
  void unsafe_arena_set_allocated_get_group_member_list_resp(
      ::onebot::GetGroupMemberListResp* get_group_member_list_resp);
  ::onebot::GetGroupMemberListResp* unsafe_arena_release_get_group_member_list_resp();

  // .onebot.GetGroupHonorInfoResp get_group_honor_info_resp = 327;
  bool has_get_group_honor_info_resp() const;
  private:
  bool _internal_has_get_group_honor_info_resp() const;
  public:
  void clear_get_group_honor_info_resp();
  const ::onebot::GetGroupHonorInfoResp& get_group_honor_info_resp() const;
  ::onebot::GetGroupHonorInfoResp* release_get_group_honor_info_resp();
  ::onebot::GetGroupHonorInfoResp* mutable_get_group_honor_info_resp();
  void set_allocated_get_group_honor_info_resp(::onebot::GetGroupHonorInfoResp* get_group_honor_info_resp);
  private:
  const ::onebot::GetGroupHonorInfoResp& _internal_get_group_honor_info_resp() const;
  ::onebot::GetGroupHonorInfoResp* _internal_mutable_get_group_honor_info_resp();
  public:
  void unsafe_arena_set_allocated_get_group_honor_info_resp(
      ::onebot::GetGroupHonorInfoResp* get_group_honor_info_resp);
  ::onebot::GetGroupHonorInfoResp* unsafe_arena_release_get_group_honor_info_resp();

  // .onebot.GetCookiesResp get_cookies_resp = 328;
  bool has_get_cookies_resp() const;
  private:
  bool _internal_has_get_cookies_resp() const;
  public:
  void clear_get_cookies_resp();
  const ::onebot::GetCookiesResp& get_cookies_resp() const;
  ::onebot::GetCookiesResp* release_get_cookies_resp();
  ::onebot::GetCookiesResp* mutable_get_cookies_resp();
  void set_allocated_get_cookies_resp(::onebot::GetCookiesResp* get_cookies_resp);
  private:
  const ::onebot::GetCookiesResp& _internal_get_cookies_resp() const;
  ::onebot::GetCookiesResp* _internal_mutable_get_cookies_resp();
  public:
  void unsafe_arena_set_allocated_get_cookies_resp(
      ::onebot::GetCookiesResp* get_cookies_resp);
  ::onebot::GetCookiesResp* unsafe_arena_release_get_cookies_resp();

  // .onebot.GetCsrfTokenResp get_csrf_token_resp = 329;
  bool has_get_csrf_token_resp() const;
  private:
  bool _internal_has_get_csrf_token_resp() const;
  public:
  void clear_get_csrf_token_resp();
  const ::onebot::GetCsrfTokenResp& get_csrf_token_resp() const;
  ::onebot::GetCsrfTokenResp* release_get_csrf_token_resp();
  ::onebot::GetCsrfTokenResp* mutable_get_csrf_token_resp();
  void set_allocated_get_csrf_token_resp(::onebot::GetCsrfTokenResp* get_csrf_token_resp);
  private:
  const ::onebot::GetCsrfTokenResp& _internal_get_csrf_token_resp() const;
  ::onebot::GetCsrfTokenResp* _internal_mutable_get_csrf_token_resp();
  public:
  void unsafe_arena_set_allocated_get_csrf_token_resp(
      ::onebot::GetCsrfTokenResp* get_csrf_token_resp);
  ::onebot::GetCsrfTokenResp* unsafe_arena_release_get_csrf_token_resp();

  // .onebot.GetCredentialsResp get_credentials_resp = 330;
  bool has_get_credentials_resp() const;
  private:
  bool _internal_has_get_credentials_resp() const;
  public:
  void clear_get_credentials_resp();
  const ::onebot::GetCredentialsResp& get_credentials_resp() const;
  ::onebot::GetCredentialsResp* release_get_credentials_resp();
  ::onebot::GetCredentialsResp* mutable_get_credentials_resp();
  void set_allocated_get_credentials_resp(::onebot::GetCredentialsResp* get_credentials_resp);
  private:
  const ::onebot::GetCredentialsResp& _internal_get_credentials_resp() const;
  ::onebot::GetCredentialsResp* _internal_mutable_get_credentials_resp();
  public:
  void unsafe_arena_set_allocated_get_credentials_resp(
      ::onebot::GetCredentialsResp* get_credentials_resp);
  ::onebot::GetCredentialsResp* unsafe_arena_release_get_credentials_resp();

  // .onebot.GetRecordResp get_record_resp = 331;
  bool has_get_record_resp() const;
  private:
  bool _internal_has_get_record_resp() const;
  public:
  void clear_get_record_resp();
  const ::onebot::GetRecordResp& get_record_resp() const;
  ::onebot::GetRecordResp* release_get_record_resp();
  ::onebot::GetRecordResp* mutable_get_record_resp();
  void set_allocated_get_record_resp(::onebot::GetRecordResp* get_record_resp);
  private:
  const ::onebot::GetRecordResp& _internal_get_record_resp() const;
  ::onebot::GetRecordResp* _internal_mutable_get_record_resp();
  public:
  void unsafe_arena_set_allocated_get_record_resp(
      ::onebot::GetRecordResp* get_record_resp);
  ::onebot::GetRecordResp* unsafe_arena_release_get_record_resp();

  // .onebot.GetImageResp get_image_resp = 332;
  bool has_get_image_resp() const;
  private:
  bool _internal_has_get_image_resp() const;
  public:
  void clear_get_image_resp();
  const ::onebot::GetImageResp& get_image_resp() const;
  ::onebot::GetImageResp* release_get_image_resp();
  ::onebot::GetImageResp* mutable_get_image_resp();
  void set_allocated_get_image_resp(::onebot::GetImageResp* get_image_resp);
  private:
  const ::onebot::GetImageResp& _internal_get_image_resp() const;
  ::onebot::GetImageResp* _internal_mutable_get_image_resp();
  public:
  void unsafe_arena_set_allocated_get_image_resp(
      ::onebot::GetImageResp* get_image_resp);
  ::onebot::GetImageResp* unsafe_arena_release_get_image_resp();

  // .onebot.CanSendImageResp can_send_image_resp = 333;
  bool has_can_send_image_resp() const;
  private:
  bool _internal_has_can_send_image_resp() const;
  public:
  void clear_can_send_image_resp();
  const ::onebot::CanSendImageResp& can_send_image_resp() const;
  ::onebot::CanSendImageResp* release_can_send_image_resp();
  ::onebot::CanSendImageResp* mutable_can_send_image_resp();
  void set_allocated_can_send_image_resp(::onebot::CanSendImageResp* can_send_image_resp);
  private:
  const ::onebot::CanSendImageResp& _internal_can_send_image_resp() const;
  ::onebot::CanSendImageResp* _internal_mutable_can_send_image_resp();
  public:
  void unsafe_arena_set_allocated_can_send_image_resp(
      ::onebot::CanSendImageResp* can_send_image_resp);
  ::onebot::CanSendImageResp* unsafe_arena_release_can_send_image_resp();

  // .onebot.CanSendRecordResp can_send_record_resp = 334;
  bool has_can_send_record_resp() const;
  private:
  bool _internal_has_can_send_record_resp() const;
  public:
  void clear_can_send_record_resp();
  const ::onebot::CanSendRecordResp& can_send_record_resp() const;
  ::onebot::CanSendRecordResp* release_can_send_record_resp();
  ::onebot::CanSendRecordResp* mutable_can_send_record_resp();
  void set_allocated_can_send_record_resp(::onebot::CanSendRecordResp* can_send_record_resp);
  private:
  const ::onebot::CanSendRecordResp& _internal_can_send_record_resp() const;
  ::onebot::CanSendRecordResp* _internal_mutable_can_send_record_resp();
  public:
  void unsafe_arena_set_allocated_can_send_record_resp(
      ::onebot::CanSendRecordResp* can_send_record_resp);
  ::onebot::CanSendRecordResp* unsafe_arena_release_can_send_record_resp();

  // .onebot.GetStatusResp get_status_resp = 335;
  bool has_get_status_resp() const;
  private:
  bool _internal_has_get_status_resp() const;
  public:
  void clear_get_status_resp();
  const ::onebot::GetStatusResp& get_status_resp() const;
  ::onebot::GetStatusResp* release_get_status_resp();
  ::onebot::GetStatusResp* mutable_get_status_resp();
  void set_allocated_get_status_resp(::onebot::GetStatusResp* get_status_resp);
  private:
  const ::onebot::GetStatusResp& _internal_get_status_resp() const;
  ::onebot::GetStatusResp* _internal_mutable_get_status_resp();
  public:
  void unsafe_arena_set_allocated_get_status_resp(
      ::onebot::GetStatusResp* get_status_resp);
  ::onebot::GetStatusResp* unsafe_arena_release_get_status_resp();

  // .onebot.GetVersionInfoResp get_version_info_resp = 336;
  bool has_get_version_info_resp() const;
  private:
  bool _internal_has_get_version_info_resp() const;
  public:
  void clear_get_version_info_resp();
  const ::onebot::GetVersionInfoResp& get_version_info_resp() const;
  ::onebot::GetVersionInfoResp* release_get_version_info_resp();
  ::onebot::GetVersionInfoResp* mutable_get_version_info_resp();
  void set_allocated_get_version_info_resp(::onebot::GetVersionInfoResp* get_version_info_resp);
  private:
  const ::onebot::GetVersionInfoResp& _internal_get_version_info_resp() const;
  ::onebot::GetVersionInfoResp* _internal_mutable_get_version_info_resp();
  public:
  void unsafe_arena_set_allocated_get_version_info_resp(
      ::onebot::GetVersionInfoResp* get_version_info_resp);
  ::onebot::GetVersionInfoResp* unsafe_arena_release_get_version_info_resp();

  // .onebot.SetRestartResp set_restart_resp = 337;
  bool has_set_restart_resp() const;
  private:
  bool _internal_has_set_restart_resp() const;
  public:
  void clear_set_restart_resp();
  const ::onebot::SetRestartResp& set_restart_resp() const;
  ::onebot::SetRestartResp* release_set_restart_resp();
  ::onebot::SetRestartResp* mutable_set_restart_resp();
  void set_allocated_set_restart_resp(::onebot::SetRestartResp* set_restart_resp);
  private:
  const ::onebot::SetRestartResp& _internal_set_restart_resp() const;
  ::onebot::SetRestartResp* _internal_mutable_set_restart_resp();
  public:
  void unsafe_arena_set_allocated_set_restart_resp(
      ::onebot::SetRestartResp* set_restart_resp);
  ::onebot::SetRestartResp* unsafe_arena_release_set_restart_resp();

  // .onebot.CleanCacheResp clean_cache_resp = 338;
  bool has_clean_cache_resp() const;
  private:
  bool _internal_has_clean_cache_resp() const;
  public:
  void clear_clean_cache_resp();
  const ::onebot::CleanCacheResp& clean_cache_resp() const;
  ::onebot::CleanCacheResp* release_clean_cache_resp();
  ::onebot::CleanCacheResp* mutable_clean_cache_resp();
  void set_allocated_clean_cache_resp(::onebot::CleanCacheResp* clean_cache_resp);
  private:
  const ::onebot::CleanCacheResp& _internal_clean_cache_resp() const;
  ::onebot::CleanCacheResp* _internal_mutable_clean_cache_resp();
  public:
  void unsafe_arena_set_allocated_clean_cache_resp(
      ::onebot::CleanCacheResp* clean_cache_resp);
  ::onebot::CleanCacheResp* unsafe_arena_release_clean_cache_resp();

  void clear_data();
  DataCase data_case() const;
  // @@protoc_insertion_point(class_scope:onebot.Frame)
 private:
  class _Internal;
  void set_has_private_message_event();
  void set_has_group_message_event();
  void set_has_group_upload_notice_event();
  void set_has_group_admin_notice_event();
  void set_has_group_decrease_notice_event();
  void set_has_group_increase_notice_event();
  void set_has_group_ban_notice_event();
  void set_has_friend_add_notice_event();
  void set_has_group_recall_notice_event();
  void set_has_friend_recall_notice_event();
  void set_has_friend_request_event();
  void set_has_group_request_event();
  void set_has_send_private_msg_req();
  void set_has_send_group_msg_req();
  void set_has_send_msg_req();
  void set_has_delete_msg_req();
  void set_has_get_msg_req();
  void set_has_get_forward_msg_req();
  void set_has_send_like_req();
  void set_has_set_group_kick_req();
  void set_has_set_group_ban_req();
  void set_has_set_group_anonymous_ban_req();
  void set_has_set_group_whole_ban_req();
  void set_has_set_group_admin_req();
  void set_has_set_group_anonymous_req();
  void set_has_set_group_card_req();
  void set_has_set_group_name_req();
  void set_has_set_group_leave_req();
  void set_has_set_group_special_title_req();
  void set_has_set_friend_add_request_req();
  void set_has_set_group_add_request_req();
  void set_has_get_login_info_req();
  void set_has_get_stranger_info_req();
  void set_has_get_friend_list_req();
  void set_has_get_group_info_req();
  void set_has_get_group_list_req();
  void set_has_get_group_member_info_req();
  void set_has_get_group_member_list_req();
  void set_has_get_group_honor_info_req();
  void set_has_get_cookies_req();
  void set_has_get_csrf_token_req();
  void set_has_get_credentials_req();
  void set_has_get_record_req();
  void set_has_get_image_req();
  void set_has_can_send_image_req();
  void set_has_can_send_record_req();
  void set_has_get_status_req();
  void set_has_get_version_info_req();
  void set_has_set_restart_req();
  void set_has_clean_cache_req();
  void set_has_send_private_msg_resp();
  void set_has_send_group_msg_resp();
  void set_has_send_msg_resp();
  void set_has_delete_msg_resp();
  void set_has_get_msg_resp();
  void set_has_get_forward_msg_resp();
  void set_has_send_like_resp();
  void set_has_set_group_kick_resp();
  void set_has_set_group_ban_resp();
  void set_has_set_group_anonymous_ban_resp();
  void set_has_set_group_whole_ban_resp();
  void set_has_set_group_admin_resp();
  void set_has_set_group_anonymous_resp();
  void set_has_set_group_card_resp();
  void set_has_set_group_name_resp();
  void set_has_set_group_leave_resp();
  void set_has_set_group_special_title_resp();
  void set_has_set_friend_add_request_resp();
  void set_has_set_group_add_request_resp();
  void set_has_get_login_info_resp();
  void set_has_get_stranger_info_resp();
  void set_has_get_friend_list_resp();
  void set_has_get_group_info_resp();
  void set_has_get_group_list_resp();
  void set_has_get_group_member_info_resp();
  void set_has_get_group_member_list_resp();
  void set_has_get_group_honor_info_resp();
  void set_has_get_cookies_resp();
  void set_has_get_csrf_token_resp();
  void set_has_get_credentials_resp();
  void set_has_get_record_resp();
  void set_has_get_image_resp();
  void set_has_can_send_image_resp();
  void set_has_can_send_record_resp();
  void set_has_get_status_resp();
  void set_has_get_version_info_resp();
  void set_has_set_restart_resp();
  void set_has_clean_cache_resp();

  inline bool has_data() const;
  inline void clear_has_data();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Frame_ExtraEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> extra_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr echo_;
  ::PROTOBUF_NAMESPACE_ID::int64 botid_;
  int frame_type_;
  bool ok_;
  union DataUnion {
    constexpr DataUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::onebot::PrivateMessageEvent* private_message_event_;
    ::onebot::GroupMessageEvent* group_message_event_;
    ::onebot::GroupUploadNoticeEvent* group_upload_notice_event_;
    ::onebot::GroupAdminNoticeEvent* group_admin_notice_event_;
    ::onebot::GroupDecreaseNoticeEvent* group_decrease_notice_event_;
    ::onebot::GroupIncreaseNoticeEvent* group_increase_notice_event_;
    ::onebot::GroupBanNoticeEvent* group_ban_notice_event_;
    ::onebot::FriendAddNoticeEvent* friend_add_notice_event_;
    ::onebot::GroupRecallNoticeEvent* group_recall_notice_event_;
    ::onebot::FriendRecallNoticeEvent* friend_recall_notice_event_;
    ::onebot::FriendRequestEvent* friend_request_event_;
    ::onebot::GroupRequestEvent* group_request_event_;
    ::onebot::SendPrivateMsgReq* send_private_msg_req_;
    ::onebot::SendGroupMsgReq* send_group_msg_req_;
    ::onebot::SendMsgReq* send_msg_req_;
    ::onebot::DeleteMsgReq* delete_msg_req_;
    ::onebot::GetMsgReq* get_msg_req_;
    ::onebot::GetForwardMsgReq* get_forward_msg_req_;
    ::onebot::SendLikeReq* send_like_req_;
    ::onebot::SetGroupKickReq* set_group_kick_req_;
    ::onebot::SetGroupBanReq* set_group_ban_req_;
    ::onebot::SetGroupAnonymousBanReq* set_group_anonymous_ban_req_;
    ::onebot::SetGroupWholeBanReq* set_group_whole_ban_req_;
    ::onebot::SetGroupAdminReq* set_group_admin_req_;
    ::onebot::SetGroupAnonymousReq* set_group_anonymous_req_;
    ::onebot::SetGroupCardReq* set_group_card_req_;
    ::onebot::SetGroupNameReq* set_group_name_req_;
    ::onebot::SetGroupLeaveReq* set_group_leave_req_;
    ::onebot::SetGroupSpecialTitleReq* set_group_special_title_req_;
    ::onebot::SetFriendAddRequestReq* set_friend_add_request_req_;
    ::onebot::SetGroupAddRequestReq* set_group_add_request_req_;
    ::onebot::GetLoginInfoReq* get_login_info_req_;
    ::onebot::GetStrangerInfoReq* get_stranger_info_req_;
    ::onebot::GetFriendListReq* get_friend_list_req_;
    ::onebot::GetGroupInfoReq* get_group_info_req_;
    ::onebot::GetGroupListReq* get_group_list_req_;
    ::onebot::GetGroupMemberInfoReq* get_group_member_info_req_;
    ::onebot::GetGroupMemberListReq* get_group_member_list_req_;
    ::onebot::GetGroupHonorInfoReq* get_group_honor_info_req_;
    ::onebot::GetCookiesReq* get_cookies_req_;
    ::onebot::GetCsrfTokenReq* get_csrf_token_req_;
    ::onebot::GetCredentialsReq* get_credentials_req_;
    ::onebot::GetRecordReq* get_record_req_;
    ::onebot::GetImageReq* get_image_req_;
    ::onebot::CanSendImageReq* can_send_image_req_;
    ::onebot::CanSendRecordReq* can_send_record_req_;
    ::onebot::GetStatusReq* get_status_req_;
    ::onebot::GetVersionInfoReq* get_version_info_req_;
    ::onebot::SetRestartReq* set_restart_req_;
    ::onebot::CleanCacheReq* clean_cache_req_;
    ::onebot::SendPrivateMsgResp* send_private_msg_resp_;
    ::onebot::SendGroupMsgResp* send_group_msg_resp_;
    ::onebot::SendMsgResp* send_msg_resp_;
    ::onebot::DeleteMsgResp* delete_msg_resp_;
    ::onebot::GetMsgResp* get_msg_resp_;
    ::onebot::GetForwardMsgResp* get_forward_msg_resp_;
    ::onebot::SendLikeResp* send_like_resp_;
    ::onebot::SetGroupKickResp* set_group_kick_resp_;
    ::onebot::SetGroupBanResp* set_group_ban_resp_;
    ::onebot::SetGroupAnonymousBanResp* set_group_anonymous_ban_resp_;
    ::onebot::SetGroupWholeBanResp* set_group_whole_ban_resp_;
    ::onebot::SetGroupAdminResp* set_group_admin_resp_;
    ::onebot::SetGroupAnonymousResp* set_group_anonymous_resp_;
    ::onebot::SetGroupCardResp* set_group_card_resp_;
    ::onebot::SetGroupNameResp* set_group_name_resp_;
    ::onebot::SetGroupLeaveResp* set_group_leave_resp_;
    ::onebot::SetGroupSpecialTitleResp* set_group_special_title_resp_;
    ::onebot::SetFriendAddRequestResp* set_friend_add_request_resp_;
    ::onebot::SetGroupAddRequestResp* set_group_add_request_resp_;
    ::onebot::GetLoginInfoResp* get_login_info_resp_;
    ::onebot::GetStrangerInfoResp* get_stranger_info_resp_;
    ::onebot::GetFriendListResp* get_friend_list_resp_;
    ::onebot::GetGroupInfoResp* get_group_info_resp_;
    ::onebot::GetGroupListResp* get_group_list_resp_;
    ::onebot::GetGroupMemberInfoResp* get_group_member_info_resp_;
    ::onebot::GetGroupMemberListResp* get_group_member_list_resp_;
    ::onebot::GetGroupHonorInfoResp* get_group_honor_info_resp_;
    ::onebot::GetCookiesResp* get_cookies_resp_;
    ::onebot::GetCsrfTokenResp* get_csrf_token_resp_;
    ::onebot::GetCredentialsResp* get_credentials_resp_;
    ::onebot::GetRecordResp* get_record_resp_;
    ::onebot::GetImageResp* get_image_resp_;
    ::onebot::CanSendImageResp* can_send_image_resp_;
    ::onebot::CanSendRecordResp* can_send_record_resp_;
    ::onebot::GetStatusResp* get_status_resp_;
    ::onebot::GetVersionInfoResp* get_version_info_resp_;
    ::onebot::SetRestartResp* set_restart_resp_;
    ::onebot::CleanCacheResp* clean_cache_resp_;
  } data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_onebot_5fframe_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Frame

// int64 botId = 1;
inline void Frame::clear_botid() {
  botid_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Frame::_internal_botid() const {
  return botid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Frame::botid() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.botId)
  return _internal_botid();
}
inline void Frame::_internal_set_botid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  botid_ = value;
}
inline void Frame::set_botid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_botid(value);
  // @@protoc_insertion_point(field_set:onebot.Frame.botId)
}

// .onebot.Frame.FrameType frame_type = 2;
inline void Frame::clear_frame_type() {
  frame_type_ = 0;
}
inline ::onebot::Frame_FrameType Frame::_internal_frame_type() const {
  return static_cast< ::onebot::Frame_FrameType >(frame_type_);
}
inline ::onebot::Frame_FrameType Frame::frame_type() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.frame_type)
  return _internal_frame_type();
}
inline void Frame::_internal_set_frame_type(::onebot::Frame_FrameType value) {
  
  frame_type_ = value;
}
inline void Frame::set_frame_type(::onebot::Frame_FrameType value) {
  _internal_set_frame_type(value);
  // @@protoc_insertion_point(field_set:onebot.Frame.frame_type)
}

// string echo = 3;
inline void Frame::clear_echo() {
  echo_.ClearToEmpty();
}
inline const std::string& Frame::echo() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.echo)
  return _internal_echo();
}
inline void Frame::set_echo(const std::string& value) {
  _internal_set_echo(value);
  // @@protoc_insertion_point(field_set:onebot.Frame.echo)
}
inline std::string* Frame::mutable_echo() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.echo)
  return _internal_mutable_echo();
}
inline const std::string& Frame::_internal_echo() const {
  return echo_.Get();
}
inline void Frame::_internal_set_echo(const std::string& value) {
  
  echo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Frame::set_echo(std::string&& value) {
  
  echo_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:onebot.Frame.echo)
}
inline void Frame::set_echo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  echo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:onebot.Frame.echo)
}
inline void Frame::set_echo(const char* value,
    size_t size) {
  
  echo_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:onebot.Frame.echo)
}
inline std::string* Frame::_internal_mutable_echo() {
  
  return echo_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Frame::release_echo() {
  // @@protoc_insertion_point(field_release:onebot.Frame.echo)
  return echo_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Frame::set_allocated_echo(std::string* echo) {
  if (echo != nullptr) {
    
  } else {
    
  }
  echo_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), echo,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:onebot.Frame.echo)
}

// bool ok = 4;
inline void Frame::clear_ok() {
  ok_ = false;
}
inline bool Frame::_internal_ok() const {
  return ok_;
}
inline bool Frame::ok() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.ok)
  return _internal_ok();
}
inline void Frame::_internal_set_ok(bool value) {
  
  ok_ = value;
}
inline void Frame::set_ok(bool value) {
  _internal_set_ok(value);
  // @@protoc_insertion_point(field_set:onebot.Frame.ok)
}

// map<string, string> extra = 100;
inline int Frame::_internal_extra_size() const {
  return extra_.size();
}
inline int Frame::extra_size() const {
  return _internal_extra_size();
}
inline void Frame::clear_extra() {
  extra_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
Frame::_internal_extra() const {
  return extra_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
Frame::extra() const {
  // @@protoc_insertion_point(field_map:onebot.Frame.extra)
  return _internal_extra();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
Frame::_internal_mutable_extra() {
  return extra_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
Frame::mutable_extra() {
  // @@protoc_insertion_point(field_mutable_map:onebot.Frame.extra)
  return _internal_mutable_extra();
}

// .onebot.PrivateMessageEvent private_message_event = 101;
inline bool Frame::_internal_has_private_message_event() const {
  return data_case() == kPrivateMessageEvent;
}
inline bool Frame::has_private_message_event() const {
  return _internal_has_private_message_event();
}
inline void Frame::set_has_private_message_event() {
  _oneof_case_[0] = kPrivateMessageEvent;
}
inline ::onebot::PrivateMessageEvent* Frame::release_private_message_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.private_message_event)
  if (_internal_has_private_message_event()) {
    clear_has_data();
      ::onebot::PrivateMessageEvent* temp = data_.private_message_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.private_message_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::PrivateMessageEvent& Frame::_internal_private_message_event() const {
  return _internal_has_private_message_event()
      ? *data_.private_message_event_
      : reinterpret_cast< ::onebot::PrivateMessageEvent&>(::onebot::_PrivateMessageEvent_default_instance_);
}
inline const ::onebot::PrivateMessageEvent& Frame::private_message_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.private_message_event)
  return _internal_private_message_event();
}
inline ::onebot::PrivateMessageEvent* Frame::unsafe_arena_release_private_message_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.private_message_event)
  if (_internal_has_private_message_event()) {
    clear_has_data();
    ::onebot::PrivateMessageEvent* temp = data_.private_message_event_;
    data_.private_message_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_private_message_event(::onebot::PrivateMessageEvent* private_message_event) {
  clear_data();
  if (private_message_event) {
    set_has_private_message_event();
    data_.private_message_event_ = private_message_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.private_message_event)
}
inline ::onebot::PrivateMessageEvent* Frame::_internal_mutable_private_message_event() {
  if (!_internal_has_private_message_event()) {
    clear_data();
    set_has_private_message_event();
    data_.private_message_event_ = CreateMaybeMessage< ::onebot::PrivateMessageEvent >(GetArena());
  }
  return data_.private_message_event_;
}
inline ::onebot::PrivateMessageEvent* Frame::mutable_private_message_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.private_message_event)
  return _internal_mutable_private_message_event();
}

// .onebot.GroupMessageEvent group_message_event = 102;
inline bool Frame::_internal_has_group_message_event() const {
  return data_case() == kGroupMessageEvent;
}
inline bool Frame::has_group_message_event() const {
  return _internal_has_group_message_event();
}
inline void Frame::set_has_group_message_event() {
  _oneof_case_[0] = kGroupMessageEvent;
}
inline ::onebot::GroupMessageEvent* Frame::release_group_message_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.group_message_event)
  if (_internal_has_group_message_event()) {
    clear_has_data();
      ::onebot::GroupMessageEvent* temp = data_.group_message_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.group_message_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GroupMessageEvent& Frame::_internal_group_message_event() const {
  return _internal_has_group_message_event()
      ? *data_.group_message_event_
      : reinterpret_cast< ::onebot::GroupMessageEvent&>(::onebot::_GroupMessageEvent_default_instance_);
}
inline const ::onebot::GroupMessageEvent& Frame::group_message_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.group_message_event)
  return _internal_group_message_event();
}
inline ::onebot::GroupMessageEvent* Frame::unsafe_arena_release_group_message_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.group_message_event)
  if (_internal_has_group_message_event()) {
    clear_has_data();
    ::onebot::GroupMessageEvent* temp = data_.group_message_event_;
    data_.group_message_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_group_message_event(::onebot::GroupMessageEvent* group_message_event) {
  clear_data();
  if (group_message_event) {
    set_has_group_message_event();
    data_.group_message_event_ = group_message_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.group_message_event)
}
inline ::onebot::GroupMessageEvent* Frame::_internal_mutable_group_message_event() {
  if (!_internal_has_group_message_event()) {
    clear_data();
    set_has_group_message_event();
    data_.group_message_event_ = CreateMaybeMessage< ::onebot::GroupMessageEvent >(GetArena());
  }
  return data_.group_message_event_;
}
inline ::onebot::GroupMessageEvent* Frame::mutable_group_message_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.group_message_event)
  return _internal_mutable_group_message_event();
}

// .onebot.GroupUploadNoticeEvent group_upload_notice_event = 103;
inline bool Frame::_internal_has_group_upload_notice_event() const {
  return data_case() == kGroupUploadNoticeEvent;
}
inline bool Frame::has_group_upload_notice_event() const {
  return _internal_has_group_upload_notice_event();
}
inline void Frame::set_has_group_upload_notice_event() {
  _oneof_case_[0] = kGroupUploadNoticeEvent;
}
inline ::onebot::GroupUploadNoticeEvent* Frame::release_group_upload_notice_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.group_upload_notice_event)
  if (_internal_has_group_upload_notice_event()) {
    clear_has_data();
      ::onebot::GroupUploadNoticeEvent* temp = data_.group_upload_notice_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.group_upload_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GroupUploadNoticeEvent& Frame::_internal_group_upload_notice_event() const {
  return _internal_has_group_upload_notice_event()
      ? *data_.group_upload_notice_event_
      : reinterpret_cast< ::onebot::GroupUploadNoticeEvent&>(::onebot::_GroupUploadNoticeEvent_default_instance_);
}
inline const ::onebot::GroupUploadNoticeEvent& Frame::group_upload_notice_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.group_upload_notice_event)
  return _internal_group_upload_notice_event();
}
inline ::onebot::GroupUploadNoticeEvent* Frame::unsafe_arena_release_group_upload_notice_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.group_upload_notice_event)
  if (_internal_has_group_upload_notice_event()) {
    clear_has_data();
    ::onebot::GroupUploadNoticeEvent* temp = data_.group_upload_notice_event_;
    data_.group_upload_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_group_upload_notice_event(::onebot::GroupUploadNoticeEvent* group_upload_notice_event) {
  clear_data();
  if (group_upload_notice_event) {
    set_has_group_upload_notice_event();
    data_.group_upload_notice_event_ = group_upload_notice_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.group_upload_notice_event)
}
inline ::onebot::GroupUploadNoticeEvent* Frame::_internal_mutable_group_upload_notice_event() {
  if (!_internal_has_group_upload_notice_event()) {
    clear_data();
    set_has_group_upload_notice_event();
    data_.group_upload_notice_event_ = CreateMaybeMessage< ::onebot::GroupUploadNoticeEvent >(GetArena());
  }
  return data_.group_upload_notice_event_;
}
inline ::onebot::GroupUploadNoticeEvent* Frame::mutable_group_upload_notice_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.group_upload_notice_event)
  return _internal_mutable_group_upload_notice_event();
}

// .onebot.GroupAdminNoticeEvent group_admin_notice_event = 104;
inline bool Frame::_internal_has_group_admin_notice_event() const {
  return data_case() == kGroupAdminNoticeEvent;
}
inline bool Frame::has_group_admin_notice_event() const {
  return _internal_has_group_admin_notice_event();
}
inline void Frame::set_has_group_admin_notice_event() {
  _oneof_case_[0] = kGroupAdminNoticeEvent;
}
inline ::onebot::GroupAdminNoticeEvent* Frame::release_group_admin_notice_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.group_admin_notice_event)
  if (_internal_has_group_admin_notice_event()) {
    clear_has_data();
      ::onebot::GroupAdminNoticeEvent* temp = data_.group_admin_notice_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.group_admin_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GroupAdminNoticeEvent& Frame::_internal_group_admin_notice_event() const {
  return _internal_has_group_admin_notice_event()
      ? *data_.group_admin_notice_event_
      : reinterpret_cast< ::onebot::GroupAdminNoticeEvent&>(::onebot::_GroupAdminNoticeEvent_default_instance_);
}
inline const ::onebot::GroupAdminNoticeEvent& Frame::group_admin_notice_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.group_admin_notice_event)
  return _internal_group_admin_notice_event();
}
inline ::onebot::GroupAdminNoticeEvent* Frame::unsafe_arena_release_group_admin_notice_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.group_admin_notice_event)
  if (_internal_has_group_admin_notice_event()) {
    clear_has_data();
    ::onebot::GroupAdminNoticeEvent* temp = data_.group_admin_notice_event_;
    data_.group_admin_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_group_admin_notice_event(::onebot::GroupAdminNoticeEvent* group_admin_notice_event) {
  clear_data();
  if (group_admin_notice_event) {
    set_has_group_admin_notice_event();
    data_.group_admin_notice_event_ = group_admin_notice_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.group_admin_notice_event)
}
inline ::onebot::GroupAdminNoticeEvent* Frame::_internal_mutable_group_admin_notice_event() {
  if (!_internal_has_group_admin_notice_event()) {
    clear_data();
    set_has_group_admin_notice_event();
    data_.group_admin_notice_event_ = CreateMaybeMessage< ::onebot::GroupAdminNoticeEvent >(GetArena());
  }
  return data_.group_admin_notice_event_;
}
inline ::onebot::GroupAdminNoticeEvent* Frame::mutable_group_admin_notice_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.group_admin_notice_event)
  return _internal_mutable_group_admin_notice_event();
}

// .onebot.GroupDecreaseNoticeEvent group_decrease_notice_event = 105;
inline bool Frame::_internal_has_group_decrease_notice_event() const {
  return data_case() == kGroupDecreaseNoticeEvent;
}
inline bool Frame::has_group_decrease_notice_event() const {
  return _internal_has_group_decrease_notice_event();
}
inline void Frame::set_has_group_decrease_notice_event() {
  _oneof_case_[0] = kGroupDecreaseNoticeEvent;
}
inline ::onebot::GroupDecreaseNoticeEvent* Frame::release_group_decrease_notice_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.group_decrease_notice_event)
  if (_internal_has_group_decrease_notice_event()) {
    clear_has_data();
      ::onebot::GroupDecreaseNoticeEvent* temp = data_.group_decrease_notice_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.group_decrease_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GroupDecreaseNoticeEvent& Frame::_internal_group_decrease_notice_event() const {
  return _internal_has_group_decrease_notice_event()
      ? *data_.group_decrease_notice_event_
      : reinterpret_cast< ::onebot::GroupDecreaseNoticeEvent&>(::onebot::_GroupDecreaseNoticeEvent_default_instance_);
}
inline const ::onebot::GroupDecreaseNoticeEvent& Frame::group_decrease_notice_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.group_decrease_notice_event)
  return _internal_group_decrease_notice_event();
}
inline ::onebot::GroupDecreaseNoticeEvent* Frame::unsafe_arena_release_group_decrease_notice_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.group_decrease_notice_event)
  if (_internal_has_group_decrease_notice_event()) {
    clear_has_data();
    ::onebot::GroupDecreaseNoticeEvent* temp = data_.group_decrease_notice_event_;
    data_.group_decrease_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_group_decrease_notice_event(::onebot::GroupDecreaseNoticeEvent* group_decrease_notice_event) {
  clear_data();
  if (group_decrease_notice_event) {
    set_has_group_decrease_notice_event();
    data_.group_decrease_notice_event_ = group_decrease_notice_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.group_decrease_notice_event)
}
inline ::onebot::GroupDecreaseNoticeEvent* Frame::_internal_mutable_group_decrease_notice_event() {
  if (!_internal_has_group_decrease_notice_event()) {
    clear_data();
    set_has_group_decrease_notice_event();
    data_.group_decrease_notice_event_ = CreateMaybeMessage< ::onebot::GroupDecreaseNoticeEvent >(GetArena());
  }
  return data_.group_decrease_notice_event_;
}
inline ::onebot::GroupDecreaseNoticeEvent* Frame::mutable_group_decrease_notice_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.group_decrease_notice_event)
  return _internal_mutable_group_decrease_notice_event();
}

// .onebot.GroupIncreaseNoticeEvent group_increase_notice_event = 106;
inline bool Frame::_internal_has_group_increase_notice_event() const {
  return data_case() == kGroupIncreaseNoticeEvent;
}
inline bool Frame::has_group_increase_notice_event() const {
  return _internal_has_group_increase_notice_event();
}
inline void Frame::set_has_group_increase_notice_event() {
  _oneof_case_[0] = kGroupIncreaseNoticeEvent;
}
inline ::onebot::GroupIncreaseNoticeEvent* Frame::release_group_increase_notice_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.group_increase_notice_event)
  if (_internal_has_group_increase_notice_event()) {
    clear_has_data();
      ::onebot::GroupIncreaseNoticeEvent* temp = data_.group_increase_notice_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.group_increase_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GroupIncreaseNoticeEvent& Frame::_internal_group_increase_notice_event() const {
  return _internal_has_group_increase_notice_event()
      ? *data_.group_increase_notice_event_
      : reinterpret_cast< ::onebot::GroupIncreaseNoticeEvent&>(::onebot::_GroupIncreaseNoticeEvent_default_instance_);
}
inline const ::onebot::GroupIncreaseNoticeEvent& Frame::group_increase_notice_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.group_increase_notice_event)
  return _internal_group_increase_notice_event();
}
inline ::onebot::GroupIncreaseNoticeEvent* Frame::unsafe_arena_release_group_increase_notice_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.group_increase_notice_event)
  if (_internal_has_group_increase_notice_event()) {
    clear_has_data();
    ::onebot::GroupIncreaseNoticeEvent* temp = data_.group_increase_notice_event_;
    data_.group_increase_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_group_increase_notice_event(::onebot::GroupIncreaseNoticeEvent* group_increase_notice_event) {
  clear_data();
  if (group_increase_notice_event) {
    set_has_group_increase_notice_event();
    data_.group_increase_notice_event_ = group_increase_notice_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.group_increase_notice_event)
}
inline ::onebot::GroupIncreaseNoticeEvent* Frame::_internal_mutable_group_increase_notice_event() {
  if (!_internal_has_group_increase_notice_event()) {
    clear_data();
    set_has_group_increase_notice_event();
    data_.group_increase_notice_event_ = CreateMaybeMessage< ::onebot::GroupIncreaseNoticeEvent >(GetArena());
  }
  return data_.group_increase_notice_event_;
}
inline ::onebot::GroupIncreaseNoticeEvent* Frame::mutable_group_increase_notice_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.group_increase_notice_event)
  return _internal_mutable_group_increase_notice_event();
}

// .onebot.GroupBanNoticeEvent group_ban_notice_event = 107;
inline bool Frame::_internal_has_group_ban_notice_event() const {
  return data_case() == kGroupBanNoticeEvent;
}
inline bool Frame::has_group_ban_notice_event() const {
  return _internal_has_group_ban_notice_event();
}
inline void Frame::set_has_group_ban_notice_event() {
  _oneof_case_[0] = kGroupBanNoticeEvent;
}
inline ::onebot::GroupBanNoticeEvent* Frame::release_group_ban_notice_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.group_ban_notice_event)
  if (_internal_has_group_ban_notice_event()) {
    clear_has_data();
      ::onebot::GroupBanNoticeEvent* temp = data_.group_ban_notice_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.group_ban_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GroupBanNoticeEvent& Frame::_internal_group_ban_notice_event() const {
  return _internal_has_group_ban_notice_event()
      ? *data_.group_ban_notice_event_
      : reinterpret_cast< ::onebot::GroupBanNoticeEvent&>(::onebot::_GroupBanNoticeEvent_default_instance_);
}
inline const ::onebot::GroupBanNoticeEvent& Frame::group_ban_notice_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.group_ban_notice_event)
  return _internal_group_ban_notice_event();
}
inline ::onebot::GroupBanNoticeEvent* Frame::unsafe_arena_release_group_ban_notice_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.group_ban_notice_event)
  if (_internal_has_group_ban_notice_event()) {
    clear_has_data();
    ::onebot::GroupBanNoticeEvent* temp = data_.group_ban_notice_event_;
    data_.group_ban_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_group_ban_notice_event(::onebot::GroupBanNoticeEvent* group_ban_notice_event) {
  clear_data();
  if (group_ban_notice_event) {
    set_has_group_ban_notice_event();
    data_.group_ban_notice_event_ = group_ban_notice_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.group_ban_notice_event)
}
inline ::onebot::GroupBanNoticeEvent* Frame::_internal_mutable_group_ban_notice_event() {
  if (!_internal_has_group_ban_notice_event()) {
    clear_data();
    set_has_group_ban_notice_event();
    data_.group_ban_notice_event_ = CreateMaybeMessage< ::onebot::GroupBanNoticeEvent >(GetArena());
  }
  return data_.group_ban_notice_event_;
}
inline ::onebot::GroupBanNoticeEvent* Frame::mutable_group_ban_notice_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.group_ban_notice_event)
  return _internal_mutable_group_ban_notice_event();
}

// .onebot.FriendAddNoticeEvent friend_add_notice_event = 108;
inline bool Frame::_internal_has_friend_add_notice_event() const {
  return data_case() == kFriendAddNoticeEvent;
}
inline bool Frame::has_friend_add_notice_event() const {
  return _internal_has_friend_add_notice_event();
}
inline void Frame::set_has_friend_add_notice_event() {
  _oneof_case_[0] = kFriendAddNoticeEvent;
}
inline ::onebot::FriendAddNoticeEvent* Frame::release_friend_add_notice_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.friend_add_notice_event)
  if (_internal_has_friend_add_notice_event()) {
    clear_has_data();
      ::onebot::FriendAddNoticeEvent* temp = data_.friend_add_notice_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.friend_add_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::FriendAddNoticeEvent& Frame::_internal_friend_add_notice_event() const {
  return _internal_has_friend_add_notice_event()
      ? *data_.friend_add_notice_event_
      : reinterpret_cast< ::onebot::FriendAddNoticeEvent&>(::onebot::_FriendAddNoticeEvent_default_instance_);
}
inline const ::onebot::FriendAddNoticeEvent& Frame::friend_add_notice_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.friend_add_notice_event)
  return _internal_friend_add_notice_event();
}
inline ::onebot::FriendAddNoticeEvent* Frame::unsafe_arena_release_friend_add_notice_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.friend_add_notice_event)
  if (_internal_has_friend_add_notice_event()) {
    clear_has_data();
    ::onebot::FriendAddNoticeEvent* temp = data_.friend_add_notice_event_;
    data_.friend_add_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_friend_add_notice_event(::onebot::FriendAddNoticeEvent* friend_add_notice_event) {
  clear_data();
  if (friend_add_notice_event) {
    set_has_friend_add_notice_event();
    data_.friend_add_notice_event_ = friend_add_notice_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.friend_add_notice_event)
}
inline ::onebot::FriendAddNoticeEvent* Frame::_internal_mutable_friend_add_notice_event() {
  if (!_internal_has_friend_add_notice_event()) {
    clear_data();
    set_has_friend_add_notice_event();
    data_.friend_add_notice_event_ = CreateMaybeMessage< ::onebot::FriendAddNoticeEvent >(GetArena());
  }
  return data_.friend_add_notice_event_;
}
inline ::onebot::FriendAddNoticeEvent* Frame::mutable_friend_add_notice_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.friend_add_notice_event)
  return _internal_mutable_friend_add_notice_event();
}

// .onebot.GroupRecallNoticeEvent group_recall_notice_event = 109;
inline bool Frame::_internal_has_group_recall_notice_event() const {
  return data_case() == kGroupRecallNoticeEvent;
}
inline bool Frame::has_group_recall_notice_event() const {
  return _internal_has_group_recall_notice_event();
}
inline void Frame::set_has_group_recall_notice_event() {
  _oneof_case_[0] = kGroupRecallNoticeEvent;
}
inline ::onebot::GroupRecallNoticeEvent* Frame::release_group_recall_notice_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.group_recall_notice_event)
  if (_internal_has_group_recall_notice_event()) {
    clear_has_data();
      ::onebot::GroupRecallNoticeEvent* temp = data_.group_recall_notice_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.group_recall_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GroupRecallNoticeEvent& Frame::_internal_group_recall_notice_event() const {
  return _internal_has_group_recall_notice_event()
      ? *data_.group_recall_notice_event_
      : reinterpret_cast< ::onebot::GroupRecallNoticeEvent&>(::onebot::_GroupRecallNoticeEvent_default_instance_);
}
inline const ::onebot::GroupRecallNoticeEvent& Frame::group_recall_notice_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.group_recall_notice_event)
  return _internal_group_recall_notice_event();
}
inline ::onebot::GroupRecallNoticeEvent* Frame::unsafe_arena_release_group_recall_notice_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.group_recall_notice_event)
  if (_internal_has_group_recall_notice_event()) {
    clear_has_data();
    ::onebot::GroupRecallNoticeEvent* temp = data_.group_recall_notice_event_;
    data_.group_recall_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_group_recall_notice_event(::onebot::GroupRecallNoticeEvent* group_recall_notice_event) {
  clear_data();
  if (group_recall_notice_event) {
    set_has_group_recall_notice_event();
    data_.group_recall_notice_event_ = group_recall_notice_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.group_recall_notice_event)
}
inline ::onebot::GroupRecallNoticeEvent* Frame::_internal_mutable_group_recall_notice_event() {
  if (!_internal_has_group_recall_notice_event()) {
    clear_data();
    set_has_group_recall_notice_event();
    data_.group_recall_notice_event_ = CreateMaybeMessage< ::onebot::GroupRecallNoticeEvent >(GetArena());
  }
  return data_.group_recall_notice_event_;
}
inline ::onebot::GroupRecallNoticeEvent* Frame::mutable_group_recall_notice_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.group_recall_notice_event)
  return _internal_mutable_group_recall_notice_event();
}

// .onebot.FriendRecallNoticeEvent friend_recall_notice_event = 110;
inline bool Frame::_internal_has_friend_recall_notice_event() const {
  return data_case() == kFriendRecallNoticeEvent;
}
inline bool Frame::has_friend_recall_notice_event() const {
  return _internal_has_friend_recall_notice_event();
}
inline void Frame::set_has_friend_recall_notice_event() {
  _oneof_case_[0] = kFriendRecallNoticeEvent;
}
inline ::onebot::FriendRecallNoticeEvent* Frame::release_friend_recall_notice_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.friend_recall_notice_event)
  if (_internal_has_friend_recall_notice_event()) {
    clear_has_data();
      ::onebot::FriendRecallNoticeEvent* temp = data_.friend_recall_notice_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.friend_recall_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::FriendRecallNoticeEvent& Frame::_internal_friend_recall_notice_event() const {
  return _internal_has_friend_recall_notice_event()
      ? *data_.friend_recall_notice_event_
      : reinterpret_cast< ::onebot::FriendRecallNoticeEvent&>(::onebot::_FriendRecallNoticeEvent_default_instance_);
}
inline const ::onebot::FriendRecallNoticeEvent& Frame::friend_recall_notice_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.friend_recall_notice_event)
  return _internal_friend_recall_notice_event();
}
inline ::onebot::FriendRecallNoticeEvent* Frame::unsafe_arena_release_friend_recall_notice_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.friend_recall_notice_event)
  if (_internal_has_friend_recall_notice_event()) {
    clear_has_data();
    ::onebot::FriendRecallNoticeEvent* temp = data_.friend_recall_notice_event_;
    data_.friend_recall_notice_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_friend_recall_notice_event(::onebot::FriendRecallNoticeEvent* friend_recall_notice_event) {
  clear_data();
  if (friend_recall_notice_event) {
    set_has_friend_recall_notice_event();
    data_.friend_recall_notice_event_ = friend_recall_notice_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.friend_recall_notice_event)
}
inline ::onebot::FriendRecallNoticeEvent* Frame::_internal_mutable_friend_recall_notice_event() {
  if (!_internal_has_friend_recall_notice_event()) {
    clear_data();
    set_has_friend_recall_notice_event();
    data_.friend_recall_notice_event_ = CreateMaybeMessage< ::onebot::FriendRecallNoticeEvent >(GetArena());
  }
  return data_.friend_recall_notice_event_;
}
inline ::onebot::FriendRecallNoticeEvent* Frame::mutable_friend_recall_notice_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.friend_recall_notice_event)
  return _internal_mutable_friend_recall_notice_event();
}

// .onebot.FriendRequestEvent friend_request_event = 111;
inline bool Frame::_internal_has_friend_request_event() const {
  return data_case() == kFriendRequestEvent;
}
inline bool Frame::has_friend_request_event() const {
  return _internal_has_friend_request_event();
}
inline void Frame::set_has_friend_request_event() {
  _oneof_case_[0] = kFriendRequestEvent;
}
inline ::onebot::FriendRequestEvent* Frame::release_friend_request_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.friend_request_event)
  if (_internal_has_friend_request_event()) {
    clear_has_data();
      ::onebot::FriendRequestEvent* temp = data_.friend_request_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.friend_request_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::FriendRequestEvent& Frame::_internal_friend_request_event() const {
  return _internal_has_friend_request_event()
      ? *data_.friend_request_event_
      : reinterpret_cast< ::onebot::FriendRequestEvent&>(::onebot::_FriendRequestEvent_default_instance_);
}
inline const ::onebot::FriendRequestEvent& Frame::friend_request_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.friend_request_event)
  return _internal_friend_request_event();
}
inline ::onebot::FriendRequestEvent* Frame::unsafe_arena_release_friend_request_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.friend_request_event)
  if (_internal_has_friend_request_event()) {
    clear_has_data();
    ::onebot::FriendRequestEvent* temp = data_.friend_request_event_;
    data_.friend_request_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_friend_request_event(::onebot::FriendRequestEvent* friend_request_event) {
  clear_data();
  if (friend_request_event) {
    set_has_friend_request_event();
    data_.friend_request_event_ = friend_request_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.friend_request_event)
}
inline ::onebot::FriendRequestEvent* Frame::_internal_mutable_friend_request_event() {
  if (!_internal_has_friend_request_event()) {
    clear_data();
    set_has_friend_request_event();
    data_.friend_request_event_ = CreateMaybeMessage< ::onebot::FriendRequestEvent >(GetArena());
  }
  return data_.friend_request_event_;
}
inline ::onebot::FriendRequestEvent* Frame::mutable_friend_request_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.friend_request_event)
  return _internal_mutable_friend_request_event();
}

// .onebot.GroupRequestEvent group_request_event = 112;
inline bool Frame::_internal_has_group_request_event() const {
  return data_case() == kGroupRequestEvent;
}
inline bool Frame::has_group_request_event() const {
  return _internal_has_group_request_event();
}
inline void Frame::set_has_group_request_event() {
  _oneof_case_[0] = kGroupRequestEvent;
}
inline ::onebot::GroupRequestEvent* Frame::release_group_request_event() {
  // @@protoc_insertion_point(field_release:onebot.Frame.group_request_event)
  if (_internal_has_group_request_event()) {
    clear_has_data();
      ::onebot::GroupRequestEvent* temp = data_.group_request_event_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.group_request_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GroupRequestEvent& Frame::_internal_group_request_event() const {
  return _internal_has_group_request_event()
      ? *data_.group_request_event_
      : reinterpret_cast< ::onebot::GroupRequestEvent&>(::onebot::_GroupRequestEvent_default_instance_);
}
inline const ::onebot::GroupRequestEvent& Frame::group_request_event() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.group_request_event)
  return _internal_group_request_event();
}
inline ::onebot::GroupRequestEvent* Frame::unsafe_arena_release_group_request_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.group_request_event)
  if (_internal_has_group_request_event()) {
    clear_has_data();
    ::onebot::GroupRequestEvent* temp = data_.group_request_event_;
    data_.group_request_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_group_request_event(::onebot::GroupRequestEvent* group_request_event) {
  clear_data();
  if (group_request_event) {
    set_has_group_request_event();
    data_.group_request_event_ = group_request_event;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.group_request_event)
}
inline ::onebot::GroupRequestEvent* Frame::_internal_mutable_group_request_event() {
  if (!_internal_has_group_request_event()) {
    clear_data();
    set_has_group_request_event();
    data_.group_request_event_ = CreateMaybeMessage< ::onebot::GroupRequestEvent >(GetArena());
  }
  return data_.group_request_event_;
}
inline ::onebot::GroupRequestEvent* Frame::mutable_group_request_event() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.group_request_event)
  return _internal_mutable_group_request_event();
}

// .onebot.SendPrivateMsgReq send_private_msg_req = 201;
inline bool Frame::_internal_has_send_private_msg_req() const {
  return data_case() == kSendPrivateMsgReq;
}
inline bool Frame::has_send_private_msg_req() const {
  return _internal_has_send_private_msg_req();
}
inline void Frame::set_has_send_private_msg_req() {
  _oneof_case_[0] = kSendPrivateMsgReq;
}
inline ::onebot::SendPrivateMsgReq* Frame::release_send_private_msg_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.send_private_msg_req)
  if (_internal_has_send_private_msg_req()) {
    clear_has_data();
      ::onebot::SendPrivateMsgReq* temp = data_.send_private_msg_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.send_private_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SendPrivateMsgReq& Frame::_internal_send_private_msg_req() const {
  return _internal_has_send_private_msg_req()
      ? *data_.send_private_msg_req_
      : reinterpret_cast< ::onebot::SendPrivateMsgReq&>(::onebot::_SendPrivateMsgReq_default_instance_);
}
inline const ::onebot::SendPrivateMsgReq& Frame::send_private_msg_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.send_private_msg_req)
  return _internal_send_private_msg_req();
}
inline ::onebot::SendPrivateMsgReq* Frame::unsafe_arena_release_send_private_msg_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.send_private_msg_req)
  if (_internal_has_send_private_msg_req()) {
    clear_has_data();
    ::onebot::SendPrivateMsgReq* temp = data_.send_private_msg_req_;
    data_.send_private_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_send_private_msg_req(::onebot::SendPrivateMsgReq* send_private_msg_req) {
  clear_data();
  if (send_private_msg_req) {
    set_has_send_private_msg_req();
    data_.send_private_msg_req_ = send_private_msg_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.send_private_msg_req)
}
inline ::onebot::SendPrivateMsgReq* Frame::_internal_mutable_send_private_msg_req() {
  if (!_internal_has_send_private_msg_req()) {
    clear_data();
    set_has_send_private_msg_req();
    data_.send_private_msg_req_ = CreateMaybeMessage< ::onebot::SendPrivateMsgReq >(GetArena());
  }
  return data_.send_private_msg_req_;
}
inline ::onebot::SendPrivateMsgReq* Frame::mutable_send_private_msg_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.send_private_msg_req)
  return _internal_mutable_send_private_msg_req();
}

// .onebot.SendGroupMsgReq send_group_msg_req = 202;
inline bool Frame::_internal_has_send_group_msg_req() const {
  return data_case() == kSendGroupMsgReq;
}
inline bool Frame::has_send_group_msg_req() const {
  return _internal_has_send_group_msg_req();
}
inline void Frame::set_has_send_group_msg_req() {
  _oneof_case_[0] = kSendGroupMsgReq;
}
inline ::onebot::SendGroupMsgReq* Frame::release_send_group_msg_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.send_group_msg_req)
  if (_internal_has_send_group_msg_req()) {
    clear_has_data();
      ::onebot::SendGroupMsgReq* temp = data_.send_group_msg_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.send_group_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SendGroupMsgReq& Frame::_internal_send_group_msg_req() const {
  return _internal_has_send_group_msg_req()
      ? *data_.send_group_msg_req_
      : reinterpret_cast< ::onebot::SendGroupMsgReq&>(::onebot::_SendGroupMsgReq_default_instance_);
}
inline const ::onebot::SendGroupMsgReq& Frame::send_group_msg_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.send_group_msg_req)
  return _internal_send_group_msg_req();
}
inline ::onebot::SendGroupMsgReq* Frame::unsafe_arena_release_send_group_msg_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.send_group_msg_req)
  if (_internal_has_send_group_msg_req()) {
    clear_has_data();
    ::onebot::SendGroupMsgReq* temp = data_.send_group_msg_req_;
    data_.send_group_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_send_group_msg_req(::onebot::SendGroupMsgReq* send_group_msg_req) {
  clear_data();
  if (send_group_msg_req) {
    set_has_send_group_msg_req();
    data_.send_group_msg_req_ = send_group_msg_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.send_group_msg_req)
}
inline ::onebot::SendGroupMsgReq* Frame::_internal_mutable_send_group_msg_req() {
  if (!_internal_has_send_group_msg_req()) {
    clear_data();
    set_has_send_group_msg_req();
    data_.send_group_msg_req_ = CreateMaybeMessage< ::onebot::SendGroupMsgReq >(GetArena());
  }
  return data_.send_group_msg_req_;
}
inline ::onebot::SendGroupMsgReq* Frame::mutable_send_group_msg_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.send_group_msg_req)
  return _internal_mutable_send_group_msg_req();
}

// .onebot.SendMsgReq send_msg_req = 203;
inline bool Frame::_internal_has_send_msg_req() const {
  return data_case() == kSendMsgReq;
}
inline bool Frame::has_send_msg_req() const {
  return _internal_has_send_msg_req();
}
inline void Frame::set_has_send_msg_req() {
  _oneof_case_[0] = kSendMsgReq;
}
inline ::onebot::SendMsgReq* Frame::release_send_msg_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.send_msg_req)
  if (_internal_has_send_msg_req()) {
    clear_has_data();
      ::onebot::SendMsgReq* temp = data_.send_msg_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.send_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SendMsgReq& Frame::_internal_send_msg_req() const {
  return _internal_has_send_msg_req()
      ? *data_.send_msg_req_
      : reinterpret_cast< ::onebot::SendMsgReq&>(::onebot::_SendMsgReq_default_instance_);
}
inline const ::onebot::SendMsgReq& Frame::send_msg_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.send_msg_req)
  return _internal_send_msg_req();
}
inline ::onebot::SendMsgReq* Frame::unsafe_arena_release_send_msg_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.send_msg_req)
  if (_internal_has_send_msg_req()) {
    clear_has_data();
    ::onebot::SendMsgReq* temp = data_.send_msg_req_;
    data_.send_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_send_msg_req(::onebot::SendMsgReq* send_msg_req) {
  clear_data();
  if (send_msg_req) {
    set_has_send_msg_req();
    data_.send_msg_req_ = send_msg_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.send_msg_req)
}
inline ::onebot::SendMsgReq* Frame::_internal_mutable_send_msg_req() {
  if (!_internal_has_send_msg_req()) {
    clear_data();
    set_has_send_msg_req();
    data_.send_msg_req_ = CreateMaybeMessage< ::onebot::SendMsgReq >(GetArena());
  }
  return data_.send_msg_req_;
}
inline ::onebot::SendMsgReq* Frame::mutable_send_msg_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.send_msg_req)
  return _internal_mutable_send_msg_req();
}

// .onebot.DeleteMsgReq delete_msg_req = 204;
inline bool Frame::_internal_has_delete_msg_req() const {
  return data_case() == kDeleteMsgReq;
}
inline bool Frame::has_delete_msg_req() const {
  return _internal_has_delete_msg_req();
}
inline void Frame::set_has_delete_msg_req() {
  _oneof_case_[0] = kDeleteMsgReq;
}
inline ::onebot::DeleteMsgReq* Frame::release_delete_msg_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.delete_msg_req)
  if (_internal_has_delete_msg_req()) {
    clear_has_data();
      ::onebot::DeleteMsgReq* temp = data_.delete_msg_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.delete_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::DeleteMsgReq& Frame::_internal_delete_msg_req() const {
  return _internal_has_delete_msg_req()
      ? *data_.delete_msg_req_
      : reinterpret_cast< ::onebot::DeleteMsgReq&>(::onebot::_DeleteMsgReq_default_instance_);
}
inline const ::onebot::DeleteMsgReq& Frame::delete_msg_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.delete_msg_req)
  return _internal_delete_msg_req();
}
inline ::onebot::DeleteMsgReq* Frame::unsafe_arena_release_delete_msg_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.delete_msg_req)
  if (_internal_has_delete_msg_req()) {
    clear_has_data();
    ::onebot::DeleteMsgReq* temp = data_.delete_msg_req_;
    data_.delete_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_delete_msg_req(::onebot::DeleteMsgReq* delete_msg_req) {
  clear_data();
  if (delete_msg_req) {
    set_has_delete_msg_req();
    data_.delete_msg_req_ = delete_msg_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.delete_msg_req)
}
inline ::onebot::DeleteMsgReq* Frame::_internal_mutable_delete_msg_req() {
  if (!_internal_has_delete_msg_req()) {
    clear_data();
    set_has_delete_msg_req();
    data_.delete_msg_req_ = CreateMaybeMessage< ::onebot::DeleteMsgReq >(GetArena());
  }
  return data_.delete_msg_req_;
}
inline ::onebot::DeleteMsgReq* Frame::mutable_delete_msg_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.delete_msg_req)
  return _internal_mutable_delete_msg_req();
}

// .onebot.GetMsgReq get_msg_req = 205;
inline bool Frame::_internal_has_get_msg_req() const {
  return data_case() == kGetMsgReq;
}
inline bool Frame::has_get_msg_req() const {
  return _internal_has_get_msg_req();
}
inline void Frame::set_has_get_msg_req() {
  _oneof_case_[0] = kGetMsgReq;
}
inline ::onebot::GetMsgReq* Frame::release_get_msg_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_msg_req)
  if (_internal_has_get_msg_req()) {
    clear_has_data();
      ::onebot::GetMsgReq* temp = data_.get_msg_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetMsgReq& Frame::_internal_get_msg_req() const {
  return _internal_has_get_msg_req()
      ? *data_.get_msg_req_
      : reinterpret_cast< ::onebot::GetMsgReq&>(::onebot::_GetMsgReq_default_instance_);
}
inline const ::onebot::GetMsgReq& Frame::get_msg_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_msg_req)
  return _internal_get_msg_req();
}
inline ::onebot::GetMsgReq* Frame::unsafe_arena_release_get_msg_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_msg_req)
  if (_internal_has_get_msg_req()) {
    clear_has_data();
    ::onebot::GetMsgReq* temp = data_.get_msg_req_;
    data_.get_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_msg_req(::onebot::GetMsgReq* get_msg_req) {
  clear_data();
  if (get_msg_req) {
    set_has_get_msg_req();
    data_.get_msg_req_ = get_msg_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_msg_req)
}
inline ::onebot::GetMsgReq* Frame::_internal_mutable_get_msg_req() {
  if (!_internal_has_get_msg_req()) {
    clear_data();
    set_has_get_msg_req();
    data_.get_msg_req_ = CreateMaybeMessage< ::onebot::GetMsgReq >(GetArena());
  }
  return data_.get_msg_req_;
}
inline ::onebot::GetMsgReq* Frame::mutable_get_msg_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_msg_req)
  return _internal_mutable_get_msg_req();
}

// .onebot.GetForwardMsgReq get_forward_msg_req = 206;
inline bool Frame::_internal_has_get_forward_msg_req() const {
  return data_case() == kGetForwardMsgReq;
}
inline bool Frame::has_get_forward_msg_req() const {
  return _internal_has_get_forward_msg_req();
}
inline void Frame::set_has_get_forward_msg_req() {
  _oneof_case_[0] = kGetForwardMsgReq;
}
inline ::onebot::GetForwardMsgReq* Frame::release_get_forward_msg_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_forward_msg_req)
  if (_internal_has_get_forward_msg_req()) {
    clear_has_data();
      ::onebot::GetForwardMsgReq* temp = data_.get_forward_msg_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_forward_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetForwardMsgReq& Frame::_internal_get_forward_msg_req() const {
  return _internal_has_get_forward_msg_req()
      ? *data_.get_forward_msg_req_
      : reinterpret_cast< ::onebot::GetForwardMsgReq&>(::onebot::_GetForwardMsgReq_default_instance_);
}
inline const ::onebot::GetForwardMsgReq& Frame::get_forward_msg_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_forward_msg_req)
  return _internal_get_forward_msg_req();
}
inline ::onebot::GetForwardMsgReq* Frame::unsafe_arena_release_get_forward_msg_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_forward_msg_req)
  if (_internal_has_get_forward_msg_req()) {
    clear_has_data();
    ::onebot::GetForwardMsgReq* temp = data_.get_forward_msg_req_;
    data_.get_forward_msg_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_forward_msg_req(::onebot::GetForwardMsgReq* get_forward_msg_req) {
  clear_data();
  if (get_forward_msg_req) {
    set_has_get_forward_msg_req();
    data_.get_forward_msg_req_ = get_forward_msg_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_forward_msg_req)
}
inline ::onebot::GetForwardMsgReq* Frame::_internal_mutable_get_forward_msg_req() {
  if (!_internal_has_get_forward_msg_req()) {
    clear_data();
    set_has_get_forward_msg_req();
    data_.get_forward_msg_req_ = CreateMaybeMessage< ::onebot::GetForwardMsgReq >(GetArena());
  }
  return data_.get_forward_msg_req_;
}
inline ::onebot::GetForwardMsgReq* Frame::mutable_get_forward_msg_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_forward_msg_req)
  return _internal_mutable_get_forward_msg_req();
}

// .onebot.SendLikeReq send_like_req = 207;
inline bool Frame::_internal_has_send_like_req() const {
  return data_case() == kSendLikeReq;
}
inline bool Frame::has_send_like_req() const {
  return _internal_has_send_like_req();
}
inline void Frame::set_has_send_like_req() {
  _oneof_case_[0] = kSendLikeReq;
}
inline ::onebot::SendLikeReq* Frame::release_send_like_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.send_like_req)
  if (_internal_has_send_like_req()) {
    clear_has_data();
      ::onebot::SendLikeReq* temp = data_.send_like_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.send_like_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SendLikeReq& Frame::_internal_send_like_req() const {
  return _internal_has_send_like_req()
      ? *data_.send_like_req_
      : reinterpret_cast< ::onebot::SendLikeReq&>(::onebot::_SendLikeReq_default_instance_);
}
inline const ::onebot::SendLikeReq& Frame::send_like_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.send_like_req)
  return _internal_send_like_req();
}
inline ::onebot::SendLikeReq* Frame::unsafe_arena_release_send_like_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.send_like_req)
  if (_internal_has_send_like_req()) {
    clear_has_data();
    ::onebot::SendLikeReq* temp = data_.send_like_req_;
    data_.send_like_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_send_like_req(::onebot::SendLikeReq* send_like_req) {
  clear_data();
  if (send_like_req) {
    set_has_send_like_req();
    data_.send_like_req_ = send_like_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.send_like_req)
}
inline ::onebot::SendLikeReq* Frame::_internal_mutable_send_like_req() {
  if (!_internal_has_send_like_req()) {
    clear_data();
    set_has_send_like_req();
    data_.send_like_req_ = CreateMaybeMessage< ::onebot::SendLikeReq >(GetArena());
  }
  return data_.send_like_req_;
}
inline ::onebot::SendLikeReq* Frame::mutable_send_like_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.send_like_req)
  return _internal_mutable_send_like_req();
}

// .onebot.SetGroupKickReq set_group_kick_req = 208;
inline bool Frame::_internal_has_set_group_kick_req() const {
  return data_case() == kSetGroupKickReq;
}
inline bool Frame::has_set_group_kick_req() const {
  return _internal_has_set_group_kick_req();
}
inline void Frame::set_has_set_group_kick_req() {
  _oneof_case_[0] = kSetGroupKickReq;
}
inline ::onebot::SetGroupKickReq* Frame::release_set_group_kick_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_kick_req)
  if (_internal_has_set_group_kick_req()) {
    clear_has_data();
      ::onebot::SetGroupKickReq* temp = data_.set_group_kick_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_kick_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupKickReq& Frame::_internal_set_group_kick_req() const {
  return _internal_has_set_group_kick_req()
      ? *data_.set_group_kick_req_
      : reinterpret_cast< ::onebot::SetGroupKickReq&>(::onebot::_SetGroupKickReq_default_instance_);
}
inline const ::onebot::SetGroupKickReq& Frame::set_group_kick_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_kick_req)
  return _internal_set_group_kick_req();
}
inline ::onebot::SetGroupKickReq* Frame::unsafe_arena_release_set_group_kick_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_kick_req)
  if (_internal_has_set_group_kick_req()) {
    clear_has_data();
    ::onebot::SetGroupKickReq* temp = data_.set_group_kick_req_;
    data_.set_group_kick_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_kick_req(::onebot::SetGroupKickReq* set_group_kick_req) {
  clear_data();
  if (set_group_kick_req) {
    set_has_set_group_kick_req();
    data_.set_group_kick_req_ = set_group_kick_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_kick_req)
}
inline ::onebot::SetGroupKickReq* Frame::_internal_mutable_set_group_kick_req() {
  if (!_internal_has_set_group_kick_req()) {
    clear_data();
    set_has_set_group_kick_req();
    data_.set_group_kick_req_ = CreateMaybeMessage< ::onebot::SetGroupKickReq >(GetArena());
  }
  return data_.set_group_kick_req_;
}
inline ::onebot::SetGroupKickReq* Frame::mutable_set_group_kick_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_kick_req)
  return _internal_mutable_set_group_kick_req();
}

// .onebot.SetGroupBanReq set_group_ban_req = 209;
inline bool Frame::_internal_has_set_group_ban_req() const {
  return data_case() == kSetGroupBanReq;
}
inline bool Frame::has_set_group_ban_req() const {
  return _internal_has_set_group_ban_req();
}
inline void Frame::set_has_set_group_ban_req() {
  _oneof_case_[0] = kSetGroupBanReq;
}
inline ::onebot::SetGroupBanReq* Frame::release_set_group_ban_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_ban_req)
  if (_internal_has_set_group_ban_req()) {
    clear_has_data();
      ::onebot::SetGroupBanReq* temp = data_.set_group_ban_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_ban_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupBanReq& Frame::_internal_set_group_ban_req() const {
  return _internal_has_set_group_ban_req()
      ? *data_.set_group_ban_req_
      : reinterpret_cast< ::onebot::SetGroupBanReq&>(::onebot::_SetGroupBanReq_default_instance_);
}
inline const ::onebot::SetGroupBanReq& Frame::set_group_ban_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_ban_req)
  return _internal_set_group_ban_req();
}
inline ::onebot::SetGroupBanReq* Frame::unsafe_arena_release_set_group_ban_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_ban_req)
  if (_internal_has_set_group_ban_req()) {
    clear_has_data();
    ::onebot::SetGroupBanReq* temp = data_.set_group_ban_req_;
    data_.set_group_ban_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_ban_req(::onebot::SetGroupBanReq* set_group_ban_req) {
  clear_data();
  if (set_group_ban_req) {
    set_has_set_group_ban_req();
    data_.set_group_ban_req_ = set_group_ban_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_ban_req)
}
inline ::onebot::SetGroupBanReq* Frame::_internal_mutable_set_group_ban_req() {
  if (!_internal_has_set_group_ban_req()) {
    clear_data();
    set_has_set_group_ban_req();
    data_.set_group_ban_req_ = CreateMaybeMessage< ::onebot::SetGroupBanReq >(GetArena());
  }
  return data_.set_group_ban_req_;
}
inline ::onebot::SetGroupBanReq* Frame::mutable_set_group_ban_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_ban_req)
  return _internal_mutable_set_group_ban_req();
}

// .onebot.SetGroupAnonymousBanReq set_group_anonymous_ban_req = 210;
inline bool Frame::_internal_has_set_group_anonymous_ban_req() const {
  return data_case() == kSetGroupAnonymousBanReq;
}
inline bool Frame::has_set_group_anonymous_ban_req() const {
  return _internal_has_set_group_anonymous_ban_req();
}
inline void Frame::set_has_set_group_anonymous_ban_req() {
  _oneof_case_[0] = kSetGroupAnonymousBanReq;
}
inline ::onebot::SetGroupAnonymousBanReq* Frame::release_set_group_anonymous_ban_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_anonymous_ban_req)
  if (_internal_has_set_group_anonymous_ban_req()) {
    clear_has_data();
      ::onebot::SetGroupAnonymousBanReq* temp = data_.set_group_anonymous_ban_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_anonymous_ban_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupAnonymousBanReq& Frame::_internal_set_group_anonymous_ban_req() const {
  return _internal_has_set_group_anonymous_ban_req()
      ? *data_.set_group_anonymous_ban_req_
      : reinterpret_cast< ::onebot::SetGroupAnonymousBanReq&>(::onebot::_SetGroupAnonymousBanReq_default_instance_);
}
inline const ::onebot::SetGroupAnonymousBanReq& Frame::set_group_anonymous_ban_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_anonymous_ban_req)
  return _internal_set_group_anonymous_ban_req();
}
inline ::onebot::SetGroupAnonymousBanReq* Frame::unsafe_arena_release_set_group_anonymous_ban_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_anonymous_ban_req)
  if (_internal_has_set_group_anonymous_ban_req()) {
    clear_has_data();
    ::onebot::SetGroupAnonymousBanReq* temp = data_.set_group_anonymous_ban_req_;
    data_.set_group_anonymous_ban_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_anonymous_ban_req(::onebot::SetGroupAnonymousBanReq* set_group_anonymous_ban_req) {
  clear_data();
  if (set_group_anonymous_ban_req) {
    set_has_set_group_anonymous_ban_req();
    data_.set_group_anonymous_ban_req_ = set_group_anonymous_ban_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_anonymous_ban_req)
}
inline ::onebot::SetGroupAnonymousBanReq* Frame::_internal_mutable_set_group_anonymous_ban_req() {
  if (!_internal_has_set_group_anonymous_ban_req()) {
    clear_data();
    set_has_set_group_anonymous_ban_req();
    data_.set_group_anonymous_ban_req_ = CreateMaybeMessage< ::onebot::SetGroupAnonymousBanReq >(GetArena());
  }
  return data_.set_group_anonymous_ban_req_;
}
inline ::onebot::SetGroupAnonymousBanReq* Frame::mutable_set_group_anonymous_ban_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_anonymous_ban_req)
  return _internal_mutable_set_group_anonymous_ban_req();
}

// .onebot.SetGroupWholeBanReq set_group_whole_ban_req = 211;
inline bool Frame::_internal_has_set_group_whole_ban_req() const {
  return data_case() == kSetGroupWholeBanReq;
}
inline bool Frame::has_set_group_whole_ban_req() const {
  return _internal_has_set_group_whole_ban_req();
}
inline void Frame::set_has_set_group_whole_ban_req() {
  _oneof_case_[0] = kSetGroupWholeBanReq;
}
inline ::onebot::SetGroupWholeBanReq* Frame::release_set_group_whole_ban_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_whole_ban_req)
  if (_internal_has_set_group_whole_ban_req()) {
    clear_has_data();
      ::onebot::SetGroupWholeBanReq* temp = data_.set_group_whole_ban_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_whole_ban_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupWholeBanReq& Frame::_internal_set_group_whole_ban_req() const {
  return _internal_has_set_group_whole_ban_req()
      ? *data_.set_group_whole_ban_req_
      : reinterpret_cast< ::onebot::SetGroupWholeBanReq&>(::onebot::_SetGroupWholeBanReq_default_instance_);
}
inline const ::onebot::SetGroupWholeBanReq& Frame::set_group_whole_ban_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_whole_ban_req)
  return _internal_set_group_whole_ban_req();
}
inline ::onebot::SetGroupWholeBanReq* Frame::unsafe_arena_release_set_group_whole_ban_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_whole_ban_req)
  if (_internal_has_set_group_whole_ban_req()) {
    clear_has_data();
    ::onebot::SetGroupWholeBanReq* temp = data_.set_group_whole_ban_req_;
    data_.set_group_whole_ban_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_whole_ban_req(::onebot::SetGroupWholeBanReq* set_group_whole_ban_req) {
  clear_data();
  if (set_group_whole_ban_req) {
    set_has_set_group_whole_ban_req();
    data_.set_group_whole_ban_req_ = set_group_whole_ban_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_whole_ban_req)
}
inline ::onebot::SetGroupWholeBanReq* Frame::_internal_mutable_set_group_whole_ban_req() {
  if (!_internal_has_set_group_whole_ban_req()) {
    clear_data();
    set_has_set_group_whole_ban_req();
    data_.set_group_whole_ban_req_ = CreateMaybeMessage< ::onebot::SetGroupWholeBanReq >(GetArena());
  }
  return data_.set_group_whole_ban_req_;
}
inline ::onebot::SetGroupWholeBanReq* Frame::mutable_set_group_whole_ban_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_whole_ban_req)
  return _internal_mutable_set_group_whole_ban_req();
}

// .onebot.SetGroupAdminReq set_group_admin_req = 212;
inline bool Frame::_internal_has_set_group_admin_req() const {
  return data_case() == kSetGroupAdminReq;
}
inline bool Frame::has_set_group_admin_req() const {
  return _internal_has_set_group_admin_req();
}
inline void Frame::set_has_set_group_admin_req() {
  _oneof_case_[0] = kSetGroupAdminReq;
}
inline ::onebot::SetGroupAdminReq* Frame::release_set_group_admin_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_admin_req)
  if (_internal_has_set_group_admin_req()) {
    clear_has_data();
      ::onebot::SetGroupAdminReq* temp = data_.set_group_admin_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_admin_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupAdminReq& Frame::_internal_set_group_admin_req() const {
  return _internal_has_set_group_admin_req()
      ? *data_.set_group_admin_req_
      : reinterpret_cast< ::onebot::SetGroupAdminReq&>(::onebot::_SetGroupAdminReq_default_instance_);
}
inline const ::onebot::SetGroupAdminReq& Frame::set_group_admin_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_admin_req)
  return _internal_set_group_admin_req();
}
inline ::onebot::SetGroupAdminReq* Frame::unsafe_arena_release_set_group_admin_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_admin_req)
  if (_internal_has_set_group_admin_req()) {
    clear_has_data();
    ::onebot::SetGroupAdminReq* temp = data_.set_group_admin_req_;
    data_.set_group_admin_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_admin_req(::onebot::SetGroupAdminReq* set_group_admin_req) {
  clear_data();
  if (set_group_admin_req) {
    set_has_set_group_admin_req();
    data_.set_group_admin_req_ = set_group_admin_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_admin_req)
}
inline ::onebot::SetGroupAdminReq* Frame::_internal_mutable_set_group_admin_req() {
  if (!_internal_has_set_group_admin_req()) {
    clear_data();
    set_has_set_group_admin_req();
    data_.set_group_admin_req_ = CreateMaybeMessage< ::onebot::SetGroupAdminReq >(GetArena());
  }
  return data_.set_group_admin_req_;
}
inline ::onebot::SetGroupAdminReq* Frame::mutable_set_group_admin_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_admin_req)
  return _internal_mutable_set_group_admin_req();
}

// .onebot.SetGroupAnonymousReq set_group_anonymous_req = 213;
inline bool Frame::_internal_has_set_group_anonymous_req() const {
  return data_case() == kSetGroupAnonymousReq;
}
inline bool Frame::has_set_group_anonymous_req() const {
  return _internal_has_set_group_anonymous_req();
}
inline void Frame::set_has_set_group_anonymous_req() {
  _oneof_case_[0] = kSetGroupAnonymousReq;
}
inline ::onebot::SetGroupAnonymousReq* Frame::release_set_group_anonymous_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_anonymous_req)
  if (_internal_has_set_group_anonymous_req()) {
    clear_has_data();
      ::onebot::SetGroupAnonymousReq* temp = data_.set_group_anonymous_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_anonymous_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupAnonymousReq& Frame::_internal_set_group_anonymous_req() const {
  return _internal_has_set_group_anonymous_req()
      ? *data_.set_group_anonymous_req_
      : reinterpret_cast< ::onebot::SetGroupAnonymousReq&>(::onebot::_SetGroupAnonymousReq_default_instance_);
}
inline const ::onebot::SetGroupAnonymousReq& Frame::set_group_anonymous_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_anonymous_req)
  return _internal_set_group_anonymous_req();
}
inline ::onebot::SetGroupAnonymousReq* Frame::unsafe_arena_release_set_group_anonymous_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_anonymous_req)
  if (_internal_has_set_group_anonymous_req()) {
    clear_has_data();
    ::onebot::SetGroupAnonymousReq* temp = data_.set_group_anonymous_req_;
    data_.set_group_anonymous_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_anonymous_req(::onebot::SetGroupAnonymousReq* set_group_anonymous_req) {
  clear_data();
  if (set_group_anonymous_req) {
    set_has_set_group_anonymous_req();
    data_.set_group_anonymous_req_ = set_group_anonymous_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_anonymous_req)
}
inline ::onebot::SetGroupAnonymousReq* Frame::_internal_mutable_set_group_anonymous_req() {
  if (!_internal_has_set_group_anonymous_req()) {
    clear_data();
    set_has_set_group_anonymous_req();
    data_.set_group_anonymous_req_ = CreateMaybeMessage< ::onebot::SetGroupAnonymousReq >(GetArena());
  }
  return data_.set_group_anonymous_req_;
}
inline ::onebot::SetGroupAnonymousReq* Frame::mutable_set_group_anonymous_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_anonymous_req)
  return _internal_mutable_set_group_anonymous_req();
}

// .onebot.SetGroupCardReq set_group_card_req = 214;
inline bool Frame::_internal_has_set_group_card_req() const {
  return data_case() == kSetGroupCardReq;
}
inline bool Frame::has_set_group_card_req() const {
  return _internal_has_set_group_card_req();
}
inline void Frame::set_has_set_group_card_req() {
  _oneof_case_[0] = kSetGroupCardReq;
}
inline ::onebot::SetGroupCardReq* Frame::release_set_group_card_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_card_req)
  if (_internal_has_set_group_card_req()) {
    clear_has_data();
      ::onebot::SetGroupCardReq* temp = data_.set_group_card_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_card_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupCardReq& Frame::_internal_set_group_card_req() const {
  return _internal_has_set_group_card_req()
      ? *data_.set_group_card_req_
      : reinterpret_cast< ::onebot::SetGroupCardReq&>(::onebot::_SetGroupCardReq_default_instance_);
}
inline const ::onebot::SetGroupCardReq& Frame::set_group_card_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_card_req)
  return _internal_set_group_card_req();
}
inline ::onebot::SetGroupCardReq* Frame::unsafe_arena_release_set_group_card_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_card_req)
  if (_internal_has_set_group_card_req()) {
    clear_has_data();
    ::onebot::SetGroupCardReq* temp = data_.set_group_card_req_;
    data_.set_group_card_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_card_req(::onebot::SetGroupCardReq* set_group_card_req) {
  clear_data();
  if (set_group_card_req) {
    set_has_set_group_card_req();
    data_.set_group_card_req_ = set_group_card_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_card_req)
}
inline ::onebot::SetGroupCardReq* Frame::_internal_mutable_set_group_card_req() {
  if (!_internal_has_set_group_card_req()) {
    clear_data();
    set_has_set_group_card_req();
    data_.set_group_card_req_ = CreateMaybeMessage< ::onebot::SetGroupCardReq >(GetArena());
  }
  return data_.set_group_card_req_;
}
inline ::onebot::SetGroupCardReq* Frame::mutable_set_group_card_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_card_req)
  return _internal_mutable_set_group_card_req();
}

// .onebot.SetGroupNameReq set_group_name_req = 215;
inline bool Frame::_internal_has_set_group_name_req() const {
  return data_case() == kSetGroupNameReq;
}
inline bool Frame::has_set_group_name_req() const {
  return _internal_has_set_group_name_req();
}
inline void Frame::set_has_set_group_name_req() {
  _oneof_case_[0] = kSetGroupNameReq;
}
inline ::onebot::SetGroupNameReq* Frame::release_set_group_name_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_name_req)
  if (_internal_has_set_group_name_req()) {
    clear_has_data();
      ::onebot::SetGroupNameReq* temp = data_.set_group_name_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_name_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupNameReq& Frame::_internal_set_group_name_req() const {
  return _internal_has_set_group_name_req()
      ? *data_.set_group_name_req_
      : reinterpret_cast< ::onebot::SetGroupNameReq&>(::onebot::_SetGroupNameReq_default_instance_);
}
inline const ::onebot::SetGroupNameReq& Frame::set_group_name_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_name_req)
  return _internal_set_group_name_req();
}
inline ::onebot::SetGroupNameReq* Frame::unsafe_arena_release_set_group_name_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_name_req)
  if (_internal_has_set_group_name_req()) {
    clear_has_data();
    ::onebot::SetGroupNameReq* temp = data_.set_group_name_req_;
    data_.set_group_name_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_name_req(::onebot::SetGroupNameReq* set_group_name_req) {
  clear_data();
  if (set_group_name_req) {
    set_has_set_group_name_req();
    data_.set_group_name_req_ = set_group_name_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_name_req)
}
inline ::onebot::SetGroupNameReq* Frame::_internal_mutable_set_group_name_req() {
  if (!_internal_has_set_group_name_req()) {
    clear_data();
    set_has_set_group_name_req();
    data_.set_group_name_req_ = CreateMaybeMessage< ::onebot::SetGroupNameReq >(GetArena());
  }
  return data_.set_group_name_req_;
}
inline ::onebot::SetGroupNameReq* Frame::mutable_set_group_name_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_name_req)
  return _internal_mutable_set_group_name_req();
}

// .onebot.SetGroupLeaveReq set_group_leave_req = 216;
inline bool Frame::_internal_has_set_group_leave_req() const {
  return data_case() == kSetGroupLeaveReq;
}
inline bool Frame::has_set_group_leave_req() const {
  return _internal_has_set_group_leave_req();
}
inline void Frame::set_has_set_group_leave_req() {
  _oneof_case_[0] = kSetGroupLeaveReq;
}
inline ::onebot::SetGroupLeaveReq* Frame::release_set_group_leave_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_leave_req)
  if (_internal_has_set_group_leave_req()) {
    clear_has_data();
      ::onebot::SetGroupLeaveReq* temp = data_.set_group_leave_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_leave_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupLeaveReq& Frame::_internal_set_group_leave_req() const {
  return _internal_has_set_group_leave_req()
      ? *data_.set_group_leave_req_
      : reinterpret_cast< ::onebot::SetGroupLeaveReq&>(::onebot::_SetGroupLeaveReq_default_instance_);
}
inline const ::onebot::SetGroupLeaveReq& Frame::set_group_leave_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_leave_req)
  return _internal_set_group_leave_req();
}
inline ::onebot::SetGroupLeaveReq* Frame::unsafe_arena_release_set_group_leave_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_leave_req)
  if (_internal_has_set_group_leave_req()) {
    clear_has_data();
    ::onebot::SetGroupLeaveReq* temp = data_.set_group_leave_req_;
    data_.set_group_leave_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_leave_req(::onebot::SetGroupLeaveReq* set_group_leave_req) {
  clear_data();
  if (set_group_leave_req) {
    set_has_set_group_leave_req();
    data_.set_group_leave_req_ = set_group_leave_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_leave_req)
}
inline ::onebot::SetGroupLeaveReq* Frame::_internal_mutable_set_group_leave_req() {
  if (!_internal_has_set_group_leave_req()) {
    clear_data();
    set_has_set_group_leave_req();
    data_.set_group_leave_req_ = CreateMaybeMessage< ::onebot::SetGroupLeaveReq >(GetArena());
  }
  return data_.set_group_leave_req_;
}
inline ::onebot::SetGroupLeaveReq* Frame::mutable_set_group_leave_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_leave_req)
  return _internal_mutable_set_group_leave_req();
}

// .onebot.SetGroupSpecialTitleReq set_group_special_title_req = 217;
inline bool Frame::_internal_has_set_group_special_title_req() const {
  return data_case() == kSetGroupSpecialTitleReq;
}
inline bool Frame::has_set_group_special_title_req() const {
  return _internal_has_set_group_special_title_req();
}
inline void Frame::set_has_set_group_special_title_req() {
  _oneof_case_[0] = kSetGroupSpecialTitleReq;
}
inline ::onebot::SetGroupSpecialTitleReq* Frame::release_set_group_special_title_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_special_title_req)
  if (_internal_has_set_group_special_title_req()) {
    clear_has_data();
      ::onebot::SetGroupSpecialTitleReq* temp = data_.set_group_special_title_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_special_title_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupSpecialTitleReq& Frame::_internal_set_group_special_title_req() const {
  return _internal_has_set_group_special_title_req()
      ? *data_.set_group_special_title_req_
      : reinterpret_cast< ::onebot::SetGroupSpecialTitleReq&>(::onebot::_SetGroupSpecialTitleReq_default_instance_);
}
inline const ::onebot::SetGroupSpecialTitleReq& Frame::set_group_special_title_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_special_title_req)
  return _internal_set_group_special_title_req();
}
inline ::onebot::SetGroupSpecialTitleReq* Frame::unsafe_arena_release_set_group_special_title_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_special_title_req)
  if (_internal_has_set_group_special_title_req()) {
    clear_has_data();
    ::onebot::SetGroupSpecialTitleReq* temp = data_.set_group_special_title_req_;
    data_.set_group_special_title_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_special_title_req(::onebot::SetGroupSpecialTitleReq* set_group_special_title_req) {
  clear_data();
  if (set_group_special_title_req) {
    set_has_set_group_special_title_req();
    data_.set_group_special_title_req_ = set_group_special_title_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_special_title_req)
}
inline ::onebot::SetGroupSpecialTitleReq* Frame::_internal_mutable_set_group_special_title_req() {
  if (!_internal_has_set_group_special_title_req()) {
    clear_data();
    set_has_set_group_special_title_req();
    data_.set_group_special_title_req_ = CreateMaybeMessage< ::onebot::SetGroupSpecialTitleReq >(GetArena());
  }
  return data_.set_group_special_title_req_;
}
inline ::onebot::SetGroupSpecialTitleReq* Frame::mutable_set_group_special_title_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_special_title_req)
  return _internal_mutable_set_group_special_title_req();
}

// .onebot.SetFriendAddRequestReq set_friend_add_request_req = 218;
inline bool Frame::_internal_has_set_friend_add_request_req() const {
  return data_case() == kSetFriendAddRequestReq;
}
inline bool Frame::has_set_friend_add_request_req() const {
  return _internal_has_set_friend_add_request_req();
}
inline void Frame::set_has_set_friend_add_request_req() {
  _oneof_case_[0] = kSetFriendAddRequestReq;
}
inline ::onebot::SetFriendAddRequestReq* Frame::release_set_friend_add_request_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_friend_add_request_req)
  if (_internal_has_set_friend_add_request_req()) {
    clear_has_data();
      ::onebot::SetFriendAddRequestReq* temp = data_.set_friend_add_request_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_friend_add_request_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetFriendAddRequestReq& Frame::_internal_set_friend_add_request_req() const {
  return _internal_has_set_friend_add_request_req()
      ? *data_.set_friend_add_request_req_
      : reinterpret_cast< ::onebot::SetFriendAddRequestReq&>(::onebot::_SetFriendAddRequestReq_default_instance_);
}
inline const ::onebot::SetFriendAddRequestReq& Frame::set_friend_add_request_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_friend_add_request_req)
  return _internal_set_friend_add_request_req();
}
inline ::onebot::SetFriendAddRequestReq* Frame::unsafe_arena_release_set_friend_add_request_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_friend_add_request_req)
  if (_internal_has_set_friend_add_request_req()) {
    clear_has_data();
    ::onebot::SetFriendAddRequestReq* temp = data_.set_friend_add_request_req_;
    data_.set_friend_add_request_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_friend_add_request_req(::onebot::SetFriendAddRequestReq* set_friend_add_request_req) {
  clear_data();
  if (set_friend_add_request_req) {
    set_has_set_friend_add_request_req();
    data_.set_friend_add_request_req_ = set_friend_add_request_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_friend_add_request_req)
}
inline ::onebot::SetFriendAddRequestReq* Frame::_internal_mutable_set_friend_add_request_req() {
  if (!_internal_has_set_friend_add_request_req()) {
    clear_data();
    set_has_set_friend_add_request_req();
    data_.set_friend_add_request_req_ = CreateMaybeMessage< ::onebot::SetFriendAddRequestReq >(GetArena());
  }
  return data_.set_friend_add_request_req_;
}
inline ::onebot::SetFriendAddRequestReq* Frame::mutable_set_friend_add_request_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_friend_add_request_req)
  return _internal_mutable_set_friend_add_request_req();
}

// .onebot.SetGroupAddRequestReq set_group_add_request_req = 219;
inline bool Frame::_internal_has_set_group_add_request_req() const {
  return data_case() == kSetGroupAddRequestReq;
}
inline bool Frame::has_set_group_add_request_req() const {
  return _internal_has_set_group_add_request_req();
}
inline void Frame::set_has_set_group_add_request_req() {
  _oneof_case_[0] = kSetGroupAddRequestReq;
}
inline ::onebot::SetGroupAddRequestReq* Frame::release_set_group_add_request_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_add_request_req)
  if (_internal_has_set_group_add_request_req()) {
    clear_has_data();
      ::onebot::SetGroupAddRequestReq* temp = data_.set_group_add_request_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_add_request_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupAddRequestReq& Frame::_internal_set_group_add_request_req() const {
  return _internal_has_set_group_add_request_req()
      ? *data_.set_group_add_request_req_
      : reinterpret_cast< ::onebot::SetGroupAddRequestReq&>(::onebot::_SetGroupAddRequestReq_default_instance_);
}
inline const ::onebot::SetGroupAddRequestReq& Frame::set_group_add_request_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_add_request_req)
  return _internal_set_group_add_request_req();
}
inline ::onebot::SetGroupAddRequestReq* Frame::unsafe_arena_release_set_group_add_request_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_add_request_req)
  if (_internal_has_set_group_add_request_req()) {
    clear_has_data();
    ::onebot::SetGroupAddRequestReq* temp = data_.set_group_add_request_req_;
    data_.set_group_add_request_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_add_request_req(::onebot::SetGroupAddRequestReq* set_group_add_request_req) {
  clear_data();
  if (set_group_add_request_req) {
    set_has_set_group_add_request_req();
    data_.set_group_add_request_req_ = set_group_add_request_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_add_request_req)
}
inline ::onebot::SetGroupAddRequestReq* Frame::_internal_mutable_set_group_add_request_req() {
  if (!_internal_has_set_group_add_request_req()) {
    clear_data();
    set_has_set_group_add_request_req();
    data_.set_group_add_request_req_ = CreateMaybeMessage< ::onebot::SetGroupAddRequestReq >(GetArena());
  }
  return data_.set_group_add_request_req_;
}
inline ::onebot::SetGroupAddRequestReq* Frame::mutable_set_group_add_request_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_add_request_req)
  return _internal_mutable_set_group_add_request_req();
}

// .onebot.GetLoginInfoReq get_login_info_req = 220;
inline bool Frame::_internal_has_get_login_info_req() const {
  return data_case() == kGetLoginInfoReq;
}
inline bool Frame::has_get_login_info_req() const {
  return _internal_has_get_login_info_req();
}
inline void Frame::set_has_get_login_info_req() {
  _oneof_case_[0] = kGetLoginInfoReq;
}
inline ::onebot::GetLoginInfoReq* Frame::release_get_login_info_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_login_info_req)
  if (_internal_has_get_login_info_req()) {
    clear_has_data();
      ::onebot::GetLoginInfoReq* temp = data_.get_login_info_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_login_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetLoginInfoReq& Frame::_internal_get_login_info_req() const {
  return _internal_has_get_login_info_req()
      ? *data_.get_login_info_req_
      : reinterpret_cast< ::onebot::GetLoginInfoReq&>(::onebot::_GetLoginInfoReq_default_instance_);
}
inline const ::onebot::GetLoginInfoReq& Frame::get_login_info_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_login_info_req)
  return _internal_get_login_info_req();
}
inline ::onebot::GetLoginInfoReq* Frame::unsafe_arena_release_get_login_info_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_login_info_req)
  if (_internal_has_get_login_info_req()) {
    clear_has_data();
    ::onebot::GetLoginInfoReq* temp = data_.get_login_info_req_;
    data_.get_login_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_login_info_req(::onebot::GetLoginInfoReq* get_login_info_req) {
  clear_data();
  if (get_login_info_req) {
    set_has_get_login_info_req();
    data_.get_login_info_req_ = get_login_info_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_login_info_req)
}
inline ::onebot::GetLoginInfoReq* Frame::_internal_mutable_get_login_info_req() {
  if (!_internal_has_get_login_info_req()) {
    clear_data();
    set_has_get_login_info_req();
    data_.get_login_info_req_ = CreateMaybeMessage< ::onebot::GetLoginInfoReq >(GetArena());
  }
  return data_.get_login_info_req_;
}
inline ::onebot::GetLoginInfoReq* Frame::mutable_get_login_info_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_login_info_req)
  return _internal_mutable_get_login_info_req();
}

// .onebot.GetStrangerInfoReq get_stranger_info_req = 221;
inline bool Frame::_internal_has_get_stranger_info_req() const {
  return data_case() == kGetStrangerInfoReq;
}
inline bool Frame::has_get_stranger_info_req() const {
  return _internal_has_get_stranger_info_req();
}
inline void Frame::set_has_get_stranger_info_req() {
  _oneof_case_[0] = kGetStrangerInfoReq;
}
inline ::onebot::GetStrangerInfoReq* Frame::release_get_stranger_info_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_stranger_info_req)
  if (_internal_has_get_stranger_info_req()) {
    clear_has_data();
      ::onebot::GetStrangerInfoReq* temp = data_.get_stranger_info_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_stranger_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetStrangerInfoReq& Frame::_internal_get_stranger_info_req() const {
  return _internal_has_get_stranger_info_req()
      ? *data_.get_stranger_info_req_
      : reinterpret_cast< ::onebot::GetStrangerInfoReq&>(::onebot::_GetStrangerInfoReq_default_instance_);
}
inline const ::onebot::GetStrangerInfoReq& Frame::get_stranger_info_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_stranger_info_req)
  return _internal_get_stranger_info_req();
}
inline ::onebot::GetStrangerInfoReq* Frame::unsafe_arena_release_get_stranger_info_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_stranger_info_req)
  if (_internal_has_get_stranger_info_req()) {
    clear_has_data();
    ::onebot::GetStrangerInfoReq* temp = data_.get_stranger_info_req_;
    data_.get_stranger_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_stranger_info_req(::onebot::GetStrangerInfoReq* get_stranger_info_req) {
  clear_data();
  if (get_stranger_info_req) {
    set_has_get_stranger_info_req();
    data_.get_stranger_info_req_ = get_stranger_info_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_stranger_info_req)
}
inline ::onebot::GetStrangerInfoReq* Frame::_internal_mutable_get_stranger_info_req() {
  if (!_internal_has_get_stranger_info_req()) {
    clear_data();
    set_has_get_stranger_info_req();
    data_.get_stranger_info_req_ = CreateMaybeMessage< ::onebot::GetStrangerInfoReq >(GetArena());
  }
  return data_.get_stranger_info_req_;
}
inline ::onebot::GetStrangerInfoReq* Frame::mutable_get_stranger_info_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_stranger_info_req)
  return _internal_mutable_get_stranger_info_req();
}

// .onebot.GetFriendListReq get_friend_list_req = 222;
inline bool Frame::_internal_has_get_friend_list_req() const {
  return data_case() == kGetFriendListReq;
}
inline bool Frame::has_get_friend_list_req() const {
  return _internal_has_get_friend_list_req();
}
inline void Frame::set_has_get_friend_list_req() {
  _oneof_case_[0] = kGetFriendListReq;
}
inline ::onebot::GetFriendListReq* Frame::release_get_friend_list_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_friend_list_req)
  if (_internal_has_get_friend_list_req()) {
    clear_has_data();
      ::onebot::GetFriendListReq* temp = data_.get_friend_list_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_friend_list_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetFriendListReq& Frame::_internal_get_friend_list_req() const {
  return _internal_has_get_friend_list_req()
      ? *data_.get_friend_list_req_
      : reinterpret_cast< ::onebot::GetFriendListReq&>(::onebot::_GetFriendListReq_default_instance_);
}
inline const ::onebot::GetFriendListReq& Frame::get_friend_list_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_friend_list_req)
  return _internal_get_friend_list_req();
}
inline ::onebot::GetFriendListReq* Frame::unsafe_arena_release_get_friend_list_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_friend_list_req)
  if (_internal_has_get_friend_list_req()) {
    clear_has_data();
    ::onebot::GetFriendListReq* temp = data_.get_friend_list_req_;
    data_.get_friend_list_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_friend_list_req(::onebot::GetFriendListReq* get_friend_list_req) {
  clear_data();
  if (get_friend_list_req) {
    set_has_get_friend_list_req();
    data_.get_friend_list_req_ = get_friend_list_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_friend_list_req)
}
inline ::onebot::GetFriendListReq* Frame::_internal_mutable_get_friend_list_req() {
  if (!_internal_has_get_friend_list_req()) {
    clear_data();
    set_has_get_friend_list_req();
    data_.get_friend_list_req_ = CreateMaybeMessage< ::onebot::GetFriendListReq >(GetArena());
  }
  return data_.get_friend_list_req_;
}
inline ::onebot::GetFriendListReq* Frame::mutable_get_friend_list_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_friend_list_req)
  return _internal_mutable_get_friend_list_req();
}

// .onebot.GetGroupInfoReq get_group_info_req = 223;
inline bool Frame::_internal_has_get_group_info_req() const {
  return data_case() == kGetGroupInfoReq;
}
inline bool Frame::has_get_group_info_req() const {
  return _internal_has_get_group_info_req();
}
inline void Frame::set_has_get_group_info_req() {
  _oneof_case_[0] = kGetGroupInfoReq;
}
inline ::onebot::GetGroupInfoReq* Frame::release_get_group_info_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_info_req)
  if (_internal_has_get_group_info_req()) {
    clear_has_data();
      ::onebot::GetGroupInfoReq* temp = data_.get_group_info_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupInfoReq& Frame::_internal_get_group_info_req() const {
  return _internal_has_get_group_info_req()
      ? *data_.get_group_info_req_
      : reinterpret_cast< ::onebot::GetGroupInfoReq&>(::onebot::_GetGroupInfoReq_default_instance_);
}
inline const ::onebot::GetGroupInfoReq& Frame::get_group_info_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_info_req)
  return _internal_get_group_info_req();
}
inline ::onebot::GetGroupInfoReq* Frame::unsafe_arena_release_get_group_info_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_info_req)
  if (_internal_has_get_group_info_req()) {
    clear_has_data();
    ::onebot::GetGroupInfoReq* temp = data_.get_group_info_req_;
    data_.get_group_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_info_req(::onebot::GetGroupInfoReq* get_group_info_req) {
  clear_data();
  if (get_group_info_req) {
    set_has_get_group_info_req();
    data_.get_group_info_req_ = get_group_info_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_info_req)
}
inline ::onebot::GetGroupInfoReq* Frame::_internal_mutable_get_group_info_req() {
  if (!_internal_has_get_group_info_req()) {
    clear_data();
    set_has_get_group_info_req();
    data_.get_group_info_req_ = CreateMaybeMessage< ::onebot::GetGroupInfoReq >(GetArena());
  }
  return data_.get_group_info_req_;
}
inline ::onebot::GetGroupInfoReq* Frame::mutable_get_group_info_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_info_req)
  return _internal_mutable_get_group_info_req();
}

// .onebot.GetGroupListReq get_group_list_req = 224;
inline bool Frame::_internal_has_get_group_list_req() const {
  return data_case() == kGetGroupListReq;
}
inline bool Frame::has_get_group_list_req() const {
  return _internal_has_get_group_list_req();
}
inline void Frame::set_has_get_group_list_req() {
  _oneof_case_[0] = kGetGroupListReq;
}
inline ::onebot::GetGroupListReq* Frame::release_get_group_list_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_list_req)
  if (_internal_has_get_group_list_req()) {
    clear_has_data();
      ::onebot::GetGroupListReq* temp = data_.get_group_list_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_list_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupListReq& Frame::_internal_get_group_list_req() const {
  return _internal_has_get_group_list_req()
      ? *data_.get_group_list_req_
      : reinterpret_cast< ::onebot::GetGroupListReq&>(::onebot::_GetGroupListReq_default_instance_);
}
inline const ::onebot::GetGroupListReq& Frame::get_group_list_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_list_req)
  return _internal_get_group_list_req();
}
inline ::onebot::GetGroupListReq* Frame::unsafe_arena_release_get_group_list_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_list_req)
  if (_internal_has_get_group_list_req()) {
    clear_has_data();
    ::onebot::GetGroupListReq* temp = data_.get_group_list_req_;
    data_.get_group_list_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_list_req(::onebot::GetGroupListReq* get_group_list_req) {
  clear_data();
  if (get_group_list_req) {
    set_has_get_group_list_req();
    data_.get_group_list_req_ = get_group_list_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_list_req)
}
inline ::onebot::GetGroupListReq* Frame::_internal_mutable_get_group_list_req() {
  if (!_internal_has_get_group_list_req()) {
    clear_data();
    set_has_get_group_list_req();
    data_.get_group_list_req_ = CreateMaybeMessage< ::onebot::GetGroupListReq >(GetArena());
  }
  return data_.get_group_list_req_;
}
inline ::onebot::GetGroupListReq* Frame::mutable_get_group_list_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_list_req)
  return _internal_mutable_get_group_list_req();
}

// .onebot.GetGroupMemberInfoReq get_group_member_info_req = 225;
inline bool Frame::_internal_has_get_group_member_info_req() const {
  return data_case() == kGetGroupMemberInfoReq;
}
inline bool Frame::has_get_group_member_info_req() const {
  return _internal_has_get_group_member_info_req();
}
inline void Frame::set_has_get_group_member_info_req() {
  _oneof_case_[0] = kGetGroupMemberInfoReq;
}
inline ::onebot::GetGroupMemberInfoReq* Frame::release_get_group_member_info_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_member_info_req)
  if (_internal_has_get_group_member_info_req()) {
    clear_has_data();
      ::onebot::GetGroupMemberInfoReq* temp = data_.get_group_member_info_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_member_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupMemberInfoReq& Frame::_internal_get_group_member_info_req() const {
  return _internal_has_get_group_member_info_req()
      ? *data_.get_group_member_info_req_
      : reinterpret_cast< ::onebot::GetGroupMemberInfoReq&>(::onebot::_GetGroupMemberInfoReq_default_instance_);
}
inline const ::onebot::GetGroupMemberInfoReq& Frame::get_group_member_info_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_member_info_req)
  return _internal_get_group_member_info_req();
}
inline ::onebot::GetGroupMemberInfoReq* Frame::unsafe_arena_release_get_group_member_info_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_member_info_req)
  if (_internal_has_get_group_member_info_req()) {
    clear_has_data();
    ::onebot::GetGroupMemberInfoReq* temp = data_.get_group_member_info_req_;
    data_.get_group_member_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_member_info_req(::onebot::GetGroupMemberInfoReq* get_group_member_info_req) {
  clear_data();
  if (get_group_member_info_req) {
    set_has_get_group_member_info_req();
    data_.get_group_member_info_req_ = get_group_member_info_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_member_info_req)
}
inline ::onebot::GetGroupMemberInfoReq* Frame::_internal_mutable_get_group_member_info_req() {
  if (!_internal_has_get_group_member_info_req()) {
    clear_data();
    set_has_get_group_member_info_req();
    data_.get_group_member_info_req_ = CreateMaybeMessage< ::onebot::GetGroupMemberInfoReq >(GetArena());
  }
  return data_.get_group_member_info_req_;
}
inline ::onebot::GetGroupMemberInfoReq* Frame::mutable_get_group_member_info_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_member_info_req)
  return _internal_mutable_get_group_member_info_req();
}

// .onebot.GetGroupMemberListReq get_group_member_list_req = 226;
inline bool Frame::_internal_has_get_group_member_list_req() const {
  return data_case() == kGetGroupMemberListReq;
}
inline bool Frame::has_get_group_member_list_req() const {
  return _internal_has_get_group_member_list_req();
}
inline void Frame::set_has_get_group_member_list_req() {
  _oneof_case_[0] = kGetGroupMemberListReq;
}
inline ::onebot::GetGroupMemberListReq* Frame::release_get_group_member_list_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_member_list_req)
  if (_internal_has_get_group_member_list_req()) {
    clear_has_data();
      ::onebot::GetGroupMemberListReq* temp = data_.get_group_member_list_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_member_list_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupMemberListReq& Frame::_internal_get_group_member_list_req() const {
  return _internal_has_get_group_member_list_req()
      ? *data_.get_group_member_list_req_
      : reinterpret_cast< ::onebot::GetGroupMemberListReq&>(::onebot::_GetGroupMemberListReq_default_instance_);
}
inline const ::onebot::GetGroupMemberListReq& Frame::get_group_member_list_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_member_list_req)
  return _internal_get_group_member_list_req();
}
inline ::onebot::GetGroupMemberListReq* Frame::unsafe_arena_release_get_group_member_list_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_member_list_req)
  if (_internal_has_get_group_member_list_req()) {
    clear_has_data();
    ::onebot::GetGroupMemberListReq* temp = data_.get_group_member_list_req_;
    data_.get_group_member_list_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_member_list_req(::onebot::GetGroupMemberListReq* get_group_member_list_req) {
  clear_data();
  if (get_group_member_list_req) {
    set_has_get_group_member_list_req();
    data_.get_group_member_list_req_ = get_group_member_list_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_member_list_req)
}
inline ::onebot::GetGroupMemberListReq* Frame::_internal_mutable_get_group_member_list_req() {
  if (!_internal_has_get_group_member_list_req()) {
    clear_data();
    set_has_get_group_member_list_req();
    data_.get_group_member_list_req_ = CreateMaybeMessage< ::onebot::GetGroupMemberListReq >(GetArena());
  }
  return data_.get_group_member_list_req_;
}
inline ::onebot::GetGroupMemberListReq* Frame::mutable_get_group_member_list_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_member_list_req)
  return _internal_mutable_get_group_member_list_req();
}

// .onebot.GetGroupHonorInfoReq get_group_honor_info_req = 227;
inline bool Frame::_internal_has_get_group_honor_info_req() const {
  return data_case() == kGetGroupHonorInfoReq;
}
inline bool Frame::has_get_group_honor_info_req() const {
  return _internal_has_get_group_honor_info_req();
}
inline void Frame::set_has_get_group_honor_info_req() {
  _oneof_case_[0] = kGetGroupHonorInfoReq;
}
inline ::onebot::GetGroupHonorInfoReq* Frame::release_get_group_honor_info_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_honor_info_req)
  if (_internal_has_get_group_honor_info_req()) {
    clear_has_data();
      ::onebot::GetGroupHonorInfoReq* temp = data_.get_group_honor_info_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_honor_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupHonorInfoReq& Frame::_internal_get_group_honor_info_req() const {
  return _internal_has_get_group_honor_info_req()
      ? *data_.get_group_honor_info_req_
      : reinterpret_cast< ::onebot::GetGroupHonorInfoReq&>(::onebot::_GetGroupHonorInfoReq_default_instance_);
}
inline const ::onebot::GetGroupHonorInfoReq& Frame::get_group_honor_info_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_honor_info_req)
  return _internal_get_group_honor_info_req();
}
inline ::onebot::GetGroupHonorInfoReq* Frame::unsafe_arena_release_get_group_honor_info_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_honor_info_req)
  if (_internal_has_get_group_honor_info_req()) {
    clear_has_data();
    ::onebot::GetGroupHonorInfoReq* temp = data_.get_group_honor_info_req_;
    data_.get_group_honor_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_honor_info_req(::onebot::GetGroupHonorInfoReq* get_group_honor_info_req) {
  clear_data();
  if (get_group_honor_info_req) {
    set_has_get_group_honor_info_req();
    data_.get_group_honor_info_req_ = get_group_honor_info_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_honor_info_req)
}
inline ::onebot::GetGroupHonorInfoReq* Frame::_internal_mutable_get_group_honor_info_req() {
  if (!_internal_has_get_group_honor_info_req()) {
    clear_data();
    set_has_get_group_honor_info_req();
    data_.get_group_honor_info_req_ = CreateMaybeMessage< ::onebot::GetGroupHonorInfoReq >(GetArena());
  }
  return data_.get_group_honor_info_req_;
}
inline ::onebot::GetGroupHonorInfoReq* Frame::mutable_get_group_honor_info_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_honor_info_req)
  return _internal_mutable_get_group_honor_info_req();
}

// .onebot.GetCookiesReq get_cookies_req = 228;
inline bool Frame::_internal_has_get_cookies_req() const {
  return data_case() == kGetCookiesReq;
}
inline bool Frame::has_get_cookies_req() const {
  return _internal_has_get_cookies_req();
}
inline void Frame::set_has_get_cookies_req() {
  _oneof_case_[0] = kGetCookiesReq;
}
inline ::onebot::GetCookiesReq* Frame::release_get_cookies_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_cookies_req)
  if (_internal_has_get_cookies_req()) {
    clear_has_data();
      ::onebot::GetCookiesReq* temp = data_.get_cookies_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_cookies_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetCookiesReq& Frame::_internal_get_cookies_req() const {
  return _internal_has_get_cookies_req()
      ? *data_.get_cookies_req_
      : reinterpret_cast< ::onebot::GetCookiesReq&>(::onebot::_GetCookiesReq_default_instance_);
}
inline const ::onebot::GetCookiesReq& Frame::get_cookies_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_cookies_req)
  return _internal_get_cookies_req();
}
inline ::onebot::GetCookiesReq* Frame::unsafe_arena_release_get_cookies_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_cookies_req)
  if (_internal_has_get_cookies_req()) {
    clear_has_data();
    ::onebot::GetCookiesReq* temp = data_.get_cookies_req_;
    data_.get_cookies_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_cookies_req(::onebot::GetCookiesReq* get_cookies_req) {
  clear_data();
  if (get_cookies_req) {
    set_has_get_cookies_req();
    data_.get_cookies_req_ = get_cookies_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_cookies_req)
}
inline ::onebot::GetCookiesReq* Frame::_internal_mutable_get_cookies_req() {
  if (!_internal_has_get_cookies_req()) {
    clear_data();
    set_has_get_cookies_req();
    data_.get_cookies_req_ = CreateMaybeMessage< ::onebot::GetCookiesReq >(GetArena());
  }
  return data_.get_cookies_req_;
}
inline ::onebot::GetCookiesReq* Frame::mutable_get_cookies_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_cookies_req)
  return _internal_mutable_get_cookies_req();
}

// .onebot.GetCsrfTokenReq get_csrf_token_req = 229;
inline bool Frame::_internal_has_get_csrf_token_req() const {
  return data_case() == kGetCsrfTokenReq;
}
inline bool Frame::has_get_csrf_token_req() const {
  return _internal_has_get_csrf_token_req();
}
inline void Frame::set_has_get_csrf_token_req() {
  _oneof_case_[0] = kGetCsrfTokenReq;
}
inline ::onebot::GetCsrfTokenReq* Frame::release_get_csrf_token_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_csrf_token_req)
  if (_internal_has_get_csrf_token_req()) {
    clear_has_data();
      ::onebot::GetCsrfTokenReq* temp = data_.get_csrf_token_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_csrf_token_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetCsrfTokenReq& Frame::_internal_get_csrf_token_req() const {
  return _internal_has_get_csrf_token_req()
      ? *data_.get_csrf_token_req_
      : reinterpret_cast< ::onebot::GetCsrfTokenReq&>(::onebot::_GetCsrfTokenReq_default_instance_);
}
inline const ::onebot::GetCsrfTokenReq& Frame::get_csrf_token_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_csrf_token_req)
  return _internal_get_csrf_token_req();
}
inline ::onebot::GetCsrfTokenReq* Frame::unsafe_arena_release_get_csrf_token_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_csrf_token_req)
  if (_internal_has_get_csrf_token_req()) {
    clear_has_data();
    ::onebot::GetCsrfTokenReq* temp = data_.get_csrf_token_req_;
    data_.get_csrf_token_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_csrf_token_req(::onebot::GetCsrfTokenReq* get_csrf_token_req) {
  clear_data();
  if (get_csrf_token_req) {
    set_has_get_csrf_token_req();
    data_.get_csrf_token_req_ = get_csrf_token_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_csrf_token_req)
}
inline ::onebot::GetCsrfTokenReq* Frame::_internal_mutable_get_csrf_token_req() {
  if (!_internal_has_get_csrf_token_req()) {
    clear_data();
    set_has_get_csrf_token_req();
    data_.get_csrf_token_req_ = CreateMaybeMessage< ::onebot::GetCsrfTokenReq >(GetArena());
  }
  return data_.get_csrf_token_req_;
}
inline ::onebot::GetCsrfTokenReq* Frame::mutable_get_csrf_token_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_csrf_token_req)
  return _internal_mutable_get_csrf_token_req();
}

// .onebot.GetCredentialsReq get_credentials_req = 230;
inline bool Frame::_internal_has_get_credentials_req() const {
  return data_case() == kGetCredentialsReq;
}
inline bool Frame::has_get_credentials_req() const {
  return _internal_has_get_credentials_req();
}
inline void Frame::set_has_get_credentials_req() {
  _oneof_case_[0] = kGetCredentialsReq;
}
inline ::onebot::GetCredentialsReq* Frame::release_get_credentials_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_credentials_req)
  if (_internal_has_get_credentials_req()) {
    clear_has_data();
      ::onebot::GetCredentialsReq* temp = data_.get_credentials_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_credentials_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetCredentialsReq& Frame::_internal_get_credentials_req() const {
  return _internal_has_get_credentials_req()
      ? *data_.get_credentials_req_
      : reinterpret_cast< ::onebot::GetCredentialsReq&>(::onebot::_GetCredentialsReq_default_instance_);
}
inline const ::onebot::GetCredentialsReq& Frame::get_credentials_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_credentials_req)
  return _internal_get_credentials_req();
}
inline ::onebot::GetCredentialsReq* Frame::unsafe_arena_release_get_credentials_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_credentials_req)
  if (_internal_has_get_credentials_req()) {
    clear_has_data();
    ::onebot::GetCredentialsReq* temp = data_.get_credentials_req_;
    data_.get_credentials_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_credentials_req(::onebot::GetCredentialsReq* get_credentials_req) {
  clear_data();
  if (get_credentials_req) {
    set_has_get_credentials_req();
    data_.get_credentials_req_ = get_credentials_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_credentials_req)
}
inline ::onebot::GetCredentialsReq* Frame::_internal_mutable_get_credentials_req() {
  if (!_internal_has_get_credentials_req()) {
    clear_data();
    set_has_get_credentials_req();
    data_.get_credentials_req_ = CreateMaybeMessage< ::onebot::GetCredentialsReq >(GetArena());
  }
  return data_.get_credentials_req_;
}
inline ::onebot::GetCredentialsReq* Frame::mutable_get_credentials_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_credentials_req)
  return _internal_mutable_get_credentials_req();
}

// .onebot.GetRecordReq get_record_req = 231;
inline bool Frame::_internal_has_get_record_req() const {
  return data_case() == kGetRecordReq;
}
inline bool Frame::has_get_record_req() const {
  return _internal_has_get_record_req();
}
inline void Frame::set_has_get_record_req() {
  _oneof_case_[0] = kGetRecordReq;
}
inline ::onebot::GetRecordReq* Frame::release_get_record_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_record_req)
  if (_internal_has_get_record_req()) {
    clear_has_data();
      ::onebot::GetRecordReq* temp = data_.get_record_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_record_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetRecordReq& Frame::_internal_get_record_req() const {
  return _internal_has_get_record_req()
      ? *data_.get_record_req_
      : reinterpret_cast< ::onebot::GetRecordReq&>(::onebot::_GetRecordReq_default_instance_);
}
inline const ::onebot::GetRecordReq& Frame::get_record_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_record_req)
  return _internal_get_record_req();
}
inline ::onebot::GetRecordReq* Frame::unsafe_arena_release_get_record_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_record_req)
  if (_internal_has_get_record_req()) {
    clear_has_data();
    ::onebot::GetRecordReq* temp = data_.get_record_req_;
    data_.get_record_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_record_req(::onebot::GetRecordReq* get_record_req) {
  clear_data();
  if (get_record_req) {
    set_has_get_record_req();
    data_.get_record_req_ = get_record_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_record_req)
}
inline ::onebot::GetRecordReq* Frame::_internal_mutable_get_record_req() {
  if (!_internal_has_get_record_req()) {
    clear_data();
    set_has_get_record_req();
    data_.get_record_req_ = CreateMaybeMessage< ::onebot::GetRecordReq >(GetArena());
  }
  return data_.get_record_req_;
}
inline ::onebot::GetRecordReq* Frame::mutable_get_record_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_record_req)
  return _internal_mutable_get_record_req();
}

// .onebot.GetImageReq get_image_req = 232;
inline bool Frame::_internal_has_get_image_req() const {
  return data_case() == kGetImageReq;
}
inline bool Frame::has_get_image_req() const {
  return _internal_has_get_image_req();
}
inline void Frame::set_has_get_image_req() {
  _oneof_case_[0] = kGetImageReq;
}
inline ::onebot::GetImageReq* Frame::release_get_image_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_image_req)
  if (_internal_has_get_image_req()) {
    clear_has_data();
      ::onebot::GetImageReq* temp = data_.get_image_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_image_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetImageReq& Frame::_internal_get_image_req() const {
  return _internal_has_get_image_req()
      ? *data_.get_image_req_
      : reinterpret_cast< ::onebot::GetImageReq&>(::onebot::_GetImageReq_default_instance_);
}
inline const ::onebot::GetImageReq& Frame::get_image_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_image_req)
  return _internal_get_image_req();
}
inline ::onebot::GetImageReq* Frame::unsafe_arena_release_get_image_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_image_req)
  if (_internal_has_get_image_req()) {
    clear_has_data();
    ::onebot::GetImageReq* temp = data_.get_image_req_;
    data_.get_image_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_image_req(::onebot::GetImageReq* get_image_req) {
  clear_data();
  if (get_image_req) {
    set_has_get_image_req();
    data_.get_image_req_ = get_image_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_image_req)
}
inline ::onebot::GetImageReq* Frame::_internal_mutable_get_image_req() {
  if (!_internal_has_get_image_req()) {
    clear_data();
    set_has_get_image_req();
    data_.get_image_req_ = CreateMaybeMessage< ::onebot::GetImageReq >(GetArena());
  }
  return data_.get_image_req_;
}
inline ::onebot::GetImageReq* Frame::mutable_get_image_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_image_req)
  return _internal_mutable_get_image_req();
}

// .onebot.CanSendImageReq can_send_image_req = 233;
inline bool Frame::_internal_has_can_send_image_req() const {
  return data_case() == kCanSendImageReq;
}
inline bool Frame::has_can_send_image_req() const {
  return _internal_has_can_send_image_req();
}
inline void Frame::set_has_can_send_image_req() {
  _oneof_case_[0] = kCanSendImageReq;
}
inline ::onebot::CanSendImageReq* Frame::release_can_send_image_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.can_send_image_req)
  if (_internal_has_can_send_image_req()) {
    clear_has_data();
      ::onebot::CanSendImageReq* temp = data_.can_send_image_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.can_send_image_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::CanSendImageReq& Frame::_internal_can_send_image_req() const {
  return _internal_has_can_send_image_req()
      ? *data_.can_send_image_req_
      : reinterpret_cast< ::onebot::CanSendImageReq&>(::onebot::_CanSendImageReq_default_instance_);
}
inline const ::onebot::CanSendImageReq& Frame::can_send_image_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.can_send_image_req)
  return _internal_can_send_image_req();
}
inline ::onebot::CanSendImageReq* Frame::unsafe_arena_release_can_send_image_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.can_send_image_req)
  if (_internal_has_can_send_image_req()) {
    clear_has_data();
    ::onebot::CanSendImageReq* temp = data_.can_send_image_req_;
    data_.can_send_image_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_can_send_image_req(::onebot::CanSendImageReq* can_send_image_req) {
  clear_data();
  if (can_send_image_req) {
    set_has_can_send_image_req();
    data_.can_send_image_req_ = can_send_image_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.can_send_image_req)
}
inline ::onebot::CanSendImageReq* Frame::_internal_mutable_can_send_image_req() {
  if (!_internal_has_can_send_image_req()) {
    clear_data();
    set_has_can_send_image_req();
    data_.can_send_image_req_ = CreateMaybeMessage< ::onebot::CanSendImageReq >(GetArena());
  }
  return data_.can_send_image_req_;
}
inline ::onebot::CanSendImageReq* Frame::mutable_can_send_image_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.can_send_image_req)
  return _internal_mutable_can_send_image_req();
}

// .onebot.CanSendRecordReq can_send_record_req = 234;
inline bool Frame::_internal_has_can_send_record_req() const {
  return data_case() == kCanSendRecordReq;
}
inline bool Frame::has_can_send_record_req() const {
  return _internal_has_can_send_record_req();
}
inline void Frame::set_has_can_send_record_req() {
  _oneof_case_[0] = kCanSendRecordReq;
}
inline ::onebot::CanSendRecordReq* Frame::release_can_send_record_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.can_send_record_req)
  if (_internal_has_can_send_record_req()) {
    clear_has_data();
      ::onebot::CanSendRecordReq* temp = data_.can_send_record_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.can_send_record_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::CanSendRecordReq& Frame::_internal_can_send_record_req() const {
  return _internal_has_can_send_record_req()
      ? *data_.can_send_record_req_
      : reinterpret_cast< ::onebot::CanSendRecordReq&>(::onebot::_CanSendRecordReq_default_instance_);
}
inline const ::onebot::CanSendRecordReq& Frame::can_send_record_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.can_send_record_req)
  return _internal_can_send_record_req();
}
inline ::onebot::CanSendRecordReq* Frame::unsafe_arena_release_can_send_record_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.can_send_record_req)
  if (_internal_has_can_send_record_req()) {
    clear_has_data();
    ::onebot::CanSendRecordReq* temp = data_.can_send_record_req_;
    data_.can_send_record_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_can_send_record_req(::onebot::CanSendRecordReq* can_send_record_req) {
  clear_data();
  if (can_send_record_req) {
    set_has_can_send_record_req();
    data_.can_send_record_req_ = can_send_record_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.can_send_record_req)
}
inline ::onebot::CanSendRecordReq* Frame::_internal_mutable_can_send_record_req() {
  if (!_internal_has_can_send_record_req()) {
    clear_data();
    set_has_can_send_record_req();
    data_.can_send_record_req_ = CreateMaybeMessage< ::onebot::CanSendRecordReq >(GetArena());
  }
  return data_.can_send_record_req_;
}
inline ::onebot::CanSendRecordReq* Frame::mutable_can_send_record_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.can_send_record_req)
  return _internal_mutable_can_send_record_req();
}

// .onebot.GetStatusReq get_status_req = 235;
inline bool Frame::_internal_has_get_status_req() const {
  return data_case() == kGetStatusReq;
}
inline bool Frame::has_get_status_req() const {
  return _internal_has_get_status_req();
}
inline void Frame::set_has_get_status_req() {
  _oneof_case_[0] = kGetStatusReq;
}
inline ::onebot::GetStatusReq* Frame::release_get_status_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_status_req)
  if (_internal_has_get_status_req()) {
    clear_has_data();
      ::onebot::GetStatusReq* temp = data_.get_status_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_status_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetStatusReq& Frame::_internal_get_status_req() const {
  return _internal_has_get_status_req()
      ? *data_.get_status_req_
      : reinterpret_cast< ::onebot::GetStatusReq&>(::onebot::_GetStatusReq_default_instance_);
}
inline const ::onebot::GetStatusReq& Frame::get_status_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_status_req)
  return _internal_get_status_req();
}
inline ::onebot::GetStatusReq* Frame::unsafe_arena_release_get_status_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_status_req)
  if (_internal_has_get_status_req()) {
    clear_has_data();
    ::onebot::GetStatusReq* temp = data_.get_status_req_;
    data_.get_status_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_status_req(::onebot::GetStatusReq* get_status_req) {
  clear_data();
  if (get_status_req) {
    set_has_get_status_req();
    data_.get_status_req_ = get_status_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_status_req)
}
inline ::onebot::GetStatusReq* Frame::_internal_mutable_get_status_req() {
  if (!_internal_has_get_status_req()) {
    clear_data();
    set_has_get_status_req();
    data_.get_status_req_ = CreateMaybeMessage< ::onebot::GetStatusReq >(GetArena());
  }
  return data_.get_status_req_;
}
inline ::onebot::GetStatusReq* Frame::mutable_get_status_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_status_req)
  return _internal_mutable_get_status_req();
}

// .onebot.GetVersionInfoReq get_version_info_req = 236;
inline bool Frame::_internal_has_get_version_info_req() const {
  return data_case() == kGetVersionInfoReq;
}
inline bool Frame::has_get_version_info_req() const {
  return _internal_has_get_version_info_req();
}
inline void Frame::set_has_get_version_info_req() {
  _oneof_case_[0] = kGetVersionInfoReq;
}
inline ::onebot::GetVersionInfoReq* Frame::release_get_version_info_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_version_info_req)
  if (_internal_has_get_version_info_req()) {
    clear_has_data();
      ::onebot::GetVersionInfoReq* temp = data_.get_version_info_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_version_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetVersionInfoReq& Frame::_internal_get_version_info_req() const {
  return _internal_has_get_version_info_req()
      ? *data_.get_version_info_req_
      : reinterpret_cast< ::onebot::GetVersionInfoReq&>(::onebot::_GetVersionInfoReq_default_instance_);
}
inline const ::onebot::GetVersionInfoReq& Frame::get_version_info_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_version_info_req)
  return _internal_get_version_info_req();
}
inline ::onebot::GetVersionInfoReq* Frame::unsafe_arena_release_get_version_info_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_version_info_req)
  if (_internal_has_get_version_info_req()) {
    clear_has_data();
    ::onebot::GetVersionInfoReq* temp = data_.get_version_info_req_;
    data_.get_version_info_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_version_info_req(::onebot::GetVersionInfoReq* get_version_info_req) {
  clear_data();
  if (get_version_info_req) {
    set_has_get_version_info_req();
    data_.get_version_info_req_ = get_version_info_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_version_info_req)
}
inline ::onebot::GetVersionInfoReq* Frame::_internal_mutable_get_version_info_req() {
  if (!_internal_has_get_version_info_req()) {
    clear_data();
    set_has_get_version_info_req();
    data_.get_version_info_req_ = CreateMaybeMessage< ::onebot::GetVersionInfoReq >(GetArena());
  }
  return data_.get_version_info_req_;
}
inline ::onebot::GetVersionInfoReq* Frame::mutable_get_version_info_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_version_info_req)
  return _internal_mutable_get_version_info_req();
}

// .onebot.SetRestartReq set_restart_req = 237;
inline bool Frame::_internal_has_set_restart_req() const {
  return data_case() == kSetRestartReq;
}
inline bool Frame::has_set_restart_req() const {
  return _internal_has_set_restart_req();
}
inline void Frame::set_has_set_restart_req() {
  _oneof_case_[0] = kSetRestartReq;
}
inline ::onebot::SetRestartReq* Frame::release_set_restart_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_restart_req)
  if (_internal_has_set_restart_req()) {
    clear_has_data();
      ::onebot::SetRestartReq* temp = data_.set_restart_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_restart_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetRestartReq& Frame::_internal_set_restart_req() const {
  return _internal_has_set_restart_req()
      ? *data_.set_restart_req_
      : reinterpret_cast< ::onebot::SetRestartReq&>(::onebot::_SetRestartReq_default_instance_);
}
inline const ::onebot::SetRestartReq& Frame::set_restart_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_restart_req)
  return _internal_set_restart_req();
}
inline ::onebot::SetRestartReq* Frame::unsafe_arena_release_set_restart_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_restart_req)
  if (_internal_has_set_restart_req()) {
    clear_has_data();
    ::onebot::SetRestartReq* temp = data_.set_restart_req_;
    data_.set_restart_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_restart_req(::onebot::SetRestartReq* set_restart_req) {
  clear_data();
  if (set_restart_req) {
    set_has_set_restart_req();
    data_.set_restart_req_ = set_restart_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_restart_req)
}
inline ::onebot::SetRestartReq* Frame::_internal_mutable_set_restart_req() {
  if (!_internal_has_set_restart_req()) {
    clear_data();
    set_has_set_restart_req();
    data_.set_restart_req_ = CreateMaybeMessage< ::onebot::SetRestartReq >(GetArena());
  }
  return data_.set_restart_req_;
}
inline ::onebot::SetRestartReq* Frame::mutable_set_restart_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_restart_req)
  return _internal_mutable_set_restart_req();
}

// .onebot.CleanCacheReq clean_cache_req = 238;
inline bool Frame::_internal_has_clean_cache_req() const {
  return data_case() == kCleanCacheReq;
}
inline bool Frame::has_clean_cache_req() const {
  return _internal_has_clean_cache_req();
}
inline void Frame::set_has_clean_cache_req() {
  _oneof_case_[0] = kCleanCacheReq;
}
inline ::onebot::CleanCacheReq* Frame::release_clean_cache_req() {
  // @@protoc_insertion_point(field_release:onebot.Frame.clean_cache_req)
  if (_internal_has_clean_cache_req()) {
    clear_has_data();
      ::onebot::CleanCacheReq* temp = data_.clean_cache_req_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.clean_cache_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::CleanCacheReq& Frame::_internal_clean_cache_req() const {
  return _internal_has_clean_cache_req()
      ? *data_.clean_cache_req_
      : reinterpret_cast< ::onebot::CleanCacheReq&>(::onebot::_CleanCacheReq_default_instance_);
}
inline const ::onebot::CleanCacheReq& Frame::clean_cache_req() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.clean_cache_req)
  return _internal_clean_cache_req();
}
inline ::onebot::CleanCacheReq* Frame::unsafe_arena_release_clean_cache_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.clean_cache_req)
  if (_internal_has_clean_cache_req()) {
    clear_has_data();
    ::onebot::CleanCacheReq* temp = data_.clean_cache_req_;
    data_.clean_cache_req_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_clean_cache_req(::onebot::CleanCacheReq* clean_cache_req) {
  clear_data();
  if (clean_cache_req) {
    set_has_clean_cache_req();
    data_.clean_cache_req_ = clean_cache_req;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.clean_cache_req)
}
inline ::onebot::CleanCacheReq* Frame::_internal_mutable_clean_cache_req() {
  if (!_internal_has_clean_cache_req()) {
    clear_data();
    set_has_clean_cache_req();
    data_.clean_cache_req_ = CreateMaybeMessage< ::onebot::CleanCacheReq >(GetArena());
  }
  return data_.clean_cache_req_;
}
inline ::onebot::CleanCacheReq* Frame::mutable_clean_cache_req() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.clean_cache_req)
  return _internal_mutable_clean_cache_req();
}

// .onebot.SendPrivateMsgResp send_private_msg_resp = 301;
inline bool Frame::_internal_has_send_private_msg_resp() const {
  return data_case() == kSendPrivateMsgResp;
}
inline bool Frame::has_send_private_msg_resp() const {
  return _internal_has_send_private_msg_resp();
}
inline void Frame::set_has_send_private_msg_resp() {
  _oneof_case_[0] = kSendPrivateMsgResp;
}
inline ::onebot::SendPrivateMsgResp* Frame::release_send_private_msg_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.send_private_msg_resp)
  if (_internal_has_send_private_msg_resp()) {
    clear_has_data();
      ::onebot::SendPrivateMsgResp* temp = data_.send_private_msg_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.send_private_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SendPrivateMsgResp& Frame::_internal_send_private_msg_resp() const {
  return _internal_has_send_private_msg_resp()
      ? *data_.send_private_msg_resp_
      : reinterpret_cast< ::onebot::SendPrivateMsgResp&>(::onebot::_SendPrivateMsgResp_default_instance_);
}
inline const ::onebot::SendPrivateMsgResp& Frame::send_private_msg_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.send_private_msg_resp)
  return _internal_send_private_msg_resp();
}
inline ::onebot::SendPrivateMsgResp* Frame::unsafe_arena_release_send_private_msg_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.send_private_msg_resp)
  if (_internal_has_send_private_msg_resp()) {
    clear_has_data();
    ::onebot::SendPrivateMsgResp* temp = data_.send_private_msg_resp_;
    data_.send_private_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_send_private_msg_resp(::onebot::SendPrivateMsgResp* send_private_msg_resp) {
  clear_data();
  if (send_private_msg_resp) {
    set_has_send_private_msg_resp();
    data_.send_private_msg_resp_ = send_private_msg_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.send_private_msg_resp)
}
inline ::onebot::SendPrivateMsgResp* Frame::_internal_mutable_send_private_msg_resp() {
  if (!_internal_has_send_private_msg_resp()) {
    clear_data();
    set_has_send_private_msg_resp();
    data_.send_private_msg_resp_ = CreateMaybeMessage< ::onebot::SendPrivateMsgResp >(GetArena());
  }
  return data_.send_private_msg_resp_;
}
inline ::onebot::SendPrivateMsgResp* Frame::mutable_send_private_msg_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.send_private_msg_resp)
  return _internal_mutable_send_private_msg_resp();
}

// .onebot.SendGroupMsgResp send_group_msg_resp = 302;
inline bool Frame::_internal_has_send_group_msg_resp() const {
  return data_case() == kSendGroupMsgResp;
}
inline bool Frame::has_send_group_msg_resp() const {
  return _internal_has_send_group_msg_resp();
}
inline void Frame::set_has_send_group_msg_resp() {
  _oneof_case_[0] = kSendGroupMsgResp;
}
inline ::onebot::SendGroupMsgResp* Frame::release_send_group_msg_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.send_group_msg_resp)
  if (_internal_has_send_group_msg_resp()) {
    clear_has_data();
      ::onebot::SendGroupMsgResp* temp = data_.send_group_msg_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.send_group_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SendGroupMsgResp& Frame::_internal_send_group_msg_resp() const {
  return _internal_has_send_group_msg_resp()
      ? *data_.send_group_msg_resp_
      : reinterpret_cast< ::onebot::SendGroupMsgResp&>(::onebot::_SendGroupMsgResp_default_instance_);
}
inline const ::onebot::SendGroupMsgResp& Frame::send_group_msg_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.send_group_msg_resp)
  return _internal_send_group_msg_resp();
}
inline ::onebot::SendGroupMsgResp* Frame::unsafe_arena_release_send_group_msg_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.send_group_msg_resp)
  if (_internal_has_send_group_msg_resp()) {
    clear_has_data();
    ::onebot::SendGroupMsgResp* temp = data_.send_group_msg_resp_;
    data_.send_group_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_send_group_msg_resp(::onebot::SendGroupMsgResp* send_group_msg_resp) {
  clear_data();
  if (send_group_msg_resp) {
    set_has_send_group_msg_resp();
    data_.send_group_msg_resp_ = send_group_msg_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.send_group_msg_resp)
}
inline ::onebot::SendGroupMsgResp* Frame::_internal_mutable_send_group_msg_resp() {
  if (!_internal_has_send_group_msg_resp()) {
    clear_data();
    set_has_send_group_msg_resp();
    data_.send_group_msg_resp_ = CreateMaybeMessage< ::onebot::SendGroupMsgResp >(GetArena());
  }
  return data_.send_group_msg_resp_;
}
inline ::onebot::SendGroupMsgResp* Frame::mutable_send_group_msg_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.send_group_msg_resp)
  return _internal_mutable_send_group_msg_resp();
}

// .onebot.SendMsgResp send_msg_resp = 303;
inline bool Frame::_internal_has_send_msg_resp() const {
  return data_case() == kSendMsgResp;
}
inline bool Frame::has_send_msg_resp() const {
  return _internal_has_send_msg_resp();
}
inline void Frame::set_has_send_msg_resp() {
  _oneof_case_[0] = kSendMsgResp;
}
inline ::onebot::SendMsgResp* Frame::release_send_msg_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.send_msg_resp)
  if (_internal_has_send_msg_resp()) {
    clear_has_data();
      ::onebot::SendMsgResp* temp = data_.send_msg_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.send_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SendMsgResp& Frame::_internal_send_msg_resp() const {
  return _internal_has_send_msg_resp()
      ? *data_.send_msg_resp_
      : reinterpret_cast< ::onebot::SendMsgResp&>(::onebot::_SendMsgResp_default_instance_);
}
inline const ::onebot::SendMsgResp& Frame::send_msg_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.send_msg_resp)
  return _internal_send_msg_resp();
}
inline ::onebot::SendMsgResp* Frame::unsafe_arena_release_send_msg_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.send_msg_resp)
  if (_internal_has_send_msg_resp()) {
    clear_has_data();
    ::onebot::SendMsgResp* temp = data_.send_msg_resp_;
    data_.send_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_send_msg_resp(::onebot::SendMsgResp* send_msg_resp) {
  clear_data();
  if (send_msg_resp) {
    set_has_send_msg_resp();
    data_.send_msg_resp_ = send_msg_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.send_msg_resp)
}
inline ::onebot::SendMsgResp* Frame::_internal_mutable_send_msg_resp() {
  if (!_internal_has_send_msg_resp()) {
    clear_data();
    set_has_send_msg_resp();
    data_.send_msg_resp_ = CreateMaybeMessage< ::onebot::SendMsgResp >(GetArena());
  }
  return data_.send_msg_resp_;
}
inline ::onebot::SendMsgResp* Frame::mutable_send_msg_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.send_msg_resp)
  return _internal_mutable_send_msg_resp();
}

// .onebot.DeleteMsgResp delete_msg_resp = 304;
inline bool Frame::_internal_has_delete_msg_resp() const {
  return data_case() == kDeleteMsgResp;
}
inline bool Frame::has_delete_msg_resp() const {
  return _internal_has_delete_msg_resp();
}
inline void Frame::set_has_delete_msg_resp() {
  _oneof_case_[0] = kDeleteMsgResp;
}
inline ::onebot::DeleteMsgResp* Frame::release_delete_msg_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.delete_msg_resp)
  if (_internal_has_delete_msg_resp()) {
    clear_has_data();
      ::onebot::DeleteMsgResp* temp = data_.delete_msg_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.delete_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::DeleteMsgResp& Frame::_internal_delete_msg_resp() const {
  return _internal_has_delete_msg_resp()
      ? *data_.delete_msg_resp_
      : reinterpret_cast< ::onebot::DeleteMsgResp&>(::onebot::_DeleteMsgResp_default_instance_);
}
inline const ::onebot::DeleteMsgResp& Frame::delete_msg_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.delete_msg_resp)
  return _internal_delete_msg_resp();
}
inline ::onebot::DeleteMsgResp* Frame::unsafe_arena_release_delete_msg_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.delete_msg_resp)
  if (_internal_has_delete_msg_resp()) {
    clear_has_data();
    ::onebot::DeleteMsgResp* temp = data_.delete_msg_resp_;
    data_.delete_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_delete_msg_resp(::onebot::DeleteMsgResp* delete_msg_resp) {
  clear_data();
  if (delete_msg_resp) {
    set_has_delete_msg_resp();
    data_.delete_msg_resp_ = delete_msg_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.delete_msg_resp)
}
inline ::onebot::DeleteMsgResp* Frame::_internal_mutable_delete_msg_resp() {
  if (!_internal_has_delete_msg_resp()) {
    clear_data();
    set_has_delete_msg_resp();
    data_.delete_msg_resp_ = CreateMaybeMessage< ::onebot::DeleteMsgResp >(GetArena());
  }
  return data_.delete_msg_resp_;
}
inline ::onebot::DeleteMsgResp* Frame::mutable_delete_msg_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.delete_msg_resp)
  return _internal_mutable_delete_msg_resp();
}

// .onebot.GetMsgResp get_msg_resp = 305;
inline bool Frame::_internal_has_get_msg_resp() const {
  return data_case() == kGetMsgResp;
}
inline bool Frame::has_get_msg_resp() const {
  return _internal_has_get_msg_resp();
}
inline void Frame::set_has_get_msg_resp() {
  _oneof_case_[0] = kGetMsgResp;
}
inline ::onebot::GetMsgResp* Frame::release_get_msg_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_msg_resp)
  if (_internal_has_get_msg_resp()) {
    clear_has_data();
      ::onebot::GetMsgResp* temp = data_.get_msg_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetMsgResp& Frame::_internal_get_msg_resp() const {
  return _internal_has_get_msg_resp()
      ? *data_.get_msg_resp_
      : reinterpret_cast< ::onebot::GetMsgResp&>(::onebot::_GetMsgResp_default_instance_);
}
inline const ::onebot::GetMsgResp& Frame::get_msg_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_msg_resp)
  return _internal_get_msg_resp();
}
inline ::onebot::GetMsgResp* Frame::unsafe_arena_release_get_msg_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_msg_resp)
  if (_internal_has_get_msg_resp()) {
    clear_has_data();
    ::onebot::GetMsgResp* temp = data_.get_msg_resp_;
    data_.get_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_msg_resp(::onebot::GetMsgResp* get_msg_resp) {
  clear_data();
  if (get_msg_resp) {
    set_has_get_msg_resp();
    data_.get_msg_resp_ = get_msg_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_msg_resp)
}
inline ::onebot::GetMsgResp* Frame::_internal_mutable_get_msg_resp() {
  if (!_internal_has_get_msg_resp()) {
    clear_data();
    set_has_get_msg_resp();
    data_.get_msg_resp_ = CreateMaybeMessage< ::onebot::GetMsgResp >(GetArena());
  }
  return data_.get_msg_resp_;
}
inline ::onebot::GetMsgResp* Frame::mutable_get_msg_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_msg_resp)
  return _internal_mutable_get_msg_resp();
}

// .onebot.GetForwardMsgResp get_forward_msg_resp = 306;
inline bool Frame::_internal_has_get_forward_msg_resp() const {
  return data_case() == kGetForwardMsgResp;
}
inline bool Frame::has_get_forward_msg_resp() const {
  return _internal_has_get_forward_msg_resp();
}
inline void Frame::set_has_get_forward_msg_resp() {
  _oneof_case_[0] = kGetForwardMsgResp;
}
inline ::onebot::GetForwardMsgResp* Frame::release_get_forward_msg_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_forward_msg_resp)
  if (_internal_has_get_forward_msg_resp()) {
    clear_has_data();
      ::onebot::GetForwardMsgResp* temp = data_.get_forward_msg_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_forward_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetForwardMsgResp& Frame::_internal_get_forward_msg_resp() const {
  return _internal_has_get_forward_msg_resp()
      ? *data_.get_forward_msg_resp_
      : reinterpret_cast< ::onebot::GetForwardMsgResp&>(::onebot::_GetForwardMsgResp_default_instance_);
}
inline const ::onebot::GetForwardMsgResp& Frame::get_forward_msg_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_forward_msg_resp)
  return _internal_get_forward_msg_resp();
}
inline ::onebot::GetForwardMsgResp* Frame::unsafe_arena_release_get_forward_msg_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_forward_msg_resp)
  if (_internal_has_get_forward_msg_resp()) {
    clear_has_data();
    ::onebot::GetForwardMsgResp* temp = data_.get_forward_msg_resp_;
    data_.get_forward_msg_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_forward_msg_resp(::onebot::GetForwardMsgResp* get_forward_msg_resp) {
  clear_data();
  if (get_forward_msg_resp) {
    set_has_get_forward_msg_resp();
    data_.get_forward_msg_resp_ = get_forward_msg_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_forward_msg_resp)
}
inline ::onebot::GetForwardMsgResp* Frame::_internal_mutable_get_forward_msg_resp() {
  if (!_internal_has_get_forward_msg_resp()) {
    clear_data();
    set_has_get_forward_msg_resp();
    data_.get_forward_msg_resp_ = CreateMaybeMessage< ::onebot::GetForwardMsgResp >(GetArena());
  }
  return data_.get_forward_msg_resp_;
}
inline ::onebot::GetForwardMsgResp* Frame::mutable_get_forward_msg_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_forward_msg_resp)
  return _internal_mutable_get_forward_msg_resp();
}

// .onebot.SendLikeResp send_like_resp = 307;
inline bool Frame::_internal_has_send_like_resp() const {
  return data_case() == kSendLikeResp;
}
inline bool Frame::has_send_like_resp() const {
  return _internal_has_send_like_resp();
}
inline void Frame::set_has_send_like_resp() {
  _oneof_case_[0] = kSendLikeResp;
}
inline ::onebot::SendLikeResp* Frame::release_send_like_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.send_like_resp)
  if (_internal_has_send_like_resp()) {
    clear_has_data();
      ::onebot::SendLikeResp* temp = data_.send_like_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.send_like_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SendLikeResp& Frame::_internal_send_like_resp() const {
  return _internal_has_send_like_resp()
      ? *data_.send_like_resp_
      : reinterpret_cast< ::onebot::SendLikeResp&>(::onebot::_SendLikeResp_default_instance_);
}
inline const ::onebot::SendLikeResp& Frame::send_like_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.send_like_resp)
  return _internal_send_like_resp();
}
inline ::onebot::SendLikeResp* Frame::unsafe_arena_release_send_like_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.send_like_resp)
  if (_internal_has_send_like_resp()) {
    clear_has_data();
    ::onebot::SendLikeResp* temp = data_.send_like_resp_;
    data_.send_like_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_send_like_resp(::onebot::SendLikeResp* send_like_resp) {
  clear_data();
  if (send_like_resp) {
    set_has_send_like_resp();
    data_.send_like_resp_ = send_like_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.send_like_resp)
}
inline ::onebot::SendLikeResp* Frame::_internal_mutable_send_like_resp() {
  if (!_internal_has_send_like_resp()) {
    clear_data();
    set_has_send_like_resp();
    data_.send_like_resp_ = CreateMaybeMessage< ::onebot::SendLikeResp >(GetArena());
  }
  return data_.send_like_resp_;
}
inline ::onebot::SendLikeResp* Frame::mutable_send_like_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.send_like_resp)
  return _internal_mutable_send_like_resp();
}

// .onebot.SetGroupKickResp set_group_kick_resp = 308;
inline bool Frame::_internal_has_set_group_kick_resp() const {
  return data_case() == kSetGroupKickResp;
}
inline bool Frame::has_set_group_kick_resp() const {
  return _internal_has_set_group_kick_resp();
}
inline void Frame::set_has_set_group_kick_resp() {
  _oneof_case_[0] = kSetGroupKickResp;
}
inline ::onebot::SetGroupKickResp* Frame::release_set_group_kick_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_kick_resp)
  if (_internal_has_set_group_kick_resp()) {
    clear_has_data();
      ::onebot::SetGroupKickResp* temp = data_.set_group_kick_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_kick_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupKickResp& Frame::_internal_set_group_kick_resp() const {
  return _internal_has_set_group_kick_resp()
      ? *data_.set_group_kick_resp_
      : reinterpret_cast< ::onebot::SetGroupKickResp&>(::onebot::_SetGroupKickResp_default_instance_);
}
inline const ::onebot::SetGroupKickResp& Frame::set_group_kick_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_kick_resp)
  return _internal_set_group_kick_resp();
}
inline ::onebot::SetGroupKickResp* Frame::unsafe_arena_release_set_group_kick_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_kick_resp)
  if (_internal_has_set_group_kick_resp()) {
    clear_has_data();
    ::onebot::SetGroupKickResp* temp = data_.set_group_kick_resp_;
    data_.set_group_kick_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_kick_resp(::onebot::SetGroupKickResp* set_group_kick_resp) {
  clear_data();
  if (set_group_kick_resp) {
    set_has_set_group_kick_resp();
    data_.set_group_kick_resp_ = set_group_kick_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_kick_resp)
}
inline ::onebot::SetGroupKickResp* Frame::_internal_mutable_set_group_kick_resp() {
  if (!_internal_has_set_group_kick_resp()) {
    clear_data();
    set_has_set_group_kick_resp();
    data_.set_group_kick_resp_ = CreateMaybeMessage< ::onebot::SetGroupKickResp >(GetArena());
  }
  return data_.set_group_kick_resp_;
}
inline ::onebot::SetGroupKickResp* Frame::mutable_set_group_kick_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_kick_resp)
  return _internal_mutable_set_group_kick_resp();
}

// .onebot.SetGroupBanResp set_group_ban_resp = 309;
inline bool Frame::_internal_has_set_group_ban_resp() const {
  return data_case() == kSetGroupBanResp;
}
inline bool Frame::has_set_group_ban_resp() const {
  return _internal_has_set_group_ban_resp();
}
inline void Frame::set_has_set_group_ban_resp() {
  _oneof_case_[0] = kSetGroupBanResp;
}
inline ::onebot::SetGroupBanResp* Frame::release_set_group_ban_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_ban_resp)
  if (_internal_has_set_group_ban_resp()) {
    clear_has_data();
      ::onebot::SetGroupBanResp* temp = data_.set_group_ban_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_ban_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupBanResp& Frame::_internal_set_group_ban_resp() const {
  return _internal_has_set_group_ban_resp()
      ? *data_.set_group_ban_resp_
      : reinterpret_cast< ::onebot::SetGroupBanResp&>(::onebot::_SetGroupBanResp_default_instance_);
}
inline const ::onebot::SetGroupBanResp& Frame::set_group_ban_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_ban_resp)
  return _internal_set_group_ban_resp();
}
inline ::onebot::SetGroupBanResp* Frame::unsafe_arena_release_set_group_ban_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_ban_resp)
  if (_internal_has_set_group_ban_resp()) {
    clear_has_data();
    ::onebot::SetGroupBanResp* temp = data_.set_group_ban_resp_;
    data_.set_group_ban_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_ban_resp(::onebot::SetGroupBanResp* set_group_ban_resp) {
  clear_data();
  if (set_group_ban_resp) {
    set_has_set_group_ban_resp();
    data_.set_group_ban_resp_ = set_group_ban_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_ban_resp)
}
inline ::onebot::SetGroupBanResp* Frame::_internal_mutable_set_group_ban_resp() {
  if (!_internal_has_set_group_ban_resp()) {
    clear_data();
    set_has_set_group_ban_resp();
    data_.set_group_ban_resp_ = CreateMaybeMessage< ::onebot::SetGroupBanResp >(GetArena());
  }
  return data_.set_group_ban_resp_;
}
inline ::onebot::SetGroupBanResp* Frame::mutable_set_group_ban_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_ban_resp)
  return _internal_mutable_set_group_ban_resp();
}

// .onebot.SetGroupAnonymousBanResp set_group_anonymous_ban_resp = 310;
inline bool Frame::_internal_has_set_group_anonymous_ban_resp() const {
  return data_case() == kSetGroupAnonymousBanResp;
}
inline bool Frame::has_set_group_anonymous_ban_resp() const {
  return _internal_has_set_group_anonymous_ban_resp();
}
inline void Frame::set_has_set_group_anonymous_ban_resp() {
  _oneof_case_[0] = kSetGroupAnonymousBanResp;
}
inline ::onebot::SetGroupAnonymousBanResp* Frame::release_set_group_anonymous_ban_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_anonymous_ban_resp)
  if (_internal_has_set_group_anonymous_ban_resp()) {
    clear_has_data();
      ::onebot::SetGroupAnonymousBanResp* temp = data_.set_group_anonymous_ban_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_anonymous_ban_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupAnonymousBanResp& Frame::_internal_set_group_anonymous_ban_resp() const {
  return _internal_has_set_group_anonymous_ban_resp()
      ? *data_.set_group_anonymous_ban_resp_
      : reinterpret_cast< ::onebot::SetGroupAnonymousBanResp&>(::onebot::_SetGroupAnonymousBanResp_default_instance_);
}
inline const ::onebot::SetGroupAnonymousBanResp& Frame::set_group_anonymous_ban_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_anonymous_ban_resp)
  return _internal_set_group_anonymous_ban_resp();
}
inline ::onebot::SetGroupAnonymousBanResp* Frame::unsafe_arena_release_set_group_anonymous_ban_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_anonymous_ban_resp)
  if (_internal_has_set_group_anonymous_ban_resp()) {
    clear_has_data();
    ::onebot::SetGroupAnonymousBanResp* temp = data_.set_group_anonymous_ban_resp_;
    data_.set_group_anonymous_ban_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_anonymous_ban_resp(::onebot::SetGroupAnonymousBanResp* set_group_anonymous_ban_resp) {
  clear_data();
  if (set_group_anonymous_ban_resp) {
    set_has_set_group_anonymous_ban_resp();
    data_.set_group_anonymous_ban_resp_ = set_group_anonymous_ban_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_anonymous_ban_resp)
}
inline ::onebot::SetGroupAnonymousBanResp* Frame::_internal_mutable_set_group_anonymous_ban_resp() {
  if (!_internal_has_set_group_anonymous_ban_resp()) {
    clear_data();
    set_has_set_group_anonymous_ban_resp();
    data_.set_group_anonymous_ban_resp_ = CreateMaybeMessage< ::onebot::SetGroupAnonymousBanResp >(GetArena());
  }
  return data_.set_group_anonymous_ban_resp_;
}
inline ::onebot::SetGroupAnonymousBanResp* Frame::mutable_set_group_anonymous_ban_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_anonymous_ban_resp)
  return _internal_mutable_set_group_anonymous_ban_resp();
}

// .onebot.SetGroupWholeBanResp set_group_whole_ban_resp = 311;
inline bool Frame::_internal_has_set_group_whole_ban_resp() const {
  return data_case() == kSetGroupWholeBanResp;
}
inline bool Frame::has_set_group_whole_ban_resp() const {
  return _internal_has_set_group_whole_ban_resp();
}
inline void Frame::set_has_set_group_whole_ban_resp() {
  _oneof_case_[0] = kSetGroupWholeBanResp;
}
inline ::onebot::SetGroupWholeBanResp* Frame::release_set_group_whole_ban_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_whole_ban_resp)
  if (_internal_has_set_group_whole_ban_resp()) {
    clear_has_data();
      ::onebot::SetGroupWholeBanResp* temp = data_.set_group_whole_ban_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_whole_ban_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupWholeBanResp& Frame::_internal_set_group_whole_ban_resp() const {
  return _internal_has_set_group_whole_ban_resp()
      ? *data_.set_group_whole_ban_resp_
      : reinterpret_cast< ::onebot::SetGroupWholeBanResp&>(::onebot::_SetGroupWholeBanResp_default_instance_);
}
inline const ::onebot::SetGroupWholeBanResp& Frame::set_group_whole_ban_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_whole_ban_resp)
  return _internal_set_group_whole_ban_resp();
}
inline ::onebot::SetGroupWholeBanResp* Frame::unsafe_arena_release_set_group_whole_ban_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_whole_ban_resp)
  if (_internal_has_set_group_whole_ban_resp()) {
    clear_has_data();
    ::onebot::SetGroupWholeBanResp* temp = data_.set_group_whole_ban_resp_;
    data_.set_group_whole_ban_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_whole_ban_resp(::onebot::SetGroupWholeBanResp* set_group_whole_ban_resp) {
  clear_data();
  if (set_group_whole_ban_resp) {
    set_has_set_group_whole_ban_resp();
    data_.set_group_whole_ban_resp_ = set_group_whole_ban_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_whole_ban_resp)
}
inline ::onebot::SetGroupWholeBanResp* Frame::_internal_mutable_set_group_whole_ban_resp() {
  if (!_internal_has_set_group_whole_ban_resp()) {
    clear_data();
    set_has_set_group_whole_ban_resp();
    data_.set_group_whole_ban_resp_ = CreateMaybeMessage< ::onebot::SetGroupWholeBanResp >(GetArena());
  }
  return data_.set_group_whole_ban_resp_;
}
inline ::onebot::SetGroupWholeBanResp* Frame::mutable_set_group_whole_ban_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_whole_ban_resp)
  return _internal_mutable_set_group_whole_ban_resp();
}

// .onebot.SetGroupAdminResp set_group_admin_resp = 312;
inline bool Frame::_internal_has_set_group_admin_resp() const {
  return data_case() == kSetGroupAdminResp;
}
inline bool Frame::has_set_group_admin_resp() const {
  return _internal_has_set_group_admin_resp();
}
inline void Frame::set_has_set_group_admin_resp() {
  _oneof_case_[0] = kSetGroupAdminResp;
}
inline ::onebot::SetGroupAdminResp* Frame::release_set_group_admin_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_admin_resp)
  if (_internal_has_set_group_admin_resp()) {
    clear_has_data();
      ::onebot::SetGroupAdminResp* temp = data_.set_group_admin_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_admin_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupAdminResp& Frame::_internal_set_group_admin_resp() const {
  return _internal_has_set_group_admin_resp()
      ? *data_.set_group_admin_resp_
      : reinterpret_cast< ::onebot::SetGroupAdminResp&>(::onebot::_SetGroupAdminResp_default_instance_);
}
inline const ::onebot::SetGroupAdminResp& Frame::set_group_admin_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_admin_resp)
  return _internal_set_group_admin_resp();
}
inline ::onebot::SetGroupAdminResp* Frame::unsafe_arena_release_set_group_admin_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_admin_resp)
  if (_internal_has_set_group_admin_resp()) {
    clear_has_data();
    ::onebot::SetGroupAdminResp* temp = data_.set_group_admin_resp_;
    data_.set_group_admin_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_admin_resp(::onebot::SetGroupAdminResp* set_group_admin_resp) {
  clear_data();
  if (set_group_admin_resp) {
    set_has_set_group_admin_resp();
    data_.set_group_admin_resp_ = set_group_admin_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_admin_resp)
}
inline ::onebot::SetGroupAdminResp* Frame::_internal_mutable_set_group_admin_resp() {
  if (!_internal_has_set_group_admin_resp()) {
    clear_data();
    set_has_set_group_admin_resp();
    data_.set_group_admin_resp_ = CreateMaybeMessage< ::onebot::SetGroupAdminResp >(GetArena());
  }
  return data_.set_group_admin_resp_;
}
inline ::onebot::SetGroupAdminResp* Frame::mutable_set_group_admin_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_admin_resp)
  return _internal_mutable_set_group_admin_resp();
}

// .onebot.SetGroupAnonymousResp set_group_anonymous_resp = 313;
inline bool Frame::_internal_has_set_group_anonymous_resp() const {
  return data_case() == kSetGroupAnonymousResp;
}
inline bool Frame::has_set_group_anonymous_resp() const {
  return _internal_has_set_group_anonymous_resp();
}
inline void Frame::set_has_set_group_anonymous_resp() {
  _oneof_case_[0] = kSetGroupAnonymousResp;
}
inline ::onebot::SetGroupAnonymousResp* Frame::release_set_group_anonymous_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_anonymous_resp)
  if (_internal_has_set_group_anonymous_resp()) {
    clear_has_data();
      ::onebot::SetGroupAnonymousResp* temp = data_.set_group_anonymous_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_anonymous_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupAnonymousResp& Frame::_internal_set_group_anonymous_resp() const {
  return _internal_has_set_group_anonymous_resp()
      ? *data_.set_group_anonymous_resp_
      : reinterpret_cast< ::onebot::SetGroupAnonymousResp&>(::onebot::_SetGroupAnonymousResp_default_instance_);
}
inline const ::onebot::SetGroupAnonymousResp& Frame::set_group_anonymous_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_anonymous_resp)
  return _internal_set_group_anonymous_resp();
}
inline ::onebot::SetGroupAnonymousResp* Frame::unsafe_arena_release_set_group_anonymous_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_anonymous_resp)
  if (_internal_has_set_group_anonymous_resp()) {
    clear_has_data();
    ::onebot::SetGroupAnonymousResp* temp = data_.set_group_anonymous_resp_;
    data_.set_group_anonymous_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_anonymous_resp(::onebot::SetGroupAnonymousResp* set_group_anonymous_resp) {
  clear_data();
  if (set_group_anonymous_resp) {
    set_has_set_group_anonymous_resp();
    data_.set_group_anonymous_resp_ = set_group_anonymous_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_anonymous_resp)
}
inline ::onebot::SetGroupAnonymousResp* Frame::_internal_mutable_set_group_anonymous_resp() {
  if (!_internal_has_set_group_anonymous_resp()) {
    clear_data();
    set_has_set_group_anonymous_resp();
    data_.set_group_anonymous_resp_ = CreateMaybeMessage< ::onebot::SetGroupAnonymousResp >(GetArena());
  }
  return data_.set_group_anonymous_resp_;
}
inline ::onebot::SetGroupAnonymousResp* Frame::mutable_set_group_anonymous_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_anonymous_resp)
  return _internal_mutable_set_group_anonymous_resp();
}

// .onebot.SetGroupCardResp set_group_card_resp = 314;
inline bool Frame::_internal_has_set_group_card_resp() const {
  return data_case() == kSetGroupCardResp;
}
inline bool Frame::has_set_group_card_resp() const {
  return _internal_has_set_group_card_resp();
}
inline void Frame::set_has_set_group_card_resp() {
  _oneof_case_[0] = kSetGroupCardResp;
}
inline ::onebot::SetGroupCardResp* Frame::release_set_group_card_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_card_resp)
  if (_internal_has_set_group_card_resp()) {
    clear_has_data();
      ::onebot::SetGroupCardResp* temp = data_.set_group_card_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_card_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupCardResp& Frame::_internal_set_group_card_resp() const {
  return _internal_has_set_group_card_resp()
      ? *data_.set_group_card_resp_
      : reinterpret_cast< ::onebot::SetGroupCardResp&>(::onebot::_SetGroupCardResp_default_instance_);
}
inline const ::onebot::SetGroupCardResp& Frame::set_group_card_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_card_resp)
  return _internal_set_group_card_resp();
}
inline ::onebot::SetGroupCardResp* Frame::unsafe_arena_release_set_group_card_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_card_resp)
  if (_internal_has_set_group_card_resp()) {
    clear_has_data();
    ::onebot::SetGroupCardResp* temp = data_.set_group_card_resp_;
    data_.set_group_card_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_card_resp(::onebot::SetGroupCardResp* set_group_card_resp) {
  clear_data();
  if (set_group_card_resp) {
    set_has_set_group_card_resp();
    data_.set_group_card_resp_ = set_group_card_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_card_resp)
}
inline ::onebot::SetGroupCardResp* Frame::_internal_mutable_set_group_card_resp() {
  if (!_internal_has_set_group_card_resp()) {
    clear_data();
    set_has_set_group_card_resp();
    data_.set_group_card_resp_ = CreateMaybeMessage< ::onebot::SetGroupCardResp >(GetArena());
  }
  return data_.set_group_card_resp_;
}
inline ::onebot::SetGroupCardResp* Frame::mutable_set_group_card_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_card_resp)
  return _internal_mutable_set_group_card_resp();
}

// .onebot.SetGroupNameResp set_group_name_resp = 315;
inline bool Frame::_internal_has_set_group_name_resp() const {
  return data_case() == kSetGroupNameResp;
}
inline bool Frame::has_set_group_name_resp() const {
  return _internal_has_set_group_name_resp();
}
inline void Frame::set_has_set_group_name_resp() {
  _oneof_case_[0] = kSetGroupNameResp;
}
inline ::onebot::SetGroupNameResp* Frame::release_set_group_name_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_name_resp)
  if (_internal_has_set_group_name_resp()) {
    clear_has_data();
      ::onebot::SetGroupNameResp* temp = data_.set_group_name_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_name_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupNameResp& Frame::_internal_set_group_name_resp() const {
  return _internal_has_set_group_name_resp()
      ? *data_.set_group_name_resp_
      : reinterpret_cast< ::onebot::SetGroupNameResp&>(::onebot::_SetGroupNameResp_default_instance_);
}
inline const ::onebot::SetGroupNameResp& Frame::set_group_name_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_name_resp)
  return _internal_set_group_name_resp();
}
inline ::onebot::SetGroupNameResp* Frame::unsafe_arena_release_set_group_name_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_name_resp)
  if (_internal_has_set_group_name_resp()) {
    clear_has_data();
    ::onebot::SetGroupNameResp* temp = data_.set_group_name_resp_;
    data_.set_group_name_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_name_resp(::onebot::SetGroupNameResp* set_group_name_resp) {
  clear_data();
  if (set_group_name_resp) {
    set_has_set_group_name_resp();
    data_.set_group_name_resp_ = set_group_name_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_name_resp)
}
inline ::onebot::SetGroupNameResp* Frame::_internal_mutable_set_group_name_resp() {
  if (!_internal_has_set_group_name_resp()) {
    clear_data();
    set_has_set_group_name_resp();
    data_.set_group_name_resp_ = CreateMaybeMessage< ::onebot::SetGroupNameResp >(GetArena());
  }
  return data_.set_group_name_resp_;
}
inline ::onebot::SetGroupNameResp* Frame::mutable_set_group_name_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_name_resp)
  return _internal_mutable_set_group_name_resp();
}

// .onebot.SetGroupLeaveResp set_group_leave_resp = 316;
inline bool Frame::_internal_has_set_group_leave_resp() const {
  return data_case() == kSetGroupLeaveResp;
}
inline bool Frame::has_set_group_leave_resp() const {
  return _internal_has_set_group_leave_resp();
}
inline void Frame::set_has_set_group_leave_resp() {
  _oneof_case_[0] = kSetGroupLeaveResp;
}
inline ::onebot::SetGroupLeaveResp* Frame::release_set_group_leave_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_leave_resp)
  if (_internal_has_set_group_leave_resp()) {
    clear_has_data();
      ::onebot::SetGroupLeaveResp* temp = data_.set_group_leave_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_leave_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupLeaveResp& Frame::_internal_set_group_leave_resp() const {
  return _internal_has_set_group_leave_resp()
      ? *data_.set_group_leave_resp_
      : reinterpret_cast< ::onebot::SetGroupLeaveResp&>(::onebot::_SetGroupLeaveResp_default_instance_);
}
inline const ::onebot::SetGroupLeaveResp& Frame::set_group_leave_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_leave_resp)
  return _internal_set_group_leave_resp();
}
inline ::onebot::SetGroupLeaveResp* Frame::unsafe_arena_release_set_group_leave_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_leave_resp)
  if (_internal_has_set_group_leave_resp()) {
    clear_has_data();
    ::onebot::SetGroupLeaveResp* temp = data_.set_group_leave_resp_;
    data_.set_group_leave_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_leave_resp(::onebot::SetGroupLeaveResp* set_group_leave_resp) {
  clear_data();
  if (set_group_leave_resp) {
    set_has_set_group_leave_resp();
    data_.set_group_leave_resp_ = set_group_leave_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_leave_resp)
}
inline ::onebot::SetGroupLeaveResp* Frame::_internal_mutable_set_group_leave_resp() {
  if (!_internal_has_set_group_leave_resp()) {
    clear_data();
    set_has_set_group_leave_resp();
    data_.set_group_leave_resp_ = CreateMaybeMessage< ::onebot::SetGroupLeaveResp >(GetArena());
  }
  return data_.set_group_leave_resp_;
}
inline ::onebot::SetGroupLeaveResp* Frame::mutable_set_group_leave_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_leave_resp)
  return _internal_mutable_set_group_leave_resp();
}

// .onebot.SetGroupSpecialTitleResp set_group_special_title_resp = 317;
inline bool Frame::_internal_has_set_group_special_title_resp() const {
  return data_case() == kSetGroupSpecialTitleResp;
}
inline bool Frame::has_set_group_special_title_resp() const {
  return _internal_has_set_group_special_title_resp();
}
inline void Frame::set_has_set_group_special_title_resp() {
  _oneof_case_[0] = kSetGroupSpecialTitleResp;
}
inline ::onebot::SetGroupSpecialTitleResp* Frame::release_set_group_special_title_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_special_title_resp)
  if (_internal_has_set_group_special_title_resp()) {
    clear_has_data();
      ::onebot::SetGroupSpecialTitleResp* temp = data_.set_group_special_title_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_special_title_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupSpecialTitleResp& Frame::_internal_set_group_special_title_resp() const {
  return _internal_has_set_group_special_title_resp()
      ? *data_.set_group_special_title_resp_
      : reinterpret_cast< ::onebot::SetGroupSpecialTitleResp&>(::onebot::_SetGroupSpecialTitleResp_default_instance_);
}
inline const ::onebot::SetGroupSpecialTitleResp& Frame::set_group_special_title_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_special_title_resp)
  return _internal_set_group_special_title_resp();
}
inline ::onebot::SetGroupSpecialTitleResp* Frame::unsafe_arena_release_set_group_special_title_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_special_title_resp)
  if (_internal_has_set_group_special_title_resp()) {
    clear_has_data();
    ::onebot::SetGroupSpecialTitleResp* temp = data_.set_group_special_title_resp_;
    data_.set_group_special_title_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_special_title_resp(::onebot::SetGroupSpecialTitleResp* set_group_special_title_resp) {
  clear_data();
  if (set_group_special_title_resp) {
    set_has_set_group_special_title_resp();
    data_.set_group_special_title_resp_ = set_group_special_title_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_special_title_resp)
}
inline ::onebot::SetGroupSpecialTitleResp* Frame::_internal_mutable_set_group_special_title_resp() {
  if (!_internal_has_set_group_special_title_resp()) {
    clear_data();
    set_has_set_group_special_title_resp();
    data_.set_group_special_title_resp_ = CreateMaybeMessage< ::onebot::SetGroupSpecialTitleResp >(GetArena());
  }
  return data_.set_group_special_title_resp_;
}
inline ::onebot::SetGroupSpecialTitleResp* Frame::mutable_set_group_special_title_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_special_title_resp)
  return _internal_mutable_set_group_special_title_resp();
}

// .onebot.SetFriendAddRequestResp set_friend_add_request_resp = 318;
inline bool Frame::_internal_has_set_friend_add_request_resp() const {
  return data_case() == kSetFriendAddRequestResp;
}
inline bool Frame::has_set_friend_add_request_resp() const {
  return _internal_has_set_friend_add_request_resp();
}
inline void Frame::set_has_set_friend_add_request_resp() {
  _oneof_case_[0] = kSetFriendAddRequestResp;
}
inline ::onebot::SetFriendAddRequestResp* Frame::release_set_friend_add_request_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_friend_add_request_resp)
  if (_internal_has_set_friend_add_request_resp()) {
    clear_has_data();
      ::onebot::SetFriendAddRequestResp* temp = data_.set_friend_add_request_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_friend_add_request_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetFriendAddRequestResp& Frame::_internal_set_friend_add_request_resp() const {
  return _internal_has_set_friend_add_request_resp()
      ? *data_.set_friend_add_request_resp_
      : reinterpret_cast< ::onebot::SetFriendAddRequestResp&>(::onebot::_SetFriendAddRequestResp_default_instance_);
}
inline const ::onebot::SetFriendAddRequestResp& Frame::set_friend_add_request_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_friend_add_request_resp)
  return _internal_set_friend_add_request_resp();
}
inline ::onebot::SetFriendAddRequestResp* Frame::unsafe_arena_release_set_friend_add_request_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_friend_add_request_resp)
  if (_internal_has_set_friend_add_request_resp()) {
    clear_has_data();
    ::onebot::SetFriendAddRequestResp* temp = data_.set_friend_add_request_resp_;
    data_.set_friend_add_request_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_friend_add_request_resp(::onebot::SetFriendAddRequestResp* set_friend_add_request_resp) {
  clear_data();
  if (set_friend_add_request_resp) {
    set_has_set_friend_add_request_resp();
    data_.set_friend_add_request_resp_ = set_friend_add_request_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_friend_add_request_resp)
}
inline ::onebot::SetFriendAddRequestResp* Frame::_internal_mutable_set_friend_add_request_resp() {
  if (!_internal_has_set_friend_add_request_resp()) {
    clear_data();
    set_has_set_friend_add_request_resp();
    data_.set_friend_add_request_resp_ = CreateMaybeMessage< ::onebot::SetFriendAddRequestResp >(GetArena());
  }
  return data_.set_friend_add_request_resp_;
}
inline ::onebot::SetFriendAddRequestResp* Frame::mutable_set_friend_add_request_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_friend_add_request_resp)
  return _internal_mutable_set_friend_add_request_resp();
}

// .onebot.SetGroupAddRequestResp set_group_add_request_resp = 319;
inline bool Frame::_internal_has_set_group_add_request_resp() const {
  return data_case() == kSetGroupAddRequestResp;
}
inline bool Frame::has_set_group_add_request_resp() const {
  return _internal_has_set_group_add_request_resp();
}
inline void Frame::set_has_set_group_add_request_resp() {
  _oneof_case_[0] = kSetGroupAddRequestResp;
}
inline ::onebot::SetGroupAddRequestResp* Frame::release_set_group_add_request_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_group_add_request_resp)
  if (_internal_has_set_group_add_request_resp()) {
    clear_has_data();
      ::onebot::SetGroupAddRequestResp* temp = data_.set_group_add_request_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_group_add_request_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetGroupAddRequestResp& Frame::_internal_set_group_add_request_resp() const {
  return _internal_has_set_group_add_request_resp()
      ? *data_.set_group_add_request_resp_
      : reinterpret_cast< ::onebot::SetGroupAddRequestResp&>(::onebot::_SetGroupAddRequestResp_default_instance_);
}
inline const ::onebot::SetGroupAddRequestResp& Frame::set_group_add_request_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_group_add_request_resp)
  return _internal_set_group_add_request_resp();
}
inline ::onebot::SetGroupAddRequestResp* Frame::unsafe_arena_release_set_group_add_request_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_group_add_request_resp)
  if (_internal_has_set_group_add_request_resp()) {
    clear_has_data();
    ::onebot::SetGroupAddRequestResp* temp = data_.set_group_add_request_resp_;
    data_.set_group_add_request_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_group_add_request_resp(::onebot::SetGroupAddRequestResp* set_group_add_request_resp) {
  clear_data();
  if (set_group_add_request_resp) {
    set_has_set_group_add_request_resp();
    data_.set_group_add_request_resp_ = set_group_add_request_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_group_add_request_resp)
}
inline ::onebot::SetGroupAddRequestResp* Frame::_internal_mutable_set_group_add_request_resp() {
  if (!_internal_has_set_group_add_request_resp()) {
    clear_data();
    set_has_set_group_add_request_resp();
    data_.set_group_add_request_resp_ = CreateMaybeMessage< ::onebot::SetGroupAddRequestResp >(GetArena());
  }
  return data_.set_group_add_request_resp_;
}
inline ::onebot::SetGroupAddRequestResp* Frame::mutable_set_group_add_request_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_group_add_request_resp)
  return _internal_mutable_set_group_add_request_resp();
}

// .onebot.GetLoginInfoResp get_login_info_resp = 320;
inline bool Frame::_internal_has_get_login_info_resp() const {
  return data_case() == kGetLoginInfoResp;
}
inline bool Frame::has_get_login_info_resp() const {
  return _internal_has_get_login_info_resp();
}
inline void Frame::set_has_get_login_info_resp() {
  _oneof_case_[0] = kGetLoginInfoResp;
}
inline ::onebot::GetLoginInfoResp* Frame::release_get_login_info_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_login_info_resp)
  if (_internal_has_get_login_info_resp()) {
    clear_has_data();
      ::onebot::GetLoginInfoResp* temp = data_.get_login_info_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_login_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetLoginInfoResp& Frame::_internal_get_login_info_resp() const {
  return _internal_has_get_login_info_resp()
      ? *data_.get_login_info_resp_
      : reinterpret_cast< ::onebot::GetLoginInfoResp&>(::onebot::_GetLoginInfoResp_default_instance_);
}
inline const ::onebot::GetLoginInfoResp& Frame::get_login_info_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_login_info_resp)
  return _internal_get_login_info_resp();
}
inline ::onebot::GetLoginInfoResp* Frame::unsafe_arena_release_get_login_info_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_login_info_resp)
  if (_internal_has_get_login_info_resp()) {
    clear_has_data();
    ::onebot::GetLoginInfoResp* temp = data_.get_login_info_resp_;
    data_.get_login_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_login_info_resp(::onebot::GetLoginInfoResp* get_login_info_resp) {
  clear_data();
  if (get_login_info_resp) {
    set_has_get_login_info_resp();
    data_.get_login_info_resp_ = get_login_info_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_login_info_resp)
}
inline ::onebot::GetLoginInfoResp* Frame::_internal_mutable_get_login_info_resp() {
  if (!_internal_has_get_login_info_resp()) {
    clear_data();
    set_has_get_login_info_resp();
    data_.get_login_info_resp_ = CreateMaybeMessage< ::onebot::GetLoginInfoResp >(GetArena());
  }
  return data_.get_login_info_resp_;
}
inline ::onebot::GetLoginInfoResp* Frame::mutable_get_login_info_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_login_info_resp)
  return _internal_mutable_get_login_info_resp();
}

// .onebot.GetStrangerInfoResp get_stranger_info_resp = 321;
inline bool Frame::_internal_has_get_stranger_info_resp() const {
  return data_case() == kGetStrangerInfoResp;
}
inline bool Frame::has_get_stranger_info_resp() const {
  return _internal_has_get_stranger_info_resp();
}
inline void Frame::set_has_get_stranger_info_resp() {
  _oneof_case_[0] = kGetStrangerInfoResp;
}
inline ::onebot::GetStrangerInfoResp* Frame::release_get_stranger_info_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_stranger_info_resp)
  if (_internal_has_get_stranger_info_resp()) {
    clear_has_data();
      ::onebot::GetStrangerInfoResp* temp = data_.get_stranger_info_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_stranger_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetStrangerInfoResp& Frame::_internal_get_stranger_info_resp() const {
  return _internal_has_get_stranger_info_resp()
      ? *data_.get_stranger_info_resp_
      : reinterpret_cast< ::onebot::GetStrangerInfoResp&>(::onebot::_GetStrangerInfoResp_default_instance_);
}
inline const ::onebot::GetStrangerInfoResp& Frame::get_stranger_info_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_stranger_info_resp)
  return _internal_get_stranger_info_resp();
}
inline ::onebot::GetStrangerInfoResp* Frame::unsafe_arena_release_get_stranger_info_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_stranger_info_resp)
  if (_internal_has_get_stranger_info_resp()) {
    clear_has_data();
    ::onebot::GetStrangerInfoResp* temp = data_.get_stranger_info_resp_;
    data_.get_stranger_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_stranger_info_resp(::onebot::GetStrangerInfoResp* get_stranger_info_resp) {
  clear_data();
  if (get_stranger_info_resp) {
    set_has_get_stranger_info_resp();
    data_.get_stranger_info_resp_ = get_stranger_info_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_stranger_info_resp)
}
inline ::onebot::GetStrangerInfoResp* Frame::_internal_mutable_get_stranger_info_resp() {
  if (!_internal_has_get_stranger_info_resp()) {
    clear_data();
    set_has_get_stranger_info_resp();
    data_.get_stranger_info_resp_ = CreateMaybeMessage< ::onebot::GetStrangerInfoResp >(GetArena());
  }
  return data_.get_stranger_info_resp_;
}
inline ::onebot::GetStrangerInfoResp* Frame::mutable_get_stranger_info_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_stranger_info_resp)
  return _internal_mutable_get_stranger_info_resp();
}

// .onebot.GetFriendListResp get_friend_list_resp = 322;
inline bool Frame::_internal_has_get_friend_list_resp() const {
  return data_case() == kGetFriendListResp;
}
inline bool Frame::has_get_friend_list_resp() const {
  return _internal_has_get_friend_list_resp();
}
inline void Frame::set_has_get_friend_list_resp() {
  _oneof_case_[0] = kGetFriendListResp;
}
inline ::onebot::GetFriendListResp* Frame::release_get_friend_list_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_friend_list_resp)
  if (_internal_has_get_friend_list_resp()) {
    clear_has_data();
      ::onebot::GetFriendListResp* temp = data_.get_friend_list_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_friend_list_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetFriendListResp& Frame::_internal_get_friend_list_resp() const {
  return _internal_has_get_friend_list_resp()
      ? *data_.get_friend_list_resp_
      : reinterpret_cast< ::onebot::GetFriendListResp&>(::onebot::_GetFriendListResp_default_instance_);
}
inline const ::onebot::GetFriendListResp& Frame::get_friend_list_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_friend_list_resp)
  return _internal_get_friend_list_resp();
}
inline ::onebot::GetFriendListResp* Frame::unsafe_arena_release_get_friend_list_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_friend_list_resp)
  if (_internal_has_get_friend_list_resp()) {
    clear_has_data();
    ::onebot::GetFriendListResp* temp = data_.get_friend_list_resp_;
    data_.get_friend_list_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_friend_list_resp(::onebot::GetFriendListResp* get_friend_list_resp) {
  clear_data();
  if (get_friend_list_resp) {
    set_has_get_friend_list_resp();
    data_.get_friend_list_resp_ = get_friend_list_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_friend_list_resp)
}
inline ::onebot::GetFriendListResp* Frame::_internal_mutable_get_friend_list_resp() {
  if (!_internal_has_get_friend_list_resp()) {
    clear_data();
    set_has_get_friend_list_resp();
    data_.get_friend_list_resp_ = CreateMaybeMessage< ::onebot::GetFriendListResp >(GetArena());
  }
  return data_.get_friend_list_resp_;
}
inline ::onebot::GetFriendListResp* Frame::mutable_get_friend_list_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_friend_list_resp)
  return _internal_mutable_get_friend_list_resp();
}

// .onebot.GetGroupInfoResp get_group_info_resp = 323;
inline bool Frame::_internal_has_get_group_info_resp() const {
  return data_case() == kGetGroupInfoResp;
}
inline bool Frame::has_get_group_info_resp() const {
  return _internal_has_get_group_info_resp();
}
inline void Frame::set_has_get_group_info_resp() {
  _oneof_case_[0] = kGetGroupInfoResp;
}
inline ::onebot::GetGroupInfoResp* Frame::release_get_group_info_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_info_resp)
  if (_internal_has_get_group_info_resp()) {
    clear_has_data();
      ::onebot::GetGroupInfoResp* temp = data_.get_group_info_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupInfoResp& Frame::_internal_get_group_info_resp() const {
  return _internal_has_get_group_info_resp()
      ? *data_.get_group_info_resp_
      : reinterpret_cast< ::onebot::GetGroupInfoResp&>(::onebot::_GetGroupInfoResp_default_instance_);
}
inline const ::onebot::GetGroupInfoResp& Frame::get_group_info_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_info_resp)
  return _internal_get_group_info_resp();
}
inline ::onebot::GetGroupInfoResp* Frame::unsafe_arena_release_get_group_info_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_info_resp)
  if (_internal_has_get_group_info_resp()) {
    clear_has_data();
    ::onebot::GetGroupInfoResp* temp = data_.get_group_info_resp_;
    data_.get_group_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_info_resp(::onebot::GetGroupInfoResp* get_group_info_resp) {
  clear_data();
  if (get_group_info_resp) {
    set_has_get_group_info_resp();
    data_.get_group_info_resp_ = get_group_info_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_info_resp)
}
inline ::onebot::GetGroupInfoResp* Frame::_internal_mutable_get_group_info_resp() {
  if (!_internal_has_get_group_info_resp()) {
    clear_data();
    set_has_get_group_info_resp();
    data_.get_group_info_resp_ = CreateMaybeMessage< ::onebot::GetGroupInfoResp >(GetArena());
  }
  return data_.get_group_info_resp_;
}
inline ::onebot::GetGroupInfoResp* Frame::mutable_get_group_info_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_info_resp)
  return _internal_mutable_get_group_info_resp();
}

// .onebot.GetGroupListResp get_group_list_resp = 324;
inline bool Frame::_internal_has_get_group_list_resp() const {
  return data_case() == kGetGroupListResp;
}
inline bool Frame::has_get_group_list_resp() const {
  return _internal_has_get_group_list_resp();
}
inline void Frame::set_has_get_group_list_resp() {
  _oneof_case_[0] = kGetGroupListResp;
}
inline ::onebot::GetGroupListResp* Frame::release_get_group_list_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_list_resp)
  if (_internal_has_get_group_list_resp()) {
    clear_has_data();
      ::onebot::GetGroupListResp* temp = data_.get_group_list_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_list_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupListResp& Frame::_internal_get_group_list_resp() const {
  return _internal_has_get_group_list_resp()
      ? *data_.get_group_list_resp_
      : reinterpret_cast< ::onebot::GetGroupListResp&>(::onebot::_GetGroupListResp_default_instance_);
}
inline const ::onebot::GetGroupListResp& Frame::get_group_list_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_list_resp)
  return _internal_get_group_list_resp();
}
inline ::onebot::GetGroupListResp* Frame::unsafe_arena_release_get_group_list_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_list_resp)
  if (_internal_has_get_group_list_resp()) {
    clear_has_data();
    ::onebot::GetGroupListResp* temp = data_.get_group_list_resp_;
    data_.get_group_list_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_list_resp(::onebot::GetGroupListResp* get_group_list_resp) {
  clear_data();
  if (get_group_list_resp) {
    set_has_get_group_list_resp();
    data_.get_group_list_resp_ = get_group_list_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_list_resp)
}
inline ::onebot::GetGroupListResp* Frame::_internal_mutable_get_group_list_resp() {
  if (!_internal_has_get_group_list_resp()) {
    clear_data();
    set_has_get_group_list_resp();
    data_.get_group_list_resp_ = CreateMaybeMessage< ::onebot::GetGroupListResp >(GetArena());
  }
  return data_.get_group_list_resp_;
}
inline ::onebot::GetGroupListResp* Frame::mutable_get_group_list_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_list_resp)
  return _internal_mutable_get_group_list_resp();
}

// .onebot.GetGroupMemberInfoResp get_group_member_info_resp = 325;
inline bool Frame::_internal_has_get_group_member_info_resp() const {
  return data_case() == kGetGroupMemberInfoResp;
}
inline bool Frame::has_get_group_member_info_resp() const {
  return _internal_has_get_group_member_info_resp();
}
inline void Frame::set_has_get_group_member_info_resp() {
  _oneof_case_[0] = kGetGroupMemberInfoResp;
}
inline ::onebot::GetGroupMemberInfoResp* Frame::release_get_group_member_info_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_member_info_resp)
  if (_internal_has_get_group_member_info_resp()) {
    clear_has_data();
      ::onebot::GetGroupMemberInfoResp* temp = data_.get_group_member_info_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_member_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupMemberInfoResp& Frame::_internal_get_group_member_info_resp() const {
  return _internal_has_get_group_member_info_resp()
      ? *data_.get_group_member_info_resp_
      : reinterpret_cast< ::onebot::GetGroupMemberInfoResp&>(::onebot::_GetGroupMemberInfoResp_default_instance_);
}
inline const ::onebot::GetGroupMemberInfoResp& Frame::get_group_member_info_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_member_info_resp)
  return _internal_get_group_member_info_resp();
}
inline ::onebot::GetGroupMemberInfoResp* Frame::unsafe_arena_release_get_group_member_info_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_member_info_resp)
  if (_internal_has_get_group_member_info_resp()) {
    clear_has_data();
    ::onebot::GetGroupMemberInfoResp* temp = data_.get_group_member_info_resp_;
    data_.get_group_member_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_member_info_resp(::onebot::GetGroupMemberInfoResp* get_group_member_info_resp) {
  clear_data();
  if (get_group_member_info_resp) {
    set_has_get_group_member_info_resp();
    data_.get_group_member_info_resp_ = get_group_member_info_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_member_info_resp)
}
inline ::onebot::GetGroupMemberInfoResp* Frame::_internal_mutable_get_group_member_info_resp() {
  if (!_internal_has_get_group_member_info_resp()) {
    clear_data();
    set_has_get_group_member_info_resp();
    data_.get_group_member_info_resp_ = CreateMaybeMessage< ::onebot::GetGroupMemberInfoResp >(GetArena());
  }
  return data_.get_group_member_info_resp_;
}
inline ::onebot::GetGroupMemberInfoResp* Frame::mutable_get_group_member_info_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_member_info_resp)
  return _internal_mutable_get_group_member_info_resp();
}

// .onebot.GetGroupMemberListResp get_group_member_list_resp = 326;
inline bool Frame::_internal_has_get_group_member_list_resp() const {
  return data_case() == kGetGroupMemberListResp;
}
inline bool Frame::has_get_group_member_list_resp() const {
  return _internal_has_get_group_member_list_resp();
}
inline void Frame::set_has_get_group_member_list_resp() {
  _oneof_case_[0] = kGetGroupMemberListResp;
}
inline ::onebot::GetGroupMemberListResp* Frame::release_get_group_member_list_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_member_list_resp)
  if (_internal_has_get_group_member_list_resp()) {
    clear_has_data();
      ::onebot::GetGroupMemberListResp* temp = data_.get_group_member_list_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_member_list_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupMemberListResp& Frame::_internal_get_group_member_list_resp() const {
  return _internal_has_get_group_member_list_resp()
      ? *data_.get_group_member_list_resp_
      : reinterpret_cast< ::onebot::GetGroupMemberListResp&>(::onebot::_GetGroupMemberListResp_default_instance_);
}
inline const ::onebot::GetGroupMemberListResp& Frame::get_group_member_list_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_member_list_resp)
  return _internal_get_group_member_list_resp();
}
inline ::onebot::GetGroupMemberListResp* Frame::unsafe_arena_release_get_group_member_list_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_member_list_resp)
  if (_internal_has_get_group_member_list_resp()) {
    clear_has_data();
    ::onebot::GetGroupMemberListResp* temp = data_.get_group_member_list_resp_;
    data_.get_group_member_list_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_member_list_resp(::onebot::GetGroupMemberListResp* get_group_member_list_resp) {
  clear_data();
  if (get_group_member_list_resp) {
    set_has_get_group_member_list_resp();
    data_.get_group_member_list_resp_ = get_group_member_list_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_member_list_resp)
}
inline ::onebot::GetGroupMemberListResp* Frame::_internal_mutable_get_group_member_list_resp() {
  if (!_internal_has_get_group_member_list_resp()) {
    clear_data();
    set_has_get_group_member_list_resp();
    data_.get_group_member_list_resp_ = CreateMaybeMessage< ::onebot::GetGroupMemberListResp >(GetArena());
  }
  return data_.get_group_member_list_resp_;
}
inline ::onebot::GetGroupMemberListResp* Frame::mutable_get_group_member_list_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_member_list_resp)
  return _internal_mutable_get_group_member_list_resp();
}

// .onebot.GetGroupHonorInfoResp get_group_honor_info_resp = 327;
inline bool Frame::_internal_has_get_group_honor_info_resp() const {
  return data_case() == kGetGroupHonorInfoResp;
}
inline bool Frame::has_get_group_honor_info_resp() const {
  return _internal_has_get_group_honor_info_resp();
}
inline void Frame::set_has_get_group_honor_info_resp() {
  _oneof_case_[0] = kGetGroupHonorInfoResp;
}
inline ::onebot::GetGroupHonorInfoResp* Frame::release_get_group_honor_info_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_group_honor_info_resp)
  if (_internal_has_get_group_honor_info_resp()) {
    clear_has_data();
      ::onebot::GetGroupHonorInfoResp* temp = data_.get_group_honor_info_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_group_honor_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetGroupHonorInfoResp& Frame::_internal_get_group_honor_info_resp() const {
  return _internal_has_get_group_honor_info_resp()
      ? *data_.get_group_honor_info_resp_
      : reinterpret_cast< ::onebot::GetGroupHonorInfoResp&>(::onebot::_GetGroupHonorInfoResp_default_instance_);
}
inline const ::onebot::GetGroupHonorInfoResp& Frame::get_group_honor_info_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_group_honor_info_resp)
  return _internal_get_group_honor_info_resp();
}
inline ::onebot::GetGroupHonorInfoResp* Frame::unsafe_arena_release_get_group_honor_info_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_group_honor_info_resp)
  if (_internal_has_get_group_honor_info_resp()) {
    clear_has_data();
    ::onebot::GetGroupHonorInfoResp* temp = data_.get_group_honor_info_resp_;
    data_.get_group_honor_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_group_honor_info_resp(::onebot::GetGroupHonorInfoResp* get_group_honor_info_resp) {
  clear_data();
  if (get_group_honor_info_resp) {
    set_has_get_group_honor_info_resp();
    data_.get_group_honor_info_resp_ = get_group_honor_info_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_group_honor_info_resp)
}
inline ::onebot::GetGroupHonorInfoResp* Frame::_internal_mutable_get_group_honor_info_resp() {
  if (!_internal_has_get_group_honor_info_resp()) {
    clear_data();
    set_has_get_group_honor_info_resp();
    data_.get_group_honor_info_resp_ = CreateMaybeMessage< ::onebot::GetGroupHonorInfoResp >(GetArena());
  }
  return data_.get_group_honor_info_resp_;
}
inline ::onebot::GetGroupHonorInfoResp* Frame::mutable_get_group_honor_info_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_group_honor_info_resp)
  return _internal_mutable_get_group_honor_info_resp();
}

// .onebot.GetCookiesResp get_cookies_resp = 328;
inline bool Frame::_internal_has_get_cookies_resp() const {
  return data_case() == kGetCookiesResp;
}
inline bool Frame::has_get_cookies_resp() const {
  return _internal_has_get_cookies_resp();
}
inline void Frame::set_has_get_cookies_resp() {
  _oneof_case_[0] = kGetCookiesResp;
}
inline ::onebot::GetCookiesResp* Frame::release_get_cookies_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_cookies_resp)
  if (_internal_has_get_cookies_resp()) {
    clear_has_data();
      ::onebot::GetCookiesResp* temp = data_.get_cookies_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_cookies_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetCookiesResp& Frame::_internal_get_cookies_resp() const {
  return _internal_has_get_cookies_resp()
      ? *data_.get_cookies_resp_
      : reinterpret_cast< ::onebot::GetCookiesResp&>(::onebot::_GetCookiesResp_default_instance_);
}
inline const ::onebot::GetCookiesResp& Frame::get_cookies_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_cookies_resp)
  return _internal_get_cookies_resp();
}
inline ::onebot::GetCookiesResp* Frame::unsafe_arena_release_get_cookies_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_cookies_resp)
  if (_internal_has_get_cookies_resp()) {
    clear_has_data();
    ::onebot::GetCookiesResp* temp = data_.get_cookies_resp_;
    data_.get_cookies_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_cookies_resp(::onebot::GetCookiesResp* get_cookies_resp) {
  clear_data();
  if (get_cookies_resp) {
    set_has_get_cookies_resp();
    data_.get_cookies_resp_ = get_cookies_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_cookies_resp)
}
inline ::onebot::GetCookiesResp* Frame::_internal_mutable_get_cookies_resp() {
  if (!_internal_has_get_cookies_resp()) {
    clear_data();
    set_has_get_cookies_resp();
    data_.get_cookies_resp_ = CreateMaybeMessage< ::onebot::GetCookiesResp >(GetArena());
  }
  return data_.get_cookies_resp_;
}
inline ::onebot::GetCookiesResp* Frame::mutable_get_cookies_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_cookies_resp)
  return _internal_mutable_get_cookies_resp();
}

// .onebot.GetCsrfTokenResp get_csrf_token_resp = 329;
inline bool Frame::_internal_has_get_csrf_token_resp() const {
  return data_case() == kGetCsrfTokenResp;
}
inline bool Frame::has_get_csrf_token_resp() const {
  return _internal_has_get_csrf_token_resp();
}
inline void Frame::set_has_get_csrf_token_resp() {
  _oneof_case_[0] = kGetCsrfTokenResp;
}
inline ::onebot::GetCsrfTokenResp* Frame::release_get_csrf_token_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_csrf_token_resp)
  if (_internal_has_get_csrf_token_resp()) {
    clear_has_data();
      ::onebot::GetCsrfTokenResp* temp = data_.get_csrf_token_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_csrf_token_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetCsrfTokenResp& Frame::_internal_get_csrf_token_resp() const {
  return _internal_has_get_csrf_token_resp()
      ? *data_.get_csrf_token_resp_
      : reinterpret_cast< ::onebot::GetCsrfTokenResp&>(::onebot::_GetCsrfTokenResp_default_instance_);
}
inline const ::onebot::GetCsrfTokenResp& Frame::get_csrf_token_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_csrf_token_resp)
  return _internal_get_csrf_token_resp();
}
inline ::onebot::GetCsrfTokenResp* Frame::unsafe_arena_release_get_csrf_token_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_csrf_token_resp)
  if (_internal_has_get_csrf_token_resp()) {
    clear_has_data();
    ::onebot::GetCsrfTokenResp* temp = data_.get_csrf_token_resp_;
    data_.get_csrf_token_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_csrf_token_resp(::onebot::GetCsrfTokenResp* get_csrf_token_resp) {
  clear_data();
  if (get_csrf_token_resp) {
    set_has_get_csrf_token_resp();
    data_.get_csrf_token_resp_ = get_csrf_token_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_csrf_token_resp)
}
inline ::onebot::GetCsrfTokenResp* Frame::_internal_mutable_get_csrf_token_resp() {
  if (!_internal_has_get_csrf_token_resp()) {
    clear_data();
    set_has_get_csrf_token_resp();
    data_.get_csrf_token_resp_ = CreateMaybeMessage< ::onebot::GetCsrfTokenResp >(GetArena());
  }
  return data_.get_csrf_token_resp_;
}
inline ::onebot::GetCsrfTokenResp* Frame::mutable_get_csrf_token_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_csrf_token_resp)
  return _internal_mutable_get_csrf_token_resp();
}

// .onebot.GetCredentialsResp get_credentials_resp = 330;
inline bool Frame::_internal_has_get_credentials_resp() const {
  return data_case() == kGetCredentialsResp;
}
inline bool Frame::has_get_credentials_resp() const {
  return _internal_has_get_credentials_resp();
}
inline void Frame::set_has_get_credentials_resp() {
  _oneof_case_[0] = kGetCredentialsResp;
}
inline ::onebot::GetCredentialsResp* Frame::release_get_credentials_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_credentials_resp)
  if (_internal_has_get_credentials_resp()) {
    clear_has_data();
      ::onebot::GetCredentialsResp* temp = data_.get_credentials_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_credentials_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetCredentialsResp& Frame::_internal_get_credentials_resp() const {
  return _internal_has_get_credentials_resp()
      ? *data_.get_credentials_resp_
      : reinterpret_cast< ::onebot::GetCredentialsResp&>(::onebot::_GetCredentialsResp_default_instance_);
}
inline const ::onebot::GetCredentialsResp& Frame::get_credentials_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_credentials_resp)
  return _internal_get_credentials_resp();
}
inline ::onebot::GetCredentialsResp* Frame::unsafe_arena_release_get_credentials_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_credentials_resp)
  if (_internal_has_get_credentials_resp()) {
    clear_has_data();
    ::onebot::GetCredentialsResp* temp = data_.get_credentials_resp_;
    data_.get_credentials_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_credentials_resp(::onebot::GetCredentialsResp* get_credentials_resp) {
  clear_data();
  if (get_credentials_resp) {
    set_has_get_credentials_resp();
    data_.get_credentials_resp_ = get_credentials_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_credentials_resp)
}
inline ::onebot::GetCredentialsResp* Frame::_internal_mutable_get_credentials_resp() {
  if (!_internal_has_get_credentials_resp()) {
    clear_data();
    set_has_get_credentials_resp();
    data_.get_credentials_resp_ = CreateMaybeMessage< ::onebot::GetCredentialsResp >(GetArena());
  }
  return data_.get_credentials_resp_;
}
inline ::onebot::GetCredentialsResp* Frame::mutable_get_credentials_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_credentials_resp)
  return _internal_mutable_get_credentials_resp();
}

// .onebot.GetRecordResp get_record_resp = 331;
inline bool Frame::_internal_has_get_record_resp() const {
  return data_case() == kGetRecordResp;
}
inline bool Frame::has_get_record_resp() const {
  return _internal_has_get_record_resp();
}
inline void Frame::set_has_get_record_resp() {
  _oneof_case_[0] = kGetRecordResp;
}
inline ::onebot::GetRecordResp* Frame::release_get_record_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_record_resp)
  if (_internal_has_get_record_resp()) {
    clear_has_data();
      ::onebot::GetRecordResp* temp = data_.get_record_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_record_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetRecordResp& Frame::_internal_get_record_resp() const {
  return _internal_has_get_record_resp()
      ? *data_.get_record_resp_
      : reinterpret_cast< ::onebot::GetRecordResp&>(::onebot::_GetRecordResp_default_instance_);
}
inline const ::onebot::GetRecordResp& Frame::get_record_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_record_resp)
  return _internal_get_record_resp();
}
inline ::onebot::GetRecordResp* Frame::unsafe_arena_release_get_record_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_record_resp)
  if (_internal_has_get_record_resp()) {
    clear_has_data();
    ::onebot::GetRecordResp* temp = data_.get_record_resp_;
    data_.get_record_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_record_resp(::onebot::GetRecordResp* get_record_resp) {
  clear_data();
  if (get_record_resp) {
    set_has_get_record_resp();
    data_.get_record_resp_ = get_record_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_record_resp)
}
inline ::onebot::GetRecordResp* Frame::_internal_mutable_get_record_resp() {
  if (!_internal_has_get_record_resp()) {
    clear_data();
    set_has_get_record_resp();
    data_.get_record_resp_ = CreateMaybeMessage< ::onebot::GetRecordResp >(GetArena());
  }
  return data_.get_record_resp_;
}
inline ::onebot::GetRecordResp* Frame::mutable_get_record_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_record_resp)
  return _internal_mutable_get_record_resp();
}

// .onebot.GetImageResp get_image_resp = 332;
inline bool Frame::_internal_has_get_image_resp() const {
  return data_case() == kGetImageResp;
}
inline bool Frame::has_get_image_resp() const {
  return _internal_has_get_image_resp();
}
inline void Frame::set_has_get_image_resp() {
  _oneof_case_[0] = kGetImageResp;
}
inline ::onebot::GetImageResp* Frame::release_get_image_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_image_resp)
  if (_internal_has_get_image_resp()) {
    clear_has_data();
      ::onebot::GetImageResp* temp = data_.get_image_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_image_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetImageResp& Frame::_internal_get_image_resp() const {
  return _internal_has_get_image_resp()
      ? *data_.get_image_resp_
      : reinterpret_cast< ::onebot::GetImageResp&>(::onebot::_GetImageResp_default_instance_);
}
inline const ::onebot::GetImageResp& Frame::get_image_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_image_resp)
  return _internal_get_image_resp();
}
inline ::onebot::GetImageResp* Frame::unsafe_arena_release_get_image_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_image_resp)
  if (_internal_has_get_image_resp()) {
    clear_has_data();
    ::onebot::GetImageResp* temp = data_.get_image_resp_;
    data_.get_image_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_image_resp(::onebot::GetImageResp* get_image_resp) {
  clear_data();
  if (get_image_resp) {
    set_has_get_image_resp();
    data_.get_image_resp_ = get_image_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_image_resp)
}
inline ::onebot::GetImageResp* Frame::_internal_mutable_get_image_resp() {
  if (!_internal_has_get_image_resp()) {
    clear_data();
    set_has_get_image_resp();
    data_.get_image_resp_ = CreateMaybeMessage< ::onebot::GetImageResp >(GetArena());
  }
  return data_.get_image_resp_;
}
inline ::onebot::GetImageResp* Frame::mutable_get_image_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_image_resp)
  return _internal_mutable_get_image_resp();
}

// .onebot.CanSendImageResp can_send_image_resp = 333;
inline bool Frame::_internal_has_can_send_image_resp() const {
  return data_case() == kCanSendImageResp;
}
inline bool Frame::has_can_send_image_resp() const {
  return _internal_has_can_send_image_resp();
}
inline void Frame::set_has_can_send_image_resp() {
  _oneof_case_[0] = kCanSendImageResp;
}
inline ::onebot::CanSendImageResp* Frame::release_can_send_image_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.can_send_image_resp)
  if (_internal_has_can_send_image_resp()) {
    clear_has_data();
      ::onebot::CanSendImageResp* temp = data_.can_send_image_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.can_send_image_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::CanSendImageResp& Frame::_internal_can_send_image_resp() const {
  return _internal_has_can_send_image_resp()
      ? *data_.can_send_image_resp_
      : reinterpret_cast< ::onebot::CanSendImageResp&>(::onebot::_CanSendImageResp_default_instance_);
}
inline const ::onebot::CanSendImageResp& Frame::can_send_image_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.can_send_image_resp)
  return _internal_can_send_image_resp();
}
inline ::onebot::CanSendImageResp* Frame::unsafe_arena_release_can_send_image_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.can_send_image_resp)
  if (_internal_has_can_send_image_resp()) {
    clear_has_data();
    ::onebot::CanSendImageResp* temp = data_.can_send_image_resp_;
    data_.can_send_image_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_can_send_image_resp(::onebot::CanSendImageResp* can_send_image_resp) {
  clear_data();
  if (can_send_image_resp) {
    set_has_can_send_image_resp();
    data_.can_send_image_resp_ = can_send_image_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.can_send_image_resp)
}
inline ::onebot::CanSendImageResp* Frame::_internal_mutable_can_send_image_resp() {
  if (!_internal_has_can_send_image_resp()) {
    clear_data();
    set_has_can_send_image_resp();
    data_.can_send_image_resp_ = CreateMaybeMessage< ::onebot::CanSendImageResp >(GetArena());
  }
  return data_.can_send_image_resp_;
}
inline ::onebot::CanSendImageResp* Frame::mutable_can_send_image_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.can_send_image_resp)
  return _internal_mutable_can_send_image_resp();
}

// .onebot.CanSendRecordResp can_send_record_resp = 334;
inline bool Frame::_internal_has_can_send_record_resp() const {
  return data_case() == kCanSendRecordResp;
}
inline bool Frame::has_can_send_record_resp() const {
  return _internal_has_can_send_record_resp();
}
inline void Frame::set_has_can_send_record_resp() {
  _oneof_case_[0] = kCanSendRecordResp;
}
inline ::onebot::CanSendRecordResp* Frame::release_can_send_record_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.can_send_record_resp)
  if (_internal_has_can_send_record_resp()) {
    clear_has_data();
      ::onebot::CanSendRecordResp* temp = data_.can_send_record_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.can_send_record_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::CanSendRecordResp& Frame::_internal_can_send_record_resp() const {
  return _internal_has_can_send_record_resp()
      ? *data_.can_send_record_resp_
      : reinterpret_cast< ::onebot::CanSendRecordResp&>(::onebot::_CanSendRecordResp_default_instance_);
}
inline const ::onebot::CanSendRecordResp& Frame::can_send_record_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.can_send_record_resp)
  return _internal_can_send_record_resp();
}
inline ::onebot::CanSendRecordResp* Frame::unsafe_arena_release_can_send_record_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.can_send_record_resp)
  if (_internal_has_can_send_record_resp()) {
    clear_has_data();
    ::onebot::CanSendRecordResp* temp = data_.can_send_record_resp_;
    data_.can_send_record_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_can_send_record_resp(::onebot::CanSendRecordResp* can_send_record_resp) {
  clear_data();
  if (can_send_record_resp) {
    set_has_can_send_record_resp();
    data_.can_send_record_resp_ = can_send_record_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.can_send_record_resp)
}
inline ::onebot::CanSendRecordResp* Frame::_internal_mutable_can_send_record_resp() {
  if (!_internal_has_can_send_record_resp()) {
    clear_data();
    set_has_can_send_record_resp();
    data_.can_send_record_resp_ = CreateMaybeMessage< ::onebot::CanSendRecordResp >(GetArena());
  }
  return data_.can_send_record_resp_;
}
inline ::onebot::CanSendRecordResp* Frame::mutable_can_send_record_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.can_send_record_resp)
  return _internal_mutable_can_send_record_resp();
}

// .onebot.GetStatusResp get_status_resp = 335;
inline bool Frame::_internal_has_get_status_resp() const {
  return data_case() == kGetStatusResp;
}
inline bool Frame::has_get_status_resp() const {
  return _internal_has_get_status_resp();
}
inline void Frame::set_has_get_status_resp() {
  _oneof_case_[0] = kGetStatusResp;
}
inline ::onebot::GetStatusResp* Frame::release_get_status_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_status_resp)
  if (_internal_has_get_status_resp()) {
    clear_has_data();
      ::onebot::GetStatusResp* temp = data_.get_status_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_status_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetStatusResp& Frame::_internal_get_status_resp() const {
  return _internal_has_get_status_resp()
      ? *data_.get_status_resp_
      : reinterpret_cast< ::onebot::GetStatusResp&>(::onebot::_GetStatusResp_default_instance_);
}
inline const ::onebot::GetStatusResp& Frame::get_status_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_status_resp)
  return _internal_get_status_resp();
}
inline ::onebot::GetStatusResp* Frame::unsafe_arena_release_get_status_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_status_resp)
  if (_internal_has_get_status_resp()) {
    clear_has_data();
    ::onebot::GetStatusResp* temp = data_.get_status_resp_;
    data_.get_status_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_status_resp(::onebot::GetStatusResp* get_status_resp) {
  clear_data();
  if (get_status_resp) {
    set_has_get_status_resp();
    data_.get_status_resp_ = get_status_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_status_resp)
}
inline ::onebot::GetStatusResp* Frame::_internal_mutable_get_status_resp() {
  if (!_internal_has_get_status_resp()) {
    clear_data();
    set_has_get_status_resp();
    data_.get_status_resp_ = CreateMaybeMessage< ::onebot::GetStatusResp >(GetArena());
  }
  return data_.get_status_resp_;
}
inline ::onebot::GetStatusResp* Frame::mutable_get_status_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_status_resp)
  return _internal_mutable_get_status_resp();
}

// .onebot.GetVersionInfoResp get_version_info_resp = 336;
inline bool Frame::_internal_has_get_version_info_resp() const {
  return data_case() == kGetVersionInfoResp;
}
inline bool Frame::has_get_version_info_resp() const {
  return _internal_has_get_version_info_resp();
}
inline void Frame::set_has_get_version_info_resp() {
  _oneof_case_[0] = kGetVersionInfoResp;
}
inline ::onebot::GetVersionInfoResp* Frame::release_get_version_info_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.get_version_info_resp)
  if (_internal_has_get_version_info_resp()) {
    clear_has_data();
      ::onebot::GetVersionInfoResp* temp = data_.get_version_info_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.get_version_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::GetVersionInfoResp& Frame::_internal_get_version_info_resp() const {
  return _internal_has_get_version_info_resp()
      ? *data_.get_version_info_resp_
      : reinterpret_cast< ::onebot::GetVersionInfoResp&>(::onebot::_GetVersionInfoResp_default_instance_);
}
inline const ::onebot::GetVersionInfoResp& Frame::get_version_info_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.get_version_info_resp)
  return _internal_get_version_info_resp();
}
inline ::onebot::GetVersionInfoResp* Frame::unsafe_arena_release_get_version_info_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.get_version_info_resp)
  if (_internal_has_get_version_info_resp()) {
    clear_has_data();
    ::onebot::GetVersionInfoResp* temp = data_.get_version_info_resp_;
    data_.get_version_info_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_get_version_info_resp(::onebot::GetVersionInfoResp* get_version_info_resp) {
  clear_data();
  if (get_version_info_resp) {
    set_has_get_version_info_resp();
    data_.get_version_info_resp_ = get_version_info_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.get_version_info_resp)
}
inline ::onebot::GetVersionInfoResp* Frame::_internal_mutable_get_version_info_resp() {
  if (!_internal_has_get_version_info_resp()) {
    clear_data();
    set_has_get_version_info_resp();
    data_.get_version_info_resp_ = CreateMaybeMessage< ::onebot::GetVersionInfoResp >(GetArena());
  }
  return data_.get_version_info_resp_;
}
inline ::onebot::GetVersionInfoResp* Frame::mutable_get_version_info_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.get_version_info_resp)
  return _internal_mutable_get_version_info_resp();
}

// .onebot.SetRestartResp set_restart_resp = 337;
inline bool Frame::_internal_has_set_restart_resp() const {
  return data_case() == kSetRestartResp;
}
inline bool Frame::has_set_restart_resp() const {
  return _internal_has_set_restart_resp();
}
inline void Frame::set_has_set_restart_resp() {
  _oneof_case_[0] = kSetRestartResp;
}
inline ::onebot::SetRestartResp* Frame::release_set_restart_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.set_restart_resp)
  if (_internal_has_set_restart_resp()) {
    clear_has_data();
      ::onebot::SetRestartResp* temp = data_.set_restart_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.set_restart_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::SetRestartResp& Frame::_internal_set_restart_resp() const {
  return _internal_has_set_restart_resp()
      ? *data_.set_restart_resp_
      : reinterpret_cast< ::onebot::SetRestartResp&>(::onebot::_SetRestartResp_default_instance_);
}
inline const ::onebot::SetRestartResp& Frame::set_restart_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.set_restart_resp)
  return _internal_set_restart_resp();
}
inline ::onebot::SetRestartResp* Frame::unsafe_arena_release_set_restart_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.set_restart_resp)
  if (_internal_has_set_restart_resp()) {
    clear_has_data();
    ::onebot::SetRestartResp* temp = data_.set_restart_resp_;
    data_.set_restart_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_set_restart_resp(::onebot::SetRestartResp* set_restart_resp) {
  clear_data();
  if (set_restart_resp) {
    set_has_set_restart_resp();
    data_.set_restart_resp_ = set_restart_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.set_restart_resp)
}
inline ::onebot::SetRestartResp* Frame::_internal_mutable_set_restart_resp() {
  if (!_internal_has_set_restart_resp()) {
    clear_data();
    set_has_set_restart_resp();
    data_.set_restart_resp_ = CreateMaybeMessage< ::onebot::SetRestartResp >(GetArena());
  }
  return data_.set_restart_resp_;
}
inline ::onebot::SetRestartResp* Frame::mutable_set_restart_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.set_restart_resp)
  return _internal_mutable_set_restart_resp();
}

// .onebot.CleanCacheResp clean_cache_resp = 338;
inline bool Frame::_internal_has_clean_cache_resp() const {
  return data_case() == kCleanCacheResp;
}
inline bool Frame::has_clean_cache_resp() const {
  return _internal_has_clean_cache_resp();
}
inline void Frame::set_has_clean_cache_resp() {
  _oneof_case_[0] = kCleanCacheResp;
}
inline ::onebot::CleanCacheResp* Frame::release_clean_cache_resp() {
  // @@protoc_insertion_point(field_release:onebot.Frame.clean_cache_resp)
  if (_internal_has_clean_cache_resp()) {
    clear_has_data();
      ::onebot::CleanCacheResp* temp = data_.clean_cache_resp_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    data_.clean_cache_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onebot::CleanCacheResp& Frame::_internal_clean_cache_resp() const {
  return _internal_has_clean_cache_resp()
      ? *data_.clean_cache_resp_
      : reinterpret_cast< ::onebot::CleanCacheResp&>(::onebot::_CleanCacheResp_default_instance_);
}
inline const ::onebot::CleanCacheResp& Frame::clean_cache_resp() const {
  // @@protoc_insertion_point(field_get:onebot.Frame.clean_cache_resp)
  return _internal_clean_cache_resp();
}
inline ::onebot::CleanCacheResp* Frame::unsafe_arena_release_clean_cache_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onebot.Frame.clean_cache_resp)
  if (_internal_has_clean_cache_resp()) {
    clear_has_data();
    ::onebot::CleanCacheResp* temp = data_.clean_cache_resp_;
    data_.clean_cache_resp_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Frame::unsafe_arena_set_allocated_clean_cache_resp(::onebot::CleanCacheResp* clean_cache_resp) {
  clear_data();
  if (clean_cache_resp) {
    set_has_clean_cache_resp();
    data_.clean_cache_resp_ = clean_cache_resp;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onebot.Frame.clean_cache_resp)
}
inline ::onebot::CleanCacheResp* Frame::_internal_mutable_clean_cache_resp() {
  if (!_internal_has_clean_cache_resp()) {
    clear_data();
    set_has_clean_cache_resp();
    data_.clean_cache_resp_ = CreateMaybeMessage< ::onebot::CleanCacheResp >(GetArena());
  }
  return data_.clean_cache_resp_;
}
inline ::onebot::CleanCacheResp* Frame::mutable_clean_cache_resp() {
  // @@protoc_insertion_point(field_mutable:onebot.Frame.clean_cache_resp)
  return _internal_mutable_clean_cache_resp();
}

inline bool Frame::has_data() const {
  return data_case() != DATA_NOT_SET;
}
inline void Frame::clear_has_data() {
  _oneof_case_[0] = DATA_NOT_SET;
}
inline Frame::DataCase Frame::data_case() const {
  return Frame::DataCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace onebot

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::onebot::Frame_FrameType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::onebot::Frame_FrameType>() {
  return ::onebot::Frame_FrameType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_onebot_5fframe_2eproto
